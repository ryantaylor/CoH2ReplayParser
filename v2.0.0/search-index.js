var searchIndex = JSON.parse('{\
"bytecount":{"doc":"count occurrences of a given byte, or the number of UTF-8 …","t":[5,5,5,5,5],"n":["count","naive_count","naive_count_32","naive_num_chars","num_chars"],"q":["bytecount","","","",""],"d":["Count occurrences of a byte in a slice of bytes, fast","Count occurrences of a byte in a slice of bytes, simple","Count up to <code>(2^32)-1</code> occurrences of a byte in a slice of …","Count the number of UTF-8 encoded Unicode codepoints in a …","Count the number of UTF-8 encoded Unicode codepoints in a …"],"i":[0,0,0,0,0],"f":[[1,2],[1,2],[1,2],[[],2],[[],2]],"p":[[15,"u8"],[15,"usize"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":["byteorderd":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,24,1,2,24,1,2,24,24,24,24,24,1,2,24,1,2,24,1,2,24,1,2,1,2,1,2,1,2,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,25,25,25,25,24,25,25,24,24,25,25,1,2,24,25,25,1,2,24,25,25,1,2,24,25,25,1,2,25,25,24,24,25,25,1,2,24,25,25,1,2,25,25,24,24,25,25,1,2,24,25,25,1,2,25,25,24,25,25,1,2,24,25,25,1,2,1,2,1,2,1,2,1,2,26,26,24,24,26,26,24,24,26,26,24,24,26,26,24,24,26,26,24,26,26,24,24,26,26,24,26,26,24,24,26,26,24,26,26,24,26,26,24,24,26,26,1,2,24,1,2,24,26,26,1,2,24,1,2,26,26,24,24,26,26,1,2,24,1,2,26,26,24,24,26,26,1,2,24,1,2,26,26,24,26,26,1,2,24,26,26,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[[]],[[]],[[1,1],[[7,[3]]]],[[2,2],[[7,[3]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],8],[[],9],[[],9],[[]],[[],9],[[],9],[[]],[[],[[9,[10]]]],[[],[[9,[10]]]],[[],10],[[],9],[[],9],[[]],[[],9],[[],9],[[]],[[],[[9,[11]]]],[[],[[9,[11]]]],[[],11],[[],9],[[],9],[[]],[[],[[9,[12]]]],[[],[[9,[12]]]],[[],12],[[],9],[[],9],[[]],[[],[[9,[13]]]],[[],[[9,[13]]]],[[],13],[[],[[9,[13]]]],[[],[[9,[13]]]],[[],13],[[],9],[[],9],[[]],[[],[[9,[14]]]],[[],[[9,[14]]]],[[],14],[[],[[9,[14]]]],[[],[[9,[14]]]],[[],14],[[],9],[[],9],[[]],[[],[[9,[15]]]],[[],[[9,[15]]]],[[],9],[[],9],[16,[[9,[14]]]],[16,[[9,[14]]]],[16,14],[16,[[9,[11]]]],[16,[[9,[11]]]],[16,11],[[],17],[[],[[9,[17]]]],[[],[[9,[17]]]],[[],17],[[],17],[[]],[[],9],[[],9],[[]],[[]],[[],18],[[],[[9,[18]]]],[[],[[9,[18]]]],[[],18],[[],18],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[19]]]],[[],[[9,[19]]]],[[],19],[[],19],[[],[[9,[19]]]],[[],[[9,[19]]]],[[],19],[[],19],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[20]]]],[[],[[9,[20]]]],[[],20],[[],20],[[],[[9,[20]]]],[[],[[9,[20]]]],[[],20],[[],20],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[21]]]],[[],[[9,[21]]]],[16,20],[16,[[9,[20]]]],[16,[[9,[20]]]],[16,20],[16,20],[16,17],[16,[[9,[17]]]],[16,[[9,[17]]]],[16,17],[16,17],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[8,9],[8,9],[8],[[]],[10,9],[10,9],[10],[[]],[11,9],[11,9],[11],[[]],[12,9],[12,9],[12],[[]],[13,9],[13,9],[13],[13,9],[13,9],[13],[[]],[14,9],[14,9],[14],[14,9],[14,9],[14],[[]],[15,9],[15,9],[[]],[[14,16],9],[[14,16],9],[[14,16]],[[11,16],9],[[11,16],9],[[11,16]],[17],[17,9],[17,9],[17],[17],[[]],[[]],[[]],[18],[18,9],[18,9],[18],[18],[[]],[[]],[[]],[19,9],[19,9],[19],[19],[19,9],[19,9],[19],[19],[[]],[[]],[[]],[20,9],[20,9],[20],[20],[20,9],[20,9],[20],[20],[[]],[[]],[[]],[21,9],[21,9],[[20,16]],[[20,16],9],[[20,16],9],[[20,16]],[[20,16]],[[17,16]],[[17,16],9],[[17,16],9],[[17,16]],[[17,16]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"f32"],[6,"Result"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"usize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"magnus":{"doc":"Magnus is a library for writing Ruby extentions in Rust, …","t":[8,2,3,2,2,2,24,3,2,2,2,2,3,3,3,8,8,2,2,8,16,2,2,2,3,3,2,3,3,3,2,3,2,3,3,2,2,2,3,3,2,3,8,2,24,2,11,11,11,11,11,5,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,5,11,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,23,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,14,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,0,0,0,14,0,11,11,11,11,11,5,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,23,13,13,13,13,13,13,3,4,4,4,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,8,16,3,5,11,11,5,5,11,11,5,11,11,5,11,11,5,5,5,5,5,5,11,11,11,11,5,5,11,11,5,5,5,5,11,11,5,10,11,11,10,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,5,5,5,11,11,5,11,11,11,11,5,11,13,13,13,13,13,4,13,13,4,13,3,8,13,3,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,6,13,13,4,13,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,5,5,5,5,5,5,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,4,8,3,13,13,13,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,5,11,11,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,8,8,8,8,12,11,11,11,11,5,11,11,5,11,11,12,12,12,12,12,5,12,12,12,11,11,11,11,11,11,3,3,8,8,8,3,8,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,8,17,17,17,17,3,3,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArgList","Attr","Binding","Class","DataType","DataTypeFunctions","DataTypeFunctions","Enumerator","Error","Exception","ExceptionClass","Fixnum","Float","Flonum","Integer","IntoValue","IntoValueFromNative","Module","Numeric","Object","Output","QFALSE","QNIL","QTRUE","RArray","RBignum","RClass","RComplex","RFile","RFloat","RHash","RMatch","RModule","RObject","RRational","RRegexp","RString","RStruct","RTypedData","Range","StaticSymbol","Symbol","TryConvert","TypedData","TypedData","Value","abs","arg","as_slice","as_static","assoc","backref_get","backref_number","beg","beg_len","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_super","cat","class","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","concat","conjugate","current_receiver","define_class","define_error","define_global_const","define_global_function","define_module","define_singleton_method","define_singleton_method","define_variable","delete","delete_at","den","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","dup","each","encoding","end","entry","error","eval","eval","eval","exception","excl","extend_object","extend_object","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_f64","from_i64","from_i64","from_iter","from_slice","from_u64","from_u64","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_value","from_vec","function","gc","get","imag","includes","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_arg_list","into_id_with","into_iter","into_value","into_value","into_value_unchecked","into_value_unchecked","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","is_empty","is_negative","is_positive","is_shared","is_static","ivar_get","ivar_get","ivar_set","ivar_set","join","last","len","local_variable_get","local_variable_set","matched","memoize","method","method","module","name","new","new","new","new","new","next","nth_defined","nth_match","num","numeric","plus","polar","pop","post","pre","prelude","push","r_hash","r_regexp","r_string","r_string","r_struct","rassoc","rationalize","rationalize_with_prec","real","replace","require","resize","reverse","rotate","scan_args","shift","singleton_class","singleton_class","sort","store","subseq","to_array","to_ary","to_f64","to_f64","to_i16","to_i32","to_i64","to_i64","to_i8","to_isize","to_isize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_range_with_len","to_static","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u16","to_u32","to_u64","to_u64","to_u8","to_usize","to_usize","to_value_array","to_vec","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_data","unshift","value","with_capacity","wrap","wrap","Enumerator","Enumerator","Enumerator","Iter","Iter","Iter","Proc","Yield","YieldSplat","YieldValues","arity","block_given","block_proc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","deref","fmt","fmt","from","from","from","from","from_fn","from_value","into","into","into","into","into_value_with","is_lambda","new","to_owned","to_string","try_convert","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","yield_splat","yield_value","yield_values","Class","Instance","RClass","array","as_r_class","as_r_class","basic_object","binding","borrow","borrow_mut","class","clone","clone_into","complex","default","deref","dir","encoding","enumerator","false_class","file","float","fmt","fmt","from","from_value","hash","integer","into","into_value_with","io","match_class","method","module","name","name","name_error_mesg","new","new","new","new_instance","new_instance","new_instance","nil_class","numeric","object","proc","random","range","rational","refinement","regexp","stat","string","struct_class","superclass","superclass","symbol","thread","time","to_owned","to_string","true_class","try_convert","try_from","try_into","type_id","unbound_method","undef_alloc_func","Alnum","Alpha","Ascii","Blank","Broken","CType","CharFound","Cntrl","Coderange","Digit","Encoding","EncodingCapable","Graph","Index","Invalid","Lower","MbcLen","NeedMore","Newline","Print","Punct","RbEncoding","SevenBit","Space","Unknown","Upper","Valid","Word","Xdigit","ascget","ascii8bit","ascii8bit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","chr","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","codelen","codepoint_len","compatible","copy","default_external","default_external","default_internal","default_internal","deref","enc_associate","enc_get","enc_set","eq","eq","fast_mbclen","filesystem","filesystem","find","find","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_value","into","into","into","into","into","into","into_value_with","into_value_with","is_code_ctype","is_mbc_newline","locale","locale","mbclen","mbmaxlen","mbminlen","name","precise_mbclen","to_owned","to_owned","to_owned","to_owned","to_string","try_convert","try_convert","try_convert","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","usascii","usascii","utf8","utf8","Break","Error","Error","Exception","Fatal","Jump","Next","Raise","Redo","Result","Retry","Return","Tag","Throw","borrow","borrow","borrow_mut","borrow_mut","bug","fmt","fmt","fmt","fmt","from","from","from","from","into","into","is_kind_of","iter_break","new","runtime_error","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","warning","Exception","ExceptionClass","arg_error","as_r_class","backtrace","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","enc_compat_error","encoding_error","eof_error","exception","fatal","float_domain_error","fmt","fmt","fmt","fmt","from","from","from_value","from_value","frozen_error","index_error","interrupt","into","into","into_value_with","into_value_with","io_error","key_error","load_error","local_jump_error","math_domain_error","name_error","new","new_instance","no_matching_pattern_error","no_matching_pattern_key_error","no_mem_error","no_method_error","not_imp_error","range_error","regexp_error","runtime_error","script_error","security_error","signal","standard_error","stop_iteration","syntax_error","sys_stack_error","system_call_error","system_exit","thread_error","to_owned","to_owned","to_string","to_string","try_convert","try_convert","try_from","try_from","try_into","try_into","type_error","type_id","type_id","zero_div_error","adjust_memory_usage","all_stats","count","disable","enable","location","mark","mark_movable","mark_slice","register_address","register_mark_object","start","stat","unregister_address","BlockReturn","InitReturn","Method","ReturnValue","Attr","Module","RModule","Read","ReadWrite","Write","ancestors","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","comparable","const_get","const_set","define_alias","define_attr","define_class","define_error","define_method","define_module","define_module_function","define_private_method","define_protected_method","deref","enumerable","errno","file_test","fmt","fmt","fmt","from","from","from_value","gc","include_module","into","into","into_value_with","is_inherited","kernel","math","new","prepend_module","process","to_owned","to_owned","to_string","try_convert","try_from","try_from","try_into","try_into","type_id","type_id","wait_readable","wait_writable","Numeric","NumericValue","borrow","borrow_mut","clone","clone_into","coerce_bin","coerce_bit","coerce_cmp","coerce_relop","deref","fmt","fmt","from","into","into_value_with","to_owned","to_string","try_convert","try_from","try_into","type_id","_","_","_","_","Continue","Delete","ForEach","RHash","Stop","aref","aset","borrow","borrow","borrow_mut","borrow_mut","bulk_insert","clear","clone","clone_into","delete","deref","fetch","fmt","fmt","foreach","from","from","from_iter","from_value","get","into","into","into_value_with","is_empty","len","lookup","new","size","to_hash_map","to_owned","to_string","to_vec","try_convert","try_from","try_from","try_into","try_into","type_id","type_id","update","with_capacity","EXTEND","IGNORECASE","MULTILINE","Opts","RRegexp","ascii_range","borrow","borrow","borrow_mut","borrow_mut","capture_group","clone","clone","clone_into","clone_into","default","deref","dont_capture_group","dotall","extend","find_longest","find_not_empty","fmt","fmt","from","from","from_value","ignorecase","into","into","into_value_with","is_ascii_range","is_capture_group","is_dont_capture_group","is_dotall","is_extend","is_find_longest","is_find_not_empty","is_ignorecase","is_multiline","is_negate_singleline","is_newline_crlf","is_notbol","is_notbos","is_noteol","is_noteos","is_posix_bracket_all_range","is_singleline","is_word_bound_all_range","multiline","negate_singleline","new","new","new_str","newline_crlf","notbol","notbos","noteol","noteos","options","posix_bracket_all_range","reg_match","singleline","to_owned","to_owned","to_string","try_convert","try_from","try_from","try_into","try_into","type_id","type_id","word_bound_all_range","CharBytes","Codepoints","FString","IntoRString","RString","as_interned_str","as_r_string","as_slice","as_slice","as_str","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf_append","buf_new","capacity","cat","char_bytes","chr","clone","clone","clone_into","clone_into","cmp","codepoints","comparable","conv_enc","deref","deref","drop_bytes","dump","ellipsize","enc_coderange","enc_coderange_clear","enc_coderange_scan","enc_coderange_set","enc_new","flush","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_slice","from_value","into","into","into","into","into_iter","into_iter","into_r_string","into_r_string_unchecked","into_r_string_with","into_r_string_with","into_value_with","into_value_with","is_empty","is_interned","is_utf8_compatible_encoding","len","length","new","new_frozen","new_shared","next","next","offset","plus","replace","scrub","shared_replace","split","test_as_str","test_as_str","times","to_char","to_interned_str","to_owned","to_owned","to_string","to_string","to_string","to_string_lossy","to_string_lossy","try_convert","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","with_capacity","write","RStruct","aref","as_slice","aset","borrow","borrow_mut","clone","clone_into","define_struct","deref","fmt","fmt","from","from_value","get","getmember","into","into_value_with","members","size","to_owned","to_string","try_convert","try_from","try_into","type_id","Args","KwArgs","ScanArgsBlock","ScanArgsKw","ScanArgsOpt","ScanArgsRequired","ScanArgsSplat","block","borrow","borrow","borrow_mut","borrow_mut","check_arity","from","from","get_kwargs","into","into","keywords","optional","optional","required","required","scan_args","splat","splat","trailing","try_from","try_from","try_into","try_into","type_id","type_id","DataType","DataTypeBuilder","DataTypeFunctions","Hash","IsEql","Obj","TypedData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","class","class_for","clone","clone_into","compact","compact","data_type","deref","drop","fmt","fmt","free","free_immediately","from","from","from","frozen_shareable","get","hash","into","into","into","into_value_with","is_eql","mark","mark","new","size","size","to_owned","to_string","try_convert","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wb_protected","wrap","BoxValue","Fixnum","Flonum","Id","IntoId","QFALSE","QNIL","QTRUE","QUNDEF","Qfalse","Qnil","Qtrue","Qundef","ReprValue","StaticSymbol","Value","as_mut","as_ref","block_call","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check_frozen","check_funcall","class","classname","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","drop","enumeratorize","eq","eql","equal","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_i64","from_u64","from_value","from_value","from_value","from_value","from_value","from_value","from_value","funcall","funcall_public","funcall_with_block","hash","inspect","into","into","into","into","into","into","into","into","into","into","into_id","into_id_unchecked","into_id_with","into_id_with","into_id_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","into_value_with","is_frozen","is_kind_of","is_nil","name","name","new","new","new","respond_to","to_bool","to_f64","to_i16","to_i32","to_i64","to_i8","to_isize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_r_string","to_s","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u16","to_u32","to_u64","to_u8","to_usize","to_value","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["magnusmagnus::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::class","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::exception","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::gc","","","","","","","","","","","","","","magnus::method","","","","magnus::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::numeric","","","","","","","","","","","","","","","","","","","","","","magnus::prelude","","","","magnus::r_hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::r_regexp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::r_string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::r_struct","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::scan_args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::typed_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","magnus::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait for types that can be used as an arguments list when …","","A Value known to be an instance of Binding.","","","","Derives <code>DataTypeFunctions</code> with default implementations, …","Wrapper type for a Value known to be an instance of Ruby’…","","","","","A type wrapping either a <code>Flonum</code> value or a Value known to …","A Value known to be a flonum, Ruby’s internal …","A type wrapping either a <code>Fixnum</code> or a <code>RBignum</code>.","Conversions from Rust types into <code>Value</code>.","Conversions from Rust types that do not contain <code>Value</code> into …","","","Functions available all non-immediate values.","The type of the arguments list. Must convert to <code>&amp;[Value]</code> …","","","","A Value pointer to a RArray struct, Ruby’s internal …","A Value pointer to a RBignum struct, Ruby’s internal …","","A Value pointer to a RComplex struct, Ruby’s internal …","A Value pointer to a RFile struct, Ruby’s internal …","A Value pointer to a RFloat struct, Ruby’s internal …","","A Value pointer to a RMatch struct, Ruby’s internal …","","A Value pointer to a RObject struct, Ruby’s internal …","A Value pointer to a RRational struct, Ruby’s internal …","","","","A Value pointer to a RTypedData struct, Ruby’s internal …","Wrapper type for a Value known to be an instance of Ruby’…","","A type wrapping either a <code>StaticSymbol</code> or a Value pointer …","Conversions from <code>Value</code> to Rust types.","","Derives <code>TypedData</code>, allowing the type to be passed to Ruby …","","Returns the absolute (or the magnitude) of <code>self</code>.","Returns the argument (or the angle) of the polar form of …","Return <code>self</code> as a slice of <code>Value</code>s.","If <code>self</code> is static, returns <code>self</code> as a <code>StaticSymbol</code>, …","Search <code>self</code> as an ‘associative array’ for <code>key</code>.","Returns the result of the most recent regexp match.","Returns the index for the named capture group.","Return the value that defines the beginning of the range, …","Given a total <code>length</code>, returns a beginning index and length …","Types and functions for working with Ruby blocks and Procs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call the super method of the current method context.","Concatenate elements from the slice <code>s</code> to <code>self</code>.","Types and functions for working with Ruby classes.","Remove all elements from <code>self</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recursively compares elements of the two arrays using Ruby…","Concatenate elements from Ruby array <code>other</code> to <code>self</code>.","Returns the complex conjugate.","Return the Ruby <code>self</code> of the current method context.","Define a class in the root scope.","Define an exception class in the root scope.","Define a global constant.","Define a method in the root scope.","Define a module in the root scope.","Define a singleton method in <code>self</code>’s scope.","Define a singleton method in <code>self</code>’s scope.","Define a global variable.","Remove all elements from <code>self</code> that match <code>item</code>’s <code>==</code> …","Remove and return the element of <code>self</code> at <code>index</code>, converting …","Returns <code>self</code>’s denominator.","","","","","","","","","","","","","","","","Create a new <code>RArray</code> that is a duplicate of <code>self</code>.","Returns an <code>Enumerator</code> over <code>self</code>.","Types and functions for working with encodings.","Return the value that defines the end of the range, …","Return the element at <code>offset</code>, converting it to a <code>T</code>.","Rust types for working with Ruby Exceptions and other …","Evaluate a string of Ruby code, converting the result to a …","Evaluate a string of Ruby code within the binding’s …","Evaluate a literal string of Ruby code with the given …","Types and functions for working with Ruby exceptions.","Returns <code>true</code> if the range excludes its end value, <code>false</code> if …","Extend <code>self</code> with <code>module</code>.","Extend <code>self</code> with <code>module</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a new <code>Float</code> from an <code>f64</code>.","Create a new <code>RFloat</code> from an <code>f64.</code>","Create a new <code>Integer</code> from an <code>i64.</code>","Create a new <code>RBignum</code> from an <code>i64.</code>","","Create a new <code>RArray</code> containing the elements in <code>slice</code>.","Create a new <code>Integer</code> from a <code>u64.</code>","Create a new <code>RBignum</code> from an <code>u64.</code>","Return <code>Some(Binding)</code> if <code>val</code> is a <code>Binding</code>, <code>None</code> otherwise.","Return <code>Some(Enumerator)</code> if <code>val</code> is an <code>Enumerator</code>, <code>None</code> …","Return <code>Some(Float)</code> if <code>val</code> is a <code>Float</code>, <code>None</code> otherwise.","Return <code>Some(Integer)</code> if <code>val</code> is an <code>Integer</code>, <code>None</code> otherwise.","Return <code>Some(RArray)</code> if <code>val</code> is a <code>RArray</code>, <code>None</code> otherwise.","Return <code>Some(RBignum)</code> if <code>val</code> is a <code>RBignum</code>, <code>None</code> otherwise.","Return <code>Some(RComplex)</code> if <code>val</code> is a <code>RComplex</code>, <code>None</code> otherwise.","Return <code>Some(RFile)</code> if <code>val</code> is a <code>RFile</code>, <code>None</code> otherwise.","Return <code>Some(RFloat)</code> if <code>val</code> is a <code>RFloat</code>, <code>None</code> otherwise.","Return <code>Some(RMatch)</code> if <code>val</code> is a <code>RMatch</code>, <code>None</code> otherwise.","Return <code>Some(RObject)</code> if <code>val</code> is a <code>RObject</code>, <code>None</code> otherwise.","Return <code>Some(RRational)</code> if <code>val</code> is a <code>RRational</code>, <code>None</code> …","Return <code>Some(RTypedData)</code> if <code>val</code> is a <code>RTypedData</code>, <code>None</code> …","Return <code>Some(Range)</code> if <code>val</code> is an <code>Range</code>, <code>None</code> otherwise.","Return <code>Some(Symbol)</code> if <code>val</code> is a <code>Symbol</code>, <code>None</code> otherwise.","Create a new <code>RArray</code> from a Rust vector.","Wrap a Rust function item with Ruby type conversion and …","Functions for working with Ruby’s Garbage Collector.","Get a reference to the Rust type wrapped in the Ruby …","Returns the imaginary part of <code>self</code>.","Returns <code>true</code> if <code>val</code> is in <code>self</code>, <code>false</code> otherwise.","Mark a function as the ‘init’ function to be run for a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into a type that can be used as a Ruby …","","","Convert <code>self</code> into <code>Value</code>.","Convert <code>self</code> into <code>Value</code>.","Convert <code>self</code> into <code>Value</code>.","Convert <code>self</code> into <code>Value</code>.","Convert <code>self</code> into <code>Value</code>.","","","","","","","","","","","","","","","","Return whether self contains any entries or not.","Check if <code>self</code> is negative.","Check if <code>self</code> is positive.","Returns true if both <code>self</code> and <code>other</code> share the same backing …","Returns whether <code>self</code> is static or not.","Get the value for the instance variable <code>name</code> within <code>self</code>’…","Get the value for the instance variable <code>name</code> within <code>self</code>’…","Set the value for the instance variable <code>name</code> within <code>self</code>’…","Set the value for the instance variable <code>name</code> within <code>self</code>’…","Stringify the contents of <code>self</code> and join the sequence with …","Returns the last capture.","Return the number of entries in <code>self</code> as a Rust <code>usize</code>.","Get the named local variable from the binding.","Set the named local variable in the binding.","Returns the string matched.","Utility to simplify initialising a static with …","Types and Traits for exposing Rust functions as Ruby …","Wrap a Rust function item with Ruby type conversion and …","Types and functions for working with Ruby modules.","Return the symbol as a string. If the symbol is static …","Create a new empty <code>RArray</code>.","Create a new <code>RComplex</code>.","Create a new <code>RRational</code>.","Create a new <code>Range</code>.","Create a new <code>Symbol</code> from <code>name</code>.","","Returns whether the <code>n</code>th capture group is set.","Returns the string captured by the <code>n</code>th capture group.","Returns <code>self</code>’s numerator.","Types and Traits for working with Ruby’s Numeric class.","Create a new <code>RArray</code> containing the both the elements in …","Create a new <code>RComplex</code> using polar representation.","Remove and return the last element of <code>self</code>, converting it …","Returns the string after the segment matched.","Returns the string before the segment matched.","Traits that commonly should be in scope.","Add <code>item</code> to the end of <code>self</code>.","Types and functions for working with Ruby’s Hash class.","Types for working with Ruby’s Regexp class.","Types for working with Ruby’s String class.","Create a <code>RString</code> from a Rust str literal.","Types and functions for working with Ruby’s Struct class.","Search <code>self</code> as an ‘associative array’ for <code>value</code>.","Returns a rational approximation of <code>self</code>.","Returns a rational approximation of <code>self</code>.","Returns the real part of <code>self</code>.","Replace the contents of <code>self</code> with <code>from</code>.","Finds and loads the given feature if not already loaded.","Expand or shrink the length of <code>self</code>.","Reverses the order of <code>self</code> in place.","Rotates the elements of <code>self</code> in place by <code>rot</code> positions.","Types and functions for complex method arguments.","Remove and return the first element of <code>self</code>, converting it …","Finds or creates the singleton class of <code>self</code>.","Finds or creates the singleton class of <code>self</code>.","Storts the elements of <code>self</code> in place using Ruby’s <code>&lt;=&gt;</code> …","Set the element at <code>offset</code>.","Create a new array from a subsequence of <code>self</code>.","Convert <code>self</code> to a Rust array of <code>T</code>s, of length <code>N</code>.","Convert or wrap a Ruby <code>Value</code> to a <code>RArray</code>.","Convert <code>self</code> to a <code>f64</code>.","Convert <code>self</code> to a <code>f64</code>.","Convert <code>self</code> to an <code>i16</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i32</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i64</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i64</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i8</code>. Returns <code>Err</code> if <code>self</code> is out of range …","Convert <code>self</code> to an <code>isize</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>isize</code>. Returns <code>Err</code> if <code>self</code> is out of …","","","","","","","","","","","","","","","","Given a total <code>length</code>, converts the Ruby <code>Range</code> to a Rust …","If <code>self</code> is already static simply returns <code>self</code> as a …","","","","","","","","","","","","","","","","Convert <code>self</code> to a <code>u16</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u32</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u64</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u64</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u8</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>usize</code>. Returns <code>Err</code> if <code>self</code> is negative …","Convert <code>self</code> to a <code>usize</code>. Returns <code>Err</code> if <code>self</code> is negative …","Convert <code>self</code> to a Rust array of <code>Value</code>s, of length <code>N</code>.","Convert <code>self</code> to a Rust vector of <code>T</code>s. Errors if converting …","Convert <code>val</code> into <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types and Traits for wrapping Rust types as Ruby objects.","Add <code>item</code> to the beginning of <code>self</code>.","Types for working with Ruby’s VALUE type, representing …","Create a new empty <code>RArray</code> with capacity for <code>n</code> elements …","Wrap the Rust type <code>T</code> in a Ruby object.","Allow a Rust type to be passed to Ruby, automatically …","Returns <code>Enumerator</code> from the method.","Returns <code>Enumerator</code> from the method.","Returns <code>Enumerator</code> from the method.","Yields <code>I::Item</code> to given block.","Yields <code>I::Item</code> to given block.","Yields <code>I::Item</code> to given block.","Wrapper type for a Value known to be an instance of …","Helper type for functions that either yield a single value …","Helper type for functions that either yield an array to a …","Helper type for functions that either yield multiple …","Returns the number of arguments <code>self</code> takes.","Returns whether a Ruby block has been supplied to the …","Returns the block given to the current method as a <code>Proc</code> …","","","","","","","","","Call the proc with <code>args</code>.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Proc</code>.","Return <code>Some(Proc)</code> if <code>val</code> is a <code>Proc</code>, <code>None</code> otherwise.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether or not <code>self</code> is a lambda.","Create a new <code>Proc</code>.","","","","","","","","","","","","","","","","Yields a Ruby Array to the block given to the current …","Yields a value to the block given to the current method.","Yields multiple values to the block given to the current …","Functions available on all types representing a Ruby class.","The type representing an instance of the class <code>Self</code>.","A Value pointer to a RClass struct, Ruby’s internal …","Return Ruby’s <code>Array</code> class.","Return <code>self</code> as an <code>RClass</code>.","","Return Ruby’s <code>BasicObject</code> class.","Return Ruby’s <code>Binding</code> class.","","","Return Ruby’s <code>Class</code> class.","","","Return Ruby’s <code>Complex</code> class.","","","Return Ruby’s <code>Dir</code> class.","Return Ruby’s <code>Encoding</code> class.","Return Ruby’s <code>Enumerator</code> class.","Return Ruby’s <code>FalseClass</code> class.","Return Ruby’s <code>File</code> class.","Return Ruby’s <code>Float</code> class.","","","Returns the argument unchanged.","Return <code>Some(RClass)</code> if <code>val</code> is a <code>RClass</code>, <code>None</code> otherwise.","Return Ruby’s <code>Hash</code> class.","Return Ruby’s <code>Integer</code> class.","Calls <code>U::from(self)</code>.","","Return Ruby’s <code>IO</code> class.","Return Ruby’s <code>MatchData</code> class.","Return Ruby’s <code>Method</code> class.","Return Ruby’s <code>Module</code> class.","Return the name of <code>self</code>.","Return the name of <code>self</code>.","Return Ruby’s <code>NameError::Message</code> class.","Create a new anonymous class.","","Create a new anonymous class.","Create a new object, an instance of <code>self</code>, passing the …","Create a new object, an instance of <code>self</code>, passing the …","","Return Ruby’s <code>NilClass</code> class.","Return Ruby’s <code>Numeric</code> class.","Return Ruby’s <code>Object</code> class.","Return Ruby’s <code>Proc</code> class.","Return Ruby’s <code>Random</code> class.","Return Ruby’s <code>Range</code> class.","Return Ruby’s <code>Rational</code> class.","Return Ruby’s <code>Refinement</code> class.","Return Ruby’s <code>Regexp</code> class.","Return Ruby’s <code>File::Stat</code> class.","Return Ruby’s <code>String</code> class.","Return Ruby’s <code>Struct</code> class.","Returns the parent class of <code>self</code>.","Returns the parent class of <code>self</code>.","Return Ruby’s <code>Symbol</code> class.","Return Ruby’s <code>Thread</code> class.","Return Ruby’s <code>Time</code> class.","","","Return Ruby’s <code>TrueClass</code> class.","","","","","Return Ruby’s <code>UnboundMethod</code> class.","Remove the allocator function of a class.","Alphanumeric.","Alphabetical.","ASCII.","Blank.","The string holds values that are invalid for its encoding.","A character type.","Found a valid char, value is the char’s length.","Control.","Possible states of how a string matches its encoding.","Digit.","Wrapper type for a Value known to be an instance of Ruby’…","Trait that marks Ruby types cable of having an encoding.","Graph.","The index of an encoding in Ruby’s internal encodings …","The bytes at the start of the slice are not valid for the …","Lowercase.","Return value for <code>RbEncoding::precise_mbclen</code>.","The slice ended before the end of the current char. Value …","Newline.","Printable.","Punctuation.","Ruby’s internal encoding type.","The string is entirely within the 0 to 127 ASCII range.","Whitespace.","It is unknown if the string is valid for its encoding.","Uppercase.","The string is valid for its encoding.","Word.","Xdigit.","If the first character in <code>slice</code> is included in ASCII …","Returns the encoding that represents ASCII-8BIT a.k.a. …","Returns the index for ASCII-8BIT a.k.a. binary.","","","","","","","","","","","","","Returns the common encoding between <code>v1</code> and <code>v2</code>, or <code>Err</code>.","Encode the codepoint <code>code</code> as a series of bytes in the …","","","","","","","","","Returns the number of bytes required to represent the code …","Returns the codepoint and length in bytes of the first …","Returns the common encoding between <code>v1</code> and <code>v2</code>, or <code>None</code>.","Compies the encoding from <code>src</code> to <code>dst</code>.","Returns the default external encoding.","Returns the default internal encoding as a Ruby object.","Returns the default internal encoding.","Returns the default external encoding as a Ruby object.","","Set <code>self</code>’s encoding, along with performing additional …","Get the encoding of <code>self</code>.","Set <code>self</code>’s encoding.","","","Returns the number of bytes of the first character in <code>slice</code>…","Returns the filesystem encoding.","Returns the index for filesystem encoding.","Returns the encoding with the name or alias <code>name</code>.","Returns the index for the encoding with the name or alias …","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Return <code>Some(Encoding)</code> if <code>val</code> is an <code>Encoding</code>, <code>None</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the given codepoint <code>code</code> is of the …","Returns <code>true</code> if the first character in <code>slice</code> is a newline …","Returns the encoding that represents the process’ …","Returns the index for the process’ current locale …","Returns the number of bytes of the first character in <code>slice</code>…","Returns the maximum number of bytes the encoding may need …","Returns the minimum number of bytes the encoding needs to …","Returns the canonical name of the encoding.","Returns the number of bytes of the first character in <code>slice</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the encoding that represents US-ASCII.","Returns the index for US-ASCII.","Returns the encoding that represents UTF-8.","Returns the index for UTF-8.","Break from a block.","A Rust representation of a Ruby <code>Exception</code> or other …","An error generated in Rust code that will raise an …","A Ruby <code>Exception</code> captured from Ruby as an Error.","Block or method exiting early due to unrecoverable error.","An interrupt, such as <code>break</code> or <code>throw</code>.","Early return from a block, continuing to next block call.","Ruby stack unwound with an error.","Break from a block that will be subsequently re-run.","Shorthand for <code>std::result::Result&lt;T, Error&gt;</code>.","Break from a block after an error, block will be …","Early return from a block.","The state of a call to Ruby exiting early, interrupting …","Ruby stack unwound as flow control.","","","","","Immediately terminate the process, printing Ruby internal …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Matches the internal <code>Exception</code> against <code>class</code> with same …","Create a new error that will break from a loop when …","Create a new <code>Error</code> that can be raised as a Ruby <code>Exception</code> …","Create a new <code>RuntimeError</code> with <code>msg</code>.","","","","","","","","","Outputs <code>s</code> to Ruby’s stderr if Ruby is configured to …","Wrapper type for a Value known to be an instance of Ruby’…","A Value known to be an instance of Class and subclass of …","Return Ruby’s <code>ArgumentError</code> class.","","Return the Ruby backtrace for the exception, as a <code>RArray</code> of","","","","","","","","","","","","Return Ruby’s <code>Encoding::CompatibilityError</code> class.","Return Ruby’s <code>EncodingError</code> class.","Return Ruby’s <code>EOFError</code> class.","Return Ruby’s <code>Exception</code> class.","Return Ruby’s <code>fatal</code> class.","Return Ruby’s <code>FloatDomainError</code> class.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return <code>Some(Exception)</code> if <code>val</code> is an <code>Exception</code>, <code>None</code> …","Return <code>Some(ExceptionClass)</code> if <code>val</code> is an <code>ExceptionClass</code>, …","Return Ruby’s <code>FrozenError</code> class.","Return Ruby’s <code>IndexError</code> class.","Return Ruby’s <code>Interrupt</code> class.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return Ruby’s <code>IOError</code> class.","Return Ruby’s <code>KeyError</code> class.","Return Ruby’s <code>LoadError</code> class.","Return Ruby’s <code>LocalJumpError</code> class.","Return Ruby’s <code>Math::DomainError</code> class.","Return Ruby’s <code>NameError</code> class.","","","Return Ruby’s <code>NoMatchingPatternError</code> class.","Return Ruby’s <code>NoMatchingPatternKeyError</code> class.","Return Ruby’s <code>NoMemoryError</code> class.","Return Ruby’s <code>NoMethodError</code> class.","Return Ruby’s <code>NotImpError</code> class.","Return Ruby’s <code>RangeError</code> class.","Return Ruby’s <code>RegexpError</code> class.","Return Ruby’s <code>RuntimeError</code> class.","Return Ruby’s <code>ScriptError</code> class.","Return Ruby’s <code>SecurityError</code> class.","Return Ruby’s <code>SignalException</code> class.","Return Ruby’s <code>StandardError</code> class.","Return Ruby’s <code>StopIteration</code> class.","Return Ruby’s <code>SyntaxError</code> class.","Return Ruby’s <code>SystemStackError</code> class.","Return Ruby’s <code>SystemCallError</code> class.","Return Ruby’s <code>SystemExit</code> class.","Return Ruby’s <code>ThreadError</code> class.","","","","","","","","","","","Return Ruby’s <code>TypeError</code> class.","","","Return Ruby’s <code>ZeroDivisionError</code> class.","Inform Ruby of external memory usage.","Returns all possible key/value pairs for <code>stat</code> as a Ruby …","Returns the number of garbage collections that have been …","Disable automatic GC runs.","Enable automatic GC run.","Get the new location of an object.","Mark an Object.","Mark an Object and let Ruby know it is moveable.","Mark multiple Objects.","Inform Ruby’s garbage collector that <code>valref</code> points to a …","Registers <code>value</code> to never be garbage collected.","Trigger a “full” GC run.","Returns the GC profiling value for <code>key</code>.","Inform Ruby’s garbage collector that <code>valref</code> that was …","Trait marking types that can be returned to Ruby from a …","Trait marking types that can be returned to Ruby from a …","Trait implemented for function pointers that can be …","Trait marking types that can be returned to Ruby.","Argument for <code>define_attr</code>.","Functions available on both classes and modules.","A Value pointer to a RModule struct, Ruby’s internal …","Define a reader method like <code>name</code>.","Define both reader and writer methods like <code>name</code> and <code>name=</code>.","Define a writer method like <code>name=</code>.","Return the classes and modules <code>self</code> inherits, includes, or …","","","","","","","","","Return Ruby’s <code>Comparable</code> module.","Get the value for the constant <code>name</code> within <code>self</code>’s scope.","Set the value for the constant <code>name</code> within <code>self</code>’s scope.","Alias the method <code>src</code> of <code>self</code> as <code>dst</code>.","Define public accessor methods for the attribute <code>name</code>.","Define a class in <code>self</code>’s scope.","Define an exception class in <code>self</code>’s scope.","Define a method in <code>self</code>’s scope.","Define a module in <code>self</code>’s scope.","Define a method in <code>self</code>’s scope as a ‘module function…","Define a private method in <code>self</code>’s scope.","Define a protected method in <code>self</code>’s scope.","","Return Ruby’s <code>Enumerable</code> module.","Return Ruby’s <code>Errno</code> module.","Return Ruby’s <code>FileTest</code> module.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return <code>Some(RModule)</code> if <code>val</code> is a <code>RModule</code>, <code>None</code> otherwise.","Return Ruby’s <code>GC</code> module.","Include <code>module</code> into <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether or not <code>self</code> inherits from <code>other</code>.","Return Ruby’s <code>Kernel</code> module.","Return Ruby’s <code>Math</code> module.","Create a new anonymous module.","Prepend <code>self</code> with <code>module</code>.","Return Ruby’s <code>Process</code> module.","","","","","","","","","","","Return Ruby’s <code>IO::WaitReadable</code> module.","Return Ruby’s <code>IO::WaitWritable</code> module.","Functions available for all of Ruby’s Numeric types.","Wrapper type for a Value known to be an instance of …","","","","","Apply the operator <code>op</code> with coercion.","Apply the operator <code>op</code> with coercion.","Apply the operator <code>op</code> with coercion.","Apply the operator <code>op</code> with coercion.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Continue iterating.","Delete the last entry and continue iterating.","Iteration state for <code>RHash::foreach</code>.","A Value pointer to a RHash struct, Ruby’s internal …","Stop iterating.","Return the value for <code>key</code>, converting it to <code>U</code>.","Set the value <code>val</code> for the key <code>key</code>.","","","","","Insert a list of key-value pairs into a hash at once.","Removes all entries from <code>self</code>.","","","Removes the key <code>key</code> from self and returns the associated …","","Return the value for <code>key</code>, converting it to <code>U</code>.","","","Run <code>func</code> for each key/value pair in <code>self</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","Return <code>Some(RHash)</code> if <code>val</code> is a <code>RHash</code>, <code>None</code> otherwise.","Return the value for <code>key</code> as a <code>Value</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return whether self contains any entries or not.","Return the number of entries in <code>self</code> as a Rust <code>usize</code>.","Return the value for <code>key</code>, converting it to <code>U</code>.","Create a new empty <code>RHash</code>.","Return the number of entries in <code>self</code> as a Ruby <code>Fixnum</code>.","Return <code>self</code> converted to a Rust <code>HashMap</code>.","","","Convert <code>self</code> to a Rust vector of key/value pairs.","","","","","","","","Merges two hashes into one.","Create a new empty <code>RHash</code> with capacity for <code>n</code> elements …","Ignore whitespace and comments in the pattern.","Ignore case.","Treat a newline as a character matched by <code>.</code>","Options for creating <code>RRegexp</code>.","A Value pointer to a RRegexp struct, Ruby’s internal …","","","","","","","","","","","","","","","Ignore whitespace and comments in the pattern.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return <code>Some(RRegexp)</code> if <code>val</code> is a <code>RRegexp</code>, <code>None</code> otherwise.","Ignore case.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return <code>true</code> if the <code>ascii_range</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>capture_group</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>dont_capture_group</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>dotall</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>extend</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>find_longest</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>find_not_empty</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>ignorecase</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>multiline</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>negate_singleline</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>newline_crlf</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>notbol</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>notbos</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>noteol</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>noteos</code> option is set, <code>false</code> otherwise.","Return <code>true</code> if the <code>posix_bracket_all_range</code> option is set, …","Return <code>true</code> if the <code>singleline</code> option is set, <code>false</code> …","Return <code>true</code> if the <code>word_bound_all_range</code> option is set, …","Treat a newline as a character matched by <code>.</code>","","Create a new <code>Regexp</code> from the Rust string <code>pattern</code>.","Create a new blank regexp <code>Opts</code>.","Create a new <code>Regexp</code> from the Ruby string <code>pattern</code>.","","","","","","Returns the options set for <code>self</code>.","","Returns the index (in characters) of the first match in <code>s</code>.","","","","","","","","","","","","","An iterator over a Ruby string’s chars as slices of …","An iterator over a Ruby string’s codepoints.","FString contains an RString known to be interned.","Conversions from Rust types into <code>RString</code>.","A Value pointer to a RString struct, Ruby’s internal …","Returns <code>Some(FString)</code> if self is interned, <code>None</code> otherwise.","Returns the interned string as a <code>RString</code>.","Return <code>self</code> as a slice of bytes.","Returns the interned string as a slice of bytes.","Returns a Rust <code>&amp;str</code> reference to the value of <code>self</code>.","Returns the interned string as a <code>&amp;str</code>. Errors if the …","","","","","","","","","Mutate <code>self</code>, adding <code>other</code> to the end. Errors if <code>self</code> and …","Create a new Ruby string with capacity <code>n</code>.","Returns the capacity of <code>self</code>.","Mutate <code>self</code>, adding <code>buf</code> to the end.","Return an iterator over <code>self</code>’s chars as slices of bytes.","Create a new Ruby string containing the codepoint <code>code</code> in …","","","","","Compares <code>self</code> with <code>other</code> to establish an ordering.","Return an iterator over <code>self</code>’s codepoints.","Returns whether there is a total order of strings in the …","Returns a new string by reencoding <code>self</code> from its current …","","","Shrink <code>self</code> by <code>len</code> bytes.","Returns a quoted version of the <code>self</code>.","Shorten <code>self</code> to <code>len</code>, adding “…”.","Returns the cached coderange value that describes how <code>self</code> …","Clear <code>self</code>’s cached coderange, setting it to <code>Unknown</code>.","Scans <code>self</code> to establish its coderange.","Sets <code>self</code>’s cached coderange.","Create a new Ruby string from the value <code>s</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new Ruby string from the Rust char <code>c</code>.","Create a new Ruby string from the Rust slice <code>s</code>.","Return <code>Some(RString)</code> if <code>val</code> is a <code>RString</code>, <code>None</code> otherwise.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert <code>self</code> into <code>RString</code>.","Convert <code>self</code> into <code>RString</code>.","Convert <code>self</code> into <code>RString</code>.","","","","Return whether self contains any characters or not.","Returns whether <code>self</code> is a frozen interned string. Interned …","Returns true if the encoding for this string is UTF-8 or …","Returns the number of bytes in <code>self</code>.","Returns the number of characters in <code>self</code>.","Create a new Ruby string from the Rust string <code>s</code>.","Create a new Ruby string that is a frozen copy of <code>s</code>.","Create a new Ruby string that shares the same backing data …","","","Converts a character offset to a byte offset.","Create a new string by appending <code>other</code> to <code>self</code>.","Replace the contents and encoding of <code>self</code> with those of …","Returns a string omitting ‘broken’ parts of the string …","Modify <code>self</code> to share the same backing data as <code>other</code>.","Split <code>self</code> around the given delimiter.","Returns a Rust <code>&amp;str</code> reference to the value of <code>self</code>.","Returns the interned string as a <code>&amp;str</code> or <code>None</code> string …","Create a new string by repeating <code>self</code> <code>num</code> times.","Converts <code>self</code> to a <code>char</code>. Errors if the string is more than …","Interns self and returns a <code>FString</code>. Be aware that once …","","","Returns <code>self</code> as an owned Rust <code>String</code>. The Ruby string will …","","","Returns <code>self</code> as a Rust string, ignoring the Ruby encoding …","Returns interned string as a Rust string, ignoring the …","","","","","","","","","","","","","","Replace a portion of <code>self</code> with <code>other</code>.","Create a new Ruby string with capacity <code>n</code>.","","A Value pointer to a RStruct struct, Ruby’s internal …","Return the value for the member at <code>index</code>.","Return the members of the struct as a slice of <code>Value</code>s. The …","Return the value for the member at <code>index</code>.","","","","","Define a Ruby Struct class.","","","","Returns the argument unchanged.","Return <code>Some(RStruct)</code> if <code>val</code> is a <code>RStruct</code>, <code>None</code> otherwise.","Return the value for the member at <code>index</code>, where members …","Return the value for the member named <code>id</code>.","Calls <code>U::from(self)</code>.","","Returns the member names for this struct as <code>Symbol</code>s.","Returns the count of members this struct has.","","","","","","","Arguments returned from <code>scan_args</code>.","Arguments returned from <code>get_kwargs</code>.","Trait implemented for types that can be retrieved as a …","Trait implemented for types that can be retrieved as …","Trait implemented for types that can be retrieved as …","Trait implemented for types that can be retrieved as …","Trait implemented for types that can be retrieved a ‘…","This block argument.","","","","","Returns <code>Err</code> containing a Ruby <code>ArgumentError</code> if <code>len</code> is not …","Returns the argument unchanged.","Returns the argument unchanged.","Deconstruct keyword arguments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Keywords arguments.","Optional arguments.","Optional arguments.","Required arguments.","Required arguments.","Retrieves arguments from a slice.","The splat argument.","The splat argument.","Trailing required arguments.","","","","","","","A C struct containing metadata on a Rust type, for use …","A builder for <code>DataType</code>.","A helper trait used to define functions associated with a …","Trait for a Ruby-compatible <code>#hash</code> method.","Trait for a Ruby-compatible <code>#eql?</code> method.","A Ruby Object wrapping a Rust type <code>T</code>.","A trait for Rust types that can be used with the …","","","","","","","Consume the builder and create a DataType.","Create a new <code>DataTypeBuilder</code>.","Should return the class for the Ruby object wrapping the …","Used to customise the class wrapping a specific value of …","","","Called during garbage collection.","Enable using the the <code>compact</code> function from …","Should return a static reference to a <code>DataType</code> with …","","","","","Called when the Ruby wrapper object is garbage collected.","Enable the ‘free_immediately’ flag.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Enable the ‘frozen_shareable’ flag.","Get a reference to the Rust type wrapped in the Ruby …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Called when Ruby marks this object as part of garbage …","Enable using the the <code>mark</code> function from …","Create a new <code>DataTypeBuilder</code>.","Called by Ruby to establish the memory size of this data, …","Enable using the the <code>size</code> function from …","","","","","","","","","","","","","Enable the ‘write barrier protected’ flag.","Wrap the Rust type <code>T</code> in a Ruby object.","Protects a Ruby Value from the garbage collector.","A Value known to be a fixnum, Ruby’s internal …","A Value known to be a flonum, Ruby’s internal …","The internal value of a Ruby symbol.","Conversions from Rust types into <code>Id</code>.","Ruby’s <code>false</code> value.","Ruby’s <code>nil</code> value.","Ruby’s <code>true</code> value.","A placeholder value that represents an undefined value. …","Ruby’s <code>false</code> value.","Ruby’s <code>nil</code> value.","Ruby’s <code>true</code> value.","A placeholder value that represents an undefined value. …","Marker trait for types that have the same representation …","A static Ruby symbol that will live for the life of the …","Ruby’s <code>VALUE</code> type, which can represent any Ruby object.","","","Call the method named <code>method</code> on <code>self</code> with <code>args</code> and <code>block</code>.","","","","","","","","","","","","","","","","","","","","","Return the <code>Id</code> for <code>name</code>, if one exists.","Return the <code>Id</code> for <code>name</code>, if one exists.","Returns an error if <code>self</code> is ‘frozen’.","If <code>self</code> responds to the method named <code>method</code>, call it with …","Returns the class that <code>self</code> is an instance of.","Return the name of <code>self</code>’s class.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate an <code>Enumerator</code> from <code>method</code> on <code>self</code>, passing <code>args</code> to","","Checks for equality, delegating to the Ruby method <code>#eql?</code>.","Checks for equality, delegating to the Ruby method <code>#==</code>.","","","","","","","","","","","","","","","","","","Mark <code>self</code> as frozen.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Create a new <code>Flonum</code> from a <code>f64.</code>","Create a new <code>Fixnum</code> from an <code>i64.</code>","Create a new <code>Fixnum</code> from a <code>u64.</code>","Return <code>Some(Flonum)</code> if <code>val</code> is a <code>Flonum</code>, <code>None</code> otherwise.","Return <code>Some(Qfalse)</code> if <code>val</code> is a <code>Qfalse</code>, <code>None</code> otherwise.","Return <code>Some(Qnil)</code> if <code>val</code> is a <code>Qnil</code>, <code>None</code> otherwise.","Return <code>Some(Qtrue)</code> if <code>val</code> is a <code>Qtrue</code>, <code>None</code> otherwise.","Return <code>Some(Qundef)</code> if <code>val</code> is a <code>Qundef</code>, <code>None</code> otherwise.","Return <code>Some(Fixnum)</code> if <code>val</code> is a <code>Fixnum</code>, <code>None</code> otherwise.","Return <code>Some(StaticSymbol)</code> if <code>val</code> is a <code>StaticSymbol</code>, <code>None</code> …","Call the method named <code>method</code> on <code>self</code> with <code>args</code>.","Call the public method named <code>method</code> on <code>self</code> with <code>args</code>.","Call the method named <code>method</code> on <code>self</code> with <code>args</code> and <code>block</code>.","Returns an integer non-uniquely identifying <code>self</code>.","Convert <code>self</code> to its Ruby debug representation.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into <code>Id</code>.","Convert <code>self</code> into <code>Id</code>.","Convert <code>self</code> into <code>Id</code>.","","","","","","","","","","","Returns whether <code>self</code> is ‘frozen’.","Returns whether or not <code>self</code> is an instance of <code>class</code>.","Returns whether <code>self</code> is Ruby’s <code>nil</code> value.","Return the symbol as a static string reference.","Return the symbol name associated with this Id as a static …","Create a new <code>BoxValue</code>.","Create a new StaticSymbol.","Create a new <code>Id</code> for <code>name</code>.","Check if <code>self</code> responds to the given Ruby method.","Convert <code>self</code> to a <code>bool</code>, following Ruby’s rules of <code>false</code> …","Convert <code>self</code> to a <code>f64</code>.","Convert <code>self</code> to an <code>i16</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i32</code>. Returns <code>Err</code> if <code>self</code> is out of …","Convert <code>self</code> to an <code>i64</code>. This is infallible as <code>i64</code> can …","Convert <code>self</code> to an <code>i8</code>. Returns <code>Err</code> if <code>self</code> is out of range …","Convert <code>self</code> to an <code>isize</code>. Returns <code>Err</code> if <code>self</code> is out of …","","","","","","","","","","Convert <code>self</code> to a Ruby <code>String</code>.","Convert <code>self</code> to a Rust string.","","","","","","","","","Convert <code>self</code> to a <code>u16</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u32</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>u64</code>. Returns <code>Err</code> if <code>self</code> is negative.","Convert <code>self</code> to a <code>u8</code>. Returns <code>Err</code> if <code>self</code> is negative or …","Convert <code>self</code> to a <code>usize</code>. Returns <code>Err</code> if <code>self</code> is negative …","Return <code>self</code> as a <code>Value</code>.","","Convert <code>self</code> to the Rust type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,4,3,0,9,11,11,0,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,0,3,0,3,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,3,3,1,0,0,0,0,0,0,93,93,0,3,3,20,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,3,3,0,11,3,0,0,12,0,0,11,93,93,12,12,13,13,14,14,15,15,3,3,16,16,1,1,17,17,18,18,9,9,19,19,20,20,21,21,11,11,4,4,12,13,14,15,3,16,1,17,18,9,19,20,21,21,11,4,4,4,14,18,15,16,3,3,15,16,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,3,0,0,21,1,3,0,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,92,4,13,94,94,94,94,94,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,3,16,16,3,4,93,93,93,93,3,9,3,12,12,9,0,0,0,0,4,3,1,20,11,4,13,9,9,20,0,3,1,3,9,9,0,3,0,0,0,0,0,3,14,14,1,3,0,3,3,3,0,3,93,93,3,3,3,3,3,14,18,15,15,15,16,15,15,16,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,15,15,15,16,15,15,16,3,3,95,12,13,14,15,3,16,1,17,18,9,19,20,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,12,13,14,15,3,16,1,17,18,9,19,20,21,11,4,0,3,0,3,21,0,96,97,98,96,97,98,0,0,0,0,52,0,0,96,97,98,52,96,97,98,52,52,52,52,52,52,52,96,97,98,52,52,52,96,97,98,52,52,52,52,52,52,52,96,97,98,52,96,97,98,52,96,97,98,52,0,0,0,0,99,0,0,99,24,0,0,24,24,0,24,24,0,24,24,0,0,0,0,0,0,24,24,24,24,0,0,24,24,0,0,0,0,99,24,0,99,24,24,99,24,24,0,0,0,0,0,0,0,0,0,0,0,0,99,24,0,0,0,24,24,0,24,24,24,24,0,99,56,56,56,56,57,0,58,56,0,56,0,0,56,0,58,56,0,58,56,56,56,0,57,56,57,56,57,56,56,53,53,54,53,58,55,56,54,57,53,58,55,56,54,57,0,53,55,56,54,57,55,56,54,57,53,53,0,0,53,55,53,55,55,100,100,100,54,57,53,53,54,53,54,55,55,56,57,53,53,53,58,55,55,56,54,54,54,57,55,53,58,55,56,54,57,53,55,53,53,53,54,53,53,53,53,53,55,56,54,57,55,53,55,54,53,58,55,56,54,57,53,58,55,56,54,57,53,58,55,56,54,57,53,54,53,54,60,0,7,7,60,7,60,60,60,0,60,60,0,60,7,60,7,60,0,7,7,60,60,7,7,7,60,7,60,7,7,7,7,7,60,7,60,7,60,7,60,0,0,0,0,25,61,61,25,61,25,61,25,61,25,25,61,25,0,0,0,0,0,0,61,61,25,25,61,25,61,25,0,0,0,61,25,61,25,0,0,0,0,0,0,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,25,61,25,61,25,61,25,61,25,0,61,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,63,63,101,26,63,26,63,26,63,26,63,0,101,101,101,101,101,101,101,101,26,101,101,26,0,0,0,26,26,63,26,63,26,0,101,26,63,26,101,0,0,26,101,0,26,63,26,26,26,63,26,63,26,63,0,0,0,0,64,64,64,64,102,102,102,102,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,103,103,0,0,103,62,62,103,62,103,62,62,62,62,62,62,62,62,62,62,62,103,62,62,62,62,103,62,62,62,62,62,62,62,62,62,62,62,62,103,62,103,62,103,62,62,62,66,66,66,0,0,66,67,66,67,66,66,67,66,67,66,66,67,66,66,66,66,66,67,67,67,66,67,66,67,66,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,66,67,66,66,66,66,66,67,66,67,66,67,66,67,67,67,66,67,66,67,66,66,0,0,0,0,0,39,68,39,68,39,68,70,69,39,68,70,69,39,68,39,39,39,39,39,39,39,68,39,68,39,39,39,39,39,68,39,39,39,39,39,39,39,39,39,39,39,68,68,70,69,39,68,39,39,39,70,69,39,68,70,69,104,104,104,39,39,68,39,39,39,39,39,39,39,39,70,69,39,39,39,39,39,39,39,68,39,39,39,39,68,39,39,68,39,68,39,70,69,39,68,70,69,39,68,70,69,39,68,39,39,39,0,73,73,73,73,73,73,73,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,0,0,0,75,75,74,75,74,0,75,74,0,75,74,75,75,74,75,74,0,75,74,75,75,74,75,74,75,74,0,0,0,0,0,0,0,77,76,32,77,76,32,76,77,105,105,32,32,106,76,105,32,77,32,32,106,76,77,76,32,76,32,107,77,76,32,32,108,106,76,76,106,76,32,32,32,77,76,32,77,76,32,77,76,32,76,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,79,27,79,34,27,80,81,82,83,36,5,33,79,34,27,80,81,82,83,36,5,33,5,33,27,27,27,27,34,27,80,81,82,83,36,5,33,34,27,80,81,82,83,36,5,33,27,79,34,80,81,82,36,5,79,79,27,33,27,27,79,79,34,34,27,27,80,80,81,81,82,82,36,36,5,5,33,27,79,34,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,80,81,82,83,36,5,5,33,33,33,34,36,36,34,80,81,82,83,36,5,27,27,27,27,27,79,34,27,80,81,82,83,36,5,33,109,109,109,5,33,79,34,27,80,81,82,36,5,27,27,27,5,33,79,5,33,27,27,34,36,36,36,36,36,34,27,80,81,82,83,36,5,33,27,27,79,34,27,80,81,82,36,5,36,36,36,36,36,83,34,27,27,80,81,82,36,5,79,34,27,80,81,82,83,36,5,33,79,34,27,80,81,82,83,36,5,33,79,34,27,80,81,82,83,36,5,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[3],[4,[[6,[5]]]],[3,[[8,[7]]]],[[],[[6,[9]]]],[9,[[8,[10,7]]]],[11,[[8,[7]]]],[[11,10],[[8,[7]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[7]]]],[3,[[8,[7]]]],0,[3,[[8,[7]]]],[12,12],[13,13],[14,14],[15,15],[3,3],[16,16],[1,1],[17,17],[18,18],[9,9],[19,19],[20,20],[21,21],[11,11],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],[[8,[[6,[22]],7]]]],[[3,3],[[8,[7]]]],[1,1],[[],[[8,[7]]]],[[23,24],[[8,[24,7]]]],[[23,25],[[8,[25,7]]]],[23,[[8,[7]]]],[23],[23,[[8,[26,7]]]],[23,[[8,[7]]]],[23,[[8,[7]]]],[23,[[8,[27,7]]]],[3,[[8,[7]]]],[[3,28],[[8,[7]]]],[20,15],[12],[13],[14],[15],[3],[16],[1],[17],[18],[9],[19],[20],[21],[11],[4],[3,3],[3,13],0,[11,[[8,[7]]]],[[3,28],[[8,[7]]]],0,[23,[[8,[7]]]],[12,[[8,[7]]]],0,0,[11,29],[26,[[8,[7]]]],[26,[[8,[7]]]],[[12,30],31],[[12,30],31],[[13,30],31],[[13,30],31],[[14,30],31],[[14,30],31],[[15,30],31],[[15,30],31],[[3,30],31],[[3,30],31],[[16,30],31],[[16,30],31],[[1,30],31],[[1,30],31],[[17,30],31],[[17,30],31],[[18,30],31],[[18,30],31],[[9,30],31],[[9,30],31],[[19,30],31],[[19,30],31],[[20,30],31],[[20,30],31],[[21,30],31],[[21,30],31],[[11,30],31],[[11,30],31],[[4,30],31],[[4,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,21],[[]],[[]],[[]],[5,4],[33,4],[2,14],[2,[[8,[18,34]]]],[35,15],[35,[[8,[16,36]]]],[[],3],[[],3],[37,15],[37,[[8,[16,36]]]],[27,[[6,[12]]]],[27,[[6,[13]]]],[27,[[6,[14]]]],[27,[[6,[15]]]],[27,[[6,[3]]]],[27,[[6,[16]]]],[27,[[6,[1]]]],[27,[[6,[17]]]],[27,[[6,[18]]]],[27,[[6,[9]]]],[27,[[6,[19]]]],[27,[[6,[20]]]],[27,[[6,[21]]]],[27,[[6,[11]]]],[27,[[6,[4]]]],[38,3],0,0,[21,[[8,[7]]]],[1,[[8,[7]]]],[3,29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[],27],[[],27],[[],27],[[],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,29],[16,29],[16,29],[[3,3],29],[4,29],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[3,[[8,[39,7]]]],[9,[[6,[39]]]],[3,10],[12,[[8,[7]]]],[12],[9,39],0,0,0,0,[4,[[8,[[40,[23]],7]]]],[[],3],[[],1],[[35,41],20],[29,[[8,[11,7]]]],[[[42,[23]]],4],[13,6],[[9,28],[[6,[29]]]],[[9,28],[[6,[39]]]],[20,15],0,[[3,3],3],[[],[[8,[1,7]]]],[3,[[8,[7]]]],[9,39],[9,39],0,[3,[[8,[7]]]],0,0,0,0,0,[3,[[8,[7]]]],[14,20],[[14,14],20],[1,[[8,[7]]]],[[3,3],[[8,[7]]]],[[],[[8,[29,7]]]],[[3,10],[[8,[7]]]],[3,[[8,[7]]]],[[3,28],[[8,[7]]]],0,[3,[[8,[7]]]],[[],[[8,[24,7]]]],[[],[[8,[24,7]]]],[3,[[8,[7]]]],[[3,28],[[8,[7]]]],[[3,10,10],[[6,[3]]]],[3,[[8,[7]]]],[27,[[8,[3,7]]]],[14,2],[18,2],[15,[[8,[43,7]]]],[15,[[8,[44,7]]]],[15,[[8,[35,7]]]],[16,[[8,[35,7]]]],[15,[[8,[45,7]]]],[15,[[8,[28,7]]]],[16,[[8,[28,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,10],[[8,[[46,[10]],7]]]],[4,5],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[15,[[8,[48,7]]]],[15,[[8,[49,7]]]],[15,[[8,[37,7]]]],[16,[[8,[37,7]]]],[15,[[8,[50,7]]]],[15,[[8,[10,7]]]],[16,[[8,[10,7]]]],[3,[[8,[7]]]],[3,[[8,[38,7]]]],[27,[[8,[7]]]],[27,[[8,[12,7]]]],[27,[[8,[13,7]]]],[27,[[8,[14,7]]]],[27,[[8,[15,7]]]],[27,[[8,[3,7]]]],[27,[[8,[16,7]]]],[27,[[8,[1,7]]]],[27,[[8,[17,7]]]],[27,[[8,[18,7]]]],[27,[[8,[9,7]]]],[27,[[8,[19,7]]]],[27,[[8,[20,7]]]],[27,[[8,[11,7]]]],[27,[[8,[4,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],0,[3,[[8,[7]]]],0,[10,3],[[],21],0,0,0,0,0,0,0,0,0,0,0,[52,35],[[],29],[[],[[8,[52,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[8,[7]]]],[52,52],[[]],[52],[[52,30],31],[[52,30],31],[[]],[[]],[[]],[[]],[[],52],[27,[[6,[52]]]],[[]],[[]],[[]],[[]],0,[52,29],[[],52],[[]],[[],47],[27,[[8,[52,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[[],51],[3,[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],0,0,0,[[],24],[[],24],[24,24],[[],24],[[],24],[[]],[[]],[[],24],[24,24],[[]],[[],24],[[],24],[24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[24,30],31],[[24,30],31],[[]],[27,[[6,[24]]]],[[],24],[[],24],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],[[40,[23]]]],[24,[[40,[23]]]],[[],24],[[],[[8,[7]]]],[24,[[8,[24,7]]]],[24,[[8,[24,7]]]],[[],[[8,[7]]]],[24,[[8,[27,7]]]],[24,[[8,[7]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],[[8,[24,7]]]],[24,[[8,[24,7]]]],[[],24],[[],24],[[],24],[[]],[[],47],[[],24],[27,[[8,[24,7]]]],[[],8],[[],8],[[],51],[[],24],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[53,6],[[],53],[[],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[53,7]]]],[[53,49],[[8,[39,7]]]],[55,55],[56,56],[54,54],[57,57],[[]],[[]],[[]],[[]],[[53,49],[[8,[10,7]]]],[53,[[8,[7]]]],[[],[[6,[53]]]],[[],[[8,[7]]]],[[],53],[[],55],[[],[[6,[53]]]],[[],[[6,[55]]]],[55],[[],[[8,[7]]]],[[],54],[[],[[8,[7]]]],[[54,54],29],[[57,57],29],[53,10],[[],53],[[],54],[23,[[6,[53]]]],[23,[[8,[54,7]]]],[[55,30],31],[[55,30],31],[[56,30],31],[[57,30],31],[54,53],[[]],[55,53],[[]],[[]],[53,55],[[]],[55,54],[53,54],[[]],[[]],[27,[[6,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[53,49,56],29],[53,29],[[],53],[[],54],[53,10],[53,10],[53,10],[53,23],[53,58],[[]],[[]],[[]],[[]],[[],47],[27,[[8,[53,7]]]],[27,[[8,[55,7]]]],[27,[[8,[54,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],53],[[],54],[[],53],[[],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[23,59],[[7,30],31],[[7,30],31],[[60,30],31],[[60,30],31],[[]],[61,7],[60,7],[[]],[[]],[[]],[7,29],[6,7],[25,7],[[],7],[[],47],[[],47],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[23],0,0,[[],25],[25,24],[61,[[8,[[6,[3]],7]]]],[[]],[[]],[[]],[[]],[61,61],[25,25],[[]],[[]],[[],25],[61],[25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[61,30],31],[[61,30],31],[[25,30],31],[[25,30],31],[[]],[[]],[27,[[6,[61]]]],[27,[[6,[25]]]],[[],25],[[],25],[[],25],[[]],[[]],0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[25,[[8,[25,7]]]],[25,[[8,[7]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[],47],[[],47],[27,[[8,[61,7]]]],[27,[[8,[25,7]]]],[[],8],[[],8],[[],8],[[],8],[[],25],[[],51],[[],51],[[],25],[28],[[],62],[[],10],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[10,7]]]],[[]],0,0,0,0,0,0,0,0,0,0,[[],3],[[]],[[]],[[]],[[]],[26,26],[63,63],[[]],[[]],[[],26],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[63,[[8,[7]]]],[24,[[8,[24,7]]]],[25,[[8,[25,7]]]],[[],[[8,[7]]]],[[],[[8,[26,7]]]],[[26,23],[[8,[7]]]],[23,[[8,[7]]]],[23,[[8,[7]]]],[26],[[],26],[[],26],[[],26],[[26,30],31],[[26,30],31],[[63,30],31],[[]],[[]],[27,[[6,[26]]]],[[],26],[26,[[8,[7]]]],[[]],[[]],0,[[],29],[[],26],[[],26],[[],26],[26,[[8,[7]]]],[[],26],[[]],[[]],[[],47],[27,[[8,[26,7]]]],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],26],[[],26],0,0,[[]],[[]],[64,64],[[]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[64],[[64,30],31],[[64,30],31],[[]],[[]],0,[[]],[[],47],[27,[[8,[64,7]]]],[[],8],[[],8],[[],51],0,0,0,0,0,0,0,0,0,[62,[[8,[7]]]],[62,[[8,[7]]]],[[]],[[]],[[]],[[]],[62,[[8,[7]]]],[62,[[8,[7]]]],[62,62],[[]],[62,[[8,[7]]]],[62],[62,[[8,[7]]]],[[62,30],31],[[62,30],31],[62,[[8,[7]]]],[[]],[[]],[[],62],[27,[[6,[62]]]],[62,[[6,[27]]]],[[]],[[]],0,[62,29],[62,10],[62,[[8,[7]]]],[[],62],[62,36],[62,[[8,[65,7]]]],[[]],[[],47],[62,[[8,[38,7]]]],[27,[[8,[62,7]]]],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[62,62],[[8,[7]]]],[10,62],0,0,0,0,0,[66,66],[[]],[[]],[[]],[[]],[66,66],[67,67],[66,66],[[]],[[]],[[],66],[67],[66,66],[66,66],[66,66],[66,66],[66,66],[[67,30],31],[[67,30],31],[[]],[[]],[27,[[6,[67]]]],[66,66],[[]],[[]],0,[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,29],[66,66],[66,66],[[23,66],[[8,[67,7]]]],[[],66],[[39,66],[[8,[67,7]]]],[66,66],[66,66],[66,66],[66,66],[66,66],[67,66],[66,66],[67,[[8,[[6,[10]],7]]]],[66,66],[[]],[[]],[[],47],[27,[[8,[67,7]]]],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[66,66],0,0,0,0,0,[39,[[6,[68]]]],[68,39],[39],[68],[39,[[8,[23,7]]]],[68,[[8,[23,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,39],[[8,[7]]]],[10,39],[39,10],[[39,42]],[39,69],[49,[[8,[39,7]]]],[39,39],[68,68],[[]],[[]],[[39,39],22],[39,70],[[39,39],29],[39,[[8,[39,7]]]],[39],[68],[[39,10],[[8,[7]]]],[39,[[8,[39,7]]]],[[39,10],39],[39,57],[39],[39,57],[[39,57]],[[],39],[39,71],[[39,30],31],[[39,30],31],[[68,30],31],[[68,30],31],[[]],[[]],[[]],[[]],[72,39],[[],39],[27,[[6,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],0,0,0,0,[39,29],[39,29],[39,29],[39,10],[39,10],[23,39],[39,39],[39,39],[70,6],[69,6],[[39,10],10],[[39,39],[[8,[39,7]]]],[[39,39],[[8,[7]]]],[[39,[6,[39]]],[[8,[[6,[39]],7]]]],[[39,39],[[8,[7]]]],[[39,23],3],[39,[[6,[23]]]],[68,[[6,[23]]]],[[39,10],39],[39,[[8,[72,7]]]],[39,68],[[]],[[]],[39,[[8,[47,7]]]],[[],47],[[],47],[39,[[40,[23]]]],[68,[[40,[23]]]],[27,[[8,[39,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[[],51],[[39,28,10,39],[[8,[7]]]],[10,39],[39,[[71,[10]]]],0,[73,[[8,[7]]]],[73],[73,[[8,[7]]]],[[]],[[]],[73,73],[[]],[[[6,[23]]],[[8,[24,7]]]],[73],[[73,30],31],[[73,30],31],[[]],[27,[[6,[73]]]],[[73,10],[[8,[7]]]],[73,[[8,[7]]]],[[]],0,[73,[[8,[[38,[[40,[23]]]],7]]]],[73,10],[[]],[[],47],[27,[[8,[73,7]]]],[[],8],[[],8],[[],51],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[10,[[8,[7]]]],[[]],[[]],[62,[[8,[74,7]]]],[[]],[[]],0,0,0,0,0,[[],[[8,[75,7]]]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[76,77],[23,76],[[],24],[[],24],[32,32],[[]],[[]],[76],[[],77],[32],[77],[[32,30],31],[[32,30],31],[78],[76],[[]],[[]],[[]],[76],[32],[[],35],[[]],[[]],[[]],0,[27,29],[[]],[76],[23,76],[[],10],[76],[[]],[[],47],[27,[[8,[32,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[76],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[79],[79],[27,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[6,[5]]]],[23,[[6,[33]]]],[27,[[8,[7]]]],[27,[[6,[[8,[7]]]]]],[27,24],[27,[[40,[23]]]],[34,34],[27,27],[80,80],[81,81],[82,82],[83,83],[36,36],[5,5],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[79],[34],[80],[81],[82],[36],[5],[79],[79],[27,13],[[33,33],29],[27,[[8,[29,7]]]],[27,[[8,[29,7]]]],[[79,30],31],[[79,30],31],[[34,30],31],[[34,30],31],[[27,30],31],[[27,30],31],[[80,30],31],[[80,30],31],[[81,30],31],[[81,30],31],[[82,30],31],[[82,30],31],[[36,30],31],[[36,30],31],[[5,30],31],[[5,30],31],[[33,30],31],[27],[[]],[[]],[44,27],[5,27],[45,27],[43,27],[35,27],[28,27],[50,27],[48,27],[34,27],[49,27],[37,27],[10,27],[15,27],[84,27],[2,27],[32,27],[79,27],[80,27],[[],27],[12,27],[52,27],[24,27],[55,27],[53,27],[13,27],[61,27],[25,27],[14,27],[4,27],[26,27],[64,27],[81,27],[3,27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[38,27],[16,27],[1,27],[17,27],[18,27],[85,27],[[],27],[86,27],[82,27],[87,27],[62,27],[65,27],[88,27],[89,27],[9,27],[19,27],[20,27],[46,27],[11,27],[21,27],[73,27],[29,27],[67,27],[39,27],[23,27],[47,27],[72,27],[90,27],[91,27],[[]],[36,27],[68,27],[[]],[[]],[[]],[[]],[[]],[[]],[33,5],[[]],[5,33],[4,33],[2,[[8,[34,18]]]],[35,[[8,[36,16]]]],[37,[[8,[36,16]]]],[27,[[6,[34]]]],[27,[[6,[80]]]],[27,[[6,[81]]]],[27,[[6,[82]]]],[27,[[6,[83]]]],[27,[[6,[36]]]],[27,[[6,[5]]]],[27,[[8,[7]]]],[27,[[8,[7]]]],[[27,52],[[8,[7]]]],[27,[[8,[15,7]]]],[27,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],0,0,0,0,0,0,0,0,0,0,0,[27,29],[27,29],[27,29],[5,[[8,[23,7]]]],[33,[[8,[23,7]]]],[[],79],[[],5],[[],33],[[27,29],[[8,[29,7]]]],[27,29],[34,2],[36,[[8,[43,7]]]],[36,[[8,[44,7]]]],[36,35],[36,[[8,[45,7]]]],[36,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[8,[39,7]]]],[27,[[8,[[40,[23]],7]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[36,[[8,[48,7]]]],[36,[[8,[49,7]]]],[36,[[8,[37,7]]]],[36,[[8,[50,7]]]],[36,[[8,[10,7]]]],[83,27],[27,[[8,[34,7]]]],[27,[[8,[7]]]],[27,[[8,[27,7]]]],[27,[[8,[80,7]]]],[27,[[8,[81,7]]]],[27,[[8,[82,7]]]],[27,[[8,[36,7]]]],[27,[[8,[5,7]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51],[[],51]],"p":[[3,"RComplex"],[15,"f64"],[3,"RArray"],[3,"Symbol"],[3,"StaticSymbol"],[4,"Option"],[4,"Error"],[4,"Result"],[3,"RMatch"],[15,"usize"],[3,"Range"],[3,"Binding"],[3,"Enumerator"],[3,"Float"],[3,"Integer"],[3,"RBignum"],[3,"RFile"],[3,"RFloat"],[3,"RObject"],[3,"RRational"],[3,"RTypedData"],[4,"Ordering"],[15,"str"],[3,"RClass"],[3,"ExceptionClass"],[3,"RModule"],[3,"Value"],[15,"isize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Obj"],[3,"Id"],[3,"Flonum"],[15,"i64"],[3,"Fixnum"],[15,"u64"],[3,"Vec"],[3,"RString"],[4,"Cow"],[3,"NonZeroI64"],[8,"AsRef"],[15,"i16"],[15,"i32"],[15,"i8"],[3,"Range"],[3,"String"],[15,"u16"],[15,"u32"],[15,"u8"],[3,"TypeId"],[3,"Proc"],[3,"RbEncoding"],[3,"Index"],[3,"Encoding"],[4,"CType"],[4,"Coderange"],[4,"MbcLen"],[15,"never"],[4,"Tag"],[3,"Exception"],[3,"RHash"],[4,"Attr"],[3,"NumericValue"],[3,"HashMap"],[3,"Opts"],[3,"RRegexp"],[3,"FString"],[3,"CharBytes"],[3,"Codepoints"],[6,"Result"],[15,"char"],[3,"RStruct"],[3,"KwArgs"],[3,"Args"],[3,"DataTypeBuilder"],[3,"DataType"],[3,"Box"],[3,"BoxValue"],[3,"Qfalse"],[3,"Qnil"],[3,"Qtrue"],[3,"Qundef"],[15,"f32"],[3,"RangeToInclusive"],[3,"RangeTo"],[3,"RangeInclusive"],[3,"RangeFull"],[3,"RangeFrom"],[3,"Path"],[3,"PathBuf"],[8,"ArgList"],[8,"Object"],[8,"IntoValue"],[8,"TryConvert"],[4,"Yield"],[4,"YieldValues"],[4,"YieldSplat"],[8,"Class"],[8,"EncodingCapable"],[8,"Module"],[8,"Numeric"],[4,"ForEach"],[8,"IntoRString"],[8,"TypedData"],[8,"DataTypeFunctions"],[8,"Hash"],[8,"IsEql"],[8,"IntoId"]]},\
"magnus_macros":{"doc":"Derive and proc macros for magnus.","t":[24,24,23,23],"n":["DataTypeFunctions","TypedData","init","wrap"],"q":["magnus_macros","","",""],"d":["Derives <code>DataTypeFunctions</code> with default implementations, …","Derives <code>TypedData</code>, allowing the type to be passed to Ruby …","Mark a function as the ‘init’ function to be run for a …","Allow a Rust type to be passed to Ruby, automatically …"],"i":[0,0,0,0],"f":[0,0,0,0],"p":[]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,0,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["memchr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","memchr::memmem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,13,0,0,0,0,0,13,0,10,11,13,14,17,10,11,12,13,14,17,10,11,12,12,12,13,10,11,12,13,10,11,12,13,12,0,10,0,10,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12,14,17,14,17,10,11,10,11,10,11,12,14,17,12,0,11,0,11,13,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],4],[[1,1,1],[[3,[2]]]],[[1,1,1],5],[1,6],0,[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],[[7,[4]]]],[[1,1,1],[[3,[2]]]],[[1,1,1],[[7,[5]]]],[1,[[7,[6]]]],[1,6],[[1,1],4],[[1,1,1],5],[6,[[3,[2]]]],[4,[[3,[2]]]],[5,[[3,[2]]]],[6,3],[4,3],[5,3],[6],[4],[5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,10],[12,11],[13,13],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[],13],[[],12],[[],[[3,[2]]]],[10,[[3,[2]]]],[[],14],[10,14],[[13,15],16],[[14,15],16],[[17,15],16],[[10,15],16],[[11,15],16],[[12,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[17,17],[10,10],[11,11],[10],[11],[[],10],[[],11],[[],12],[14,[[3,[2]]]],[17,[[3,[2]]]],[[12,13],12],[[],[[3,[2]]]],[[11,18],[[3,[2]]]],[[],17],[11,17],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[15,"u8"],[15,"usize"],[4,"Option"],[3,"Memchr2"],[3,"Memchr3"],[3,"Memchr"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[4,"Prefilter"],[3,"FindIter"],[3,"Formatter"],[6,"Result"],[3,"FindRevIter"],[8,"AsRef"]]},\
"minimal_lexical":{"doc":"Fast, minimal float-parsing algorithm.","t":[18,18,18,18,8,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,10,10,11,11,11,11,11,11,5,10,10],"n":["CARRY_MASK","DENORMAL_EXPONENT","EXPONENT_BIAS","EXPONENT_MASK","Float","HIDDEN_BIT_MASK","INFINITE_POWER","INFINITE_POWER","INVALID_FP","INVALID_FP","LARGEST_POWER_OF_TEN","MANTISSA_MASK","MANTISSA_SIZE","MAX_DIGITS","MAX_EXPONENT","MAX_EXPONENT_DISGUISED_FAST_PATH","MAX_EXPONENT_FAST_PATH","MAX_EXPONENT_ROUND_TO_EVEN","MAX_MANTISSA_FAST_PATH","MAX_MANTISSA_FAST_PATH","MINIMUM_EXPONENT","MIN_EXPONENT_FAST_PATH","MIN_EXPONENT_ROUND_TO_EVEN","SIGN_MASK","SMALLEST_POWER_OF_TEN","exponent","exponent","from_bits","from_u64","int_pow_fast_path","int_pow_fast_path","is_denormal","is_denormal","mantissa","mantissa","parse_float","pow_fast_path","to_bits"],"q":["minimal_lexical","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Mask to determine if a full-carry occurred (1 in bit above …","Exponent portion of a denormal float.","Bias of the exponet","Bitmask for the exponent, including the hidden bit.","Generic floating-point type, to be used in generic code …","Bitmask for the hidden bit in exponent, which is an …","","","Bias for marking an invalid extended float.","Bias for marking an invalid extended float.","Largest decimal exponent for a non-infinite value.","Bitmask for the mantissa (fraction), excluding the hidden …","Size of the significand (mantissa) without hidden bit.","Maximum number of digits that can contribute in the …","Maximum exponent value in float.","Maximum exponent that can be represented for a …","Maximum exponent that for a fast path case, or …","","","","Minimum normal exponent value …","Minimum exponent that for a fast path case, or …","","Bitmask for the sign bit.","Smallest decimal exponent for a non-zero value.","Get exponent component from the float.","Get exponent component from the float.","","Convert 64-bit integer to float.","Get a small, integral power-of-radix for fast-path …","Get a small, integral power-of-radix for fast-path …","Returns true if the float is a denormal.","Returns true if the float is a denormal.","Get mantissa (significand) component from float.","Get mantissa (significand) component from float.","Parse float from extracted float components.","Get a small power-of-radix for fast-path multiplication.",""],"i":[6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2],[2],[[3,4],2],[[3,4],2],[[],5],[[],5],[[],2],[[],2],[1],[3],[[],2]],"p":[[15,"i32"],[15,"u64"],[15,"usize"],[15,"u32"],[15,"bool"],[8,"Float"]]},\
"nom":{"doc":"nom, eating data byte by byte","t":[3,3,8,8,8,4,4,13,13,8,8,16,13,8,8,8,3,8,6,13,13,8,8,8,8,3,16,16,16,16,16,3,4,8,13,3,8,8,13,8,8,13,8,11,11,11,11,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,0,10,10,10,11,11,11,11,0,14,14,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,10,10,10,10,0,11,11,11,11,11,11,0,11,10,0,10,11,11,10,11,11,11,11,11,11,10,10,11,0,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,0,5,5,5,5,5,5,8,8,5,10,5,10,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,11,11,5,5,5,5,5,5,11,5,11,5,11,5,5,5,5,5,11,5,5,5,5,5,5,5,11,11,11,5,5,13,13,13,13,13,13,13,8,13,13,13,13,3,4,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,11,11,10,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,5,5,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,4,13,13,11,11,11,11,0,11,11,11,11,0,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,5,5,10,5,5,5,5],"n":["And","AndThen","AsBytes","AsChar","Compare","CompareResult","Err","Error","Error","ErrorConvert","ExtendInto","Extender","Failure","FindSubstring","FindToken","Finish","FlatMap","HexDisplay","IResult","Incomplete","Incomplete","InputIter","InputLength","InputTake","InputTakeAtPosition","Into","Item","Item","Item","Iter","IterElem","Map","Needed","Offset","Ok","Or","ParseTo","Parser","Size","Slice","ToUsize","Unknown","UnspecializedInput","and","and","and_then","and_then","as_bytes","as_char","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","bytes","character","clone","clone","clone_into","clone_into","combinator","compare","compare_no_case","convert","convert","eq","eq","eq","error","error_node_position","error_position","extend_into","find_substring","find_token","finish","finish","flat_map","flat_map","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","input_len","into","into","into","into","into","into","into","into","into","into","into","is_alpha","is_alphanum","is_dec_digit","is_hex_digit","is_incomplete","is_known","is_oct_digit","iter_elements","iter_indices","len","lib","map","map","map","map","map_input","map_input","multi","new","new_builder","number","offset","or","or","parse","parse","parse","parse","parse","parse","parse","parse_to","position","provide","sequence","slice","slice_index","source","split_at_position","split_at_position1","split_at_position1_complete","split_at_position_complete","take","take_split","to_hex","to_hex_from","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bits","bytes","complete","streaming","bool","tag","take","bool","tag","take","Alt","Permutation","alt","choice","permutation","permutation","complete","streaming","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","complete","is_alphabetic","is_alphanumeric","is_digit","is_hex_digit","is_newline","is_oct_digit","is_space","streaming","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","ParserIterator","all_consuming","borrow","borrow_mut","complete","cond","consumed","cut","eof","fail","finish","flat_map","from","into","into","iterator","map","map_opt","map_parser","map_res","next","not","opt","peek","recognize","rest","rest_len","success","try_from","try_into","type_id","value","verify","Alpha","AlphaNumeric","Alt","Char","Char","Complete","Context","ContextError","Count","CrLf","Digit","Eof","Error","ErrorKind","Escaped","EscapedTransform","Fail","Fix","Float","FromExternalError","HexDigit","IsA","IsNot","LengthValue","LengthValueFn","Many0","Many0Count","Many1","Many1Count","ManyMN","ManyTill","MapOpt","MapRes","MultiSpace","Nom","NonEmpty","NoneOf","Not","OctDigit","OneOf","ParseError","Permutation","RegexpCapture","RegexpCaptures","RegexpFind","RegexpMatch","RegexpMatches","Satisfy","SeparatedList","SeparatedNonEmptyList","Space","Switch","Tag","TagBits","TagClosure","TakeTill1","TakeUntil","TakeWhile1","TakeWhileMN","TooLarge","VerboseError","VerboseErrorKind","Verify","add_context","add_context","append","append","append","append_error","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","context","convert","convert","convert","convert","convert_error","dbg_dmp","description","eq","eq","eq","eq","error_to_u32","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_char","from_error_kind","from_error_kind","from_error_kind","from_external_error","from_external_error","from_external_error","hash","input","into","into","into","into","make_error","new","or","provide","provide","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","std","count","fill","fold_many0","fold_many1","fold_many_m_n","length_count","length_data","length_value","many0","many0_count","many1","many1_count","many_m_n","many_till","separated_list0","separated_list1","Big","Endianness","Little","Native","borrow","borrow_mut","clone","clone_into","complete","eq","fmt","from","into","streaming","to_owned","try_from","try_into","type_id","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","Tuple","delimited","pair","parse","preceded","separated_pair","terminated","tuple"],"q":["nomnom::bits","","","","nom::bits::complete","","","nom::bits::streaming","","","nom::branch","","","","","","nom::bytes","","nom::bytes::complete","","","","","","","","","","","","","","nom::bytes::streaming","","","","","","","","","","","","","","nom::character","","","","","","","","","nom::character::complete","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::character::streaming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::combinator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::lib","nom::multi","","","","","","","","","","","","","","","","nom::number","","","","","","","","","","","","","","","","","","nom::number::complete","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::number::streaming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nom::sequence","","","","","","",""],"d":["Implementation of <code>Parser::and</code>","Implementation of <code>Parser::and_then</code>","Helper trait for types that can be viewed as a byte slice","Transforms common types to a char for basic token parsing","Abstracts comparison operations","Indicates whether a comparison was successful, an error, or","The <code>Err</code> enum indicates the parser was not successful","The parser had an error (recoverable)","Comparison failed","Equivalent From implementation to avoid orphan rules in …","Abstracts something which can extend an <code>Extend</code>. Used to …","The type that will be produced","The parser had an unrecoverable error: we got to the right …","Look for a substring in self","Look for a token in self","Helper trait to convert a parser’s result to a more …","Implementation of <code>Parser::flat_map</code>","Helper trait to show a byte slice as a hex dump","Holds the result of parsing functions","There was not enough data","We need more data to be sure","Abstracts common iteration operations on the input type","Abstract method to calculate the input length","Abstracts slicing operations","Methods to take as much input as possible until the …","Implementation of <code>Parser::into</code>","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","An iterator over the input type, producing the item and …","An iterator over the input type, producing the item","Implementation of <code>Parser::map</code>","Contains information on needed data if a parser returned …","Useful functions to calculate the offset between slices …","Comparison was successful","Implementation of <code>Parser::or</code>","Used to integrate <code>str</code>’s <code>parse()</code> method","All nom parsers implement this trait","Contains the required data size in bytes","Slicing operations using ranges.","Helper trait to convert numbers to usize.","Needs more data, but we do not know how much","Dummy trait used for default implementations (currently …","Applies a second parser after the first one, return their …","Applies a second parser after the first one, return their …","Applies a second parser over the output of the first one","Applies a second parser over the output of the first one","Casts the input type to a byte slice","makes a char from self","Bit level parsers","","","","","","","","","","","","","","","","","","","Choice combinators","Parsers recognizing bytes streams","Character specific parsers and combinators","","","","","General purpose combinators","Compares self to another value for equality","Compares self to another value for equality independently …","Transform to another error type","Automatically converts between errors if the underlying …","","","","Error management","Creates a parse error from a <code>nom::ErrorKind</code>, the position …","Creates a parse error from a <code>nom::ErrorKind</code> and the …","Accumulate the input into an accumulator","Returns the byte position of the substring if it is found","Returns true if self contains the token","converts the parser’s result to a type that is more …","","Creates a second parser from the output of the first one, …","Creates a second parser from the output of the first one, …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the input length, as indicated by its name, and …","automatically converts the parser’s output and error …","automatically converts the parser’s output and error …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tests that self is an alphabetic character","Tests that self is an alphabetic character or a decimal …","Tests that self is a decimal digit","Tests that self is an hex digit","Tests if the result is Incomplete","Indicates if we know how many bytes we need","Tests that self is an octal digit","Returns an iterator over the elements","Returns an iterator over the elements and their byte …","Gets the len in bytes for self","Lib module to re-export everything needed from <code>std</code> or <code>core</code>/…","Maps a function over the result of a parser","Maps a function over the result of a parser","Maps a <code>Needed</code> to <code>Needed</code> by applying a function to a …","Applies the given function to the inner error","Maps <code>Err&lt;error::Error&lt;T&gt;&gt;</code> to <code>Err&lt;error::Error&lt;U&gt;&gt;</code> with the …","Maps <code>Err&lt;(T, ErrorKind)&gt;</code> to <code>Err&lt;(U, ErrorKind)&gt;</code> with the …","Combinators applying their child parser multiple times","Creates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …","Create a new <code>Extend</code> of the correct type","Parsers recognizing numbers","Offset between the first byte of self and the first byte …","Applies a second parser over the input if the first one …","Applies a second parser over the input if the first one …","A parser takes in input type, and returns a <code>Result</code> …","","","","","","","Succeeds if <code>parse()</code> succeeded. The byte slice …","Finds the byte position of the element","","Combinators applying parsers in sequence","Slices self according to the range argument","Get the byte offset from the element’s position in the …","","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Returns a slice of <code>count</code> bytes. panics if count &gt; length","Split the stream at the <code>count</code> byte offset. panics if count …","Converts the value of <code>self</code> to a hex dump, returning the …","Converts the value of <code>self</code> to a hex dump beginning at <code>from</code> …","","Obtaining ownership","Obtaining ownership","","Obtaining ownership","Obtaining ownership","","converts self to usize","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a byte-level input to a bit-level input, for …","Counterpart to <code>bits</code>, <code>bytes</code> transforms its bit stream input …","Bit level parsers","Bit level parsers","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Helper trait for the alt() combinator.","Helper trait for the permutation() combinator.","Tests a list of parsers one by one until one succeeds.","Tests each parser in the tuple and returns the result of …","Applies a list of parsers in any order.","Tries to apply all parsers in the tuple in various orders …","Parsers recognizing bytes streams, complete input version","Parsers recognizing bytes streams, streaming version","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern.","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Character specific parsers and combinators, complete input …","Tests if byte is ASCII alphabetic: A-Z, a-z","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","Tests if byte is ASCII digit: 0-9","Tests if byte is ASCII hex digit: 0-9, A-F, a-f","Tests if byte is ASCII newline: \\\\n","Tests if byte is ASCII octal digit: 0-7","Tests if byte is ASCII space or tab","Character specific parsers and combinators, streaming …","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Main structure associated to the iterator function.","Succeeds if all the input has been consumed by its child …","","","Transforms Incomplete into <code>Error</code>.","Calls the parser if the condition is met.","if the child parser was successful, return the consumed …","Transforms an <code>Err::Error</code> (recoverable) to <code>Err::Failure</code> …","returns its input if it is at the end of input data","A parser which always fails.","Returns the remaining input if parsing was successful, or …","Creates a new parser from the output of the first parser, …","Returns the argument unchanged.","automatically converts the child parser’s result to …","Calls <code>U::from(self)</code>.","Creates an iterator from input data and a parser.","Maps a function on the result of a parser.","Applies a function returning an <code>Option</code> over the result of …","Applies a parser over the result of another one.","Applies a function returning a <code>Result</code> over the result of a …","","Succeeds if the child parser returns an error.","Optional parser, will return <code>None</code> on <code>Err::Error</code>.","Tries to apply its parser without consuming the input.","If the child parser was successful, return the consumed …","Return the remaining input.","Return the length of the remaining input.","a parser which always succeeds with given value without …","","","","Returns the provided value if the child parser succeeds.","Returns the result of the child parser if it satisfies a …","","","","Indicates which character was expected by the <code>char</code> function","","","Static string added by the <code>context</code> function","This trait is required by the <code>context</code> combinator to add a …","","","","","default error type, only contains the error’ location …","Indicates which parser returned an error","","","","","","This trait is required by the <code>map_res</code> combinator to …","","","","","","","","","","","","","","","Error kind given by various nom parsers","","","","","","This trait must be implemented by the error type of a nom …","","","","","","","","","","","","","","","","","","","","This error type accumulates errors and their position when …","Error context for <code>VerboseError</code>","","Creates a new error from an input position, a static …","","Combines an existing error with a new one created from the …","","","Combines an existing error with a new one created from the …","","","","","","","","","","","","","","","nom error code","Create a new error from an input position, a static string …","","","","","Transforms a <code>VerboseError</code> into a trace with input position …","Prints a message and the input if the parser fails.","Converts an ErrorKind to a text description","","","","","Converts an ErrorKind to a number","List of errors accumulated by <code>VerboseError</code>, containing the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an error from an input position and an expected …","","Creates an error from the input position and an ErrorKind","","","Creates a new error from an input position, an ErrorKind …","Create a new error from an input position and an external …","Create a new error from an input position and an external …","","position of the error in the input data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error from the input position and an ErrorKind","creates a new basic error","Combines two existing errors. This function is used to …","","","","","","","","","","","","","","","","","","","","internal std exports for no_std compatibility","Runs the embedded parser <code>count</code> times, gathering the …","Runs the embedded parser repeatedly, filling the given …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser <code>m..=n</code> times, calling <code>g</code> to …","Gets a number from the first parser, then applies the …","Gets a number from the parser and returns a subslice of …","Gets a number from the first parser, takes a subslice of …","Repeats the embedded parser, gathering the results in a <code>Vec</code>…","Repeats the embedded parser, counting the results","Runs the embedded parser, gathering the results in a <code>Vec</code>.","Runs the embedded parser, counting the results.","Repeats the embedded parser <code>m..=n</code> times","Applies the parser <code>f</code> until the parser <code>g</code> produces a result.","Alternates between two parsers to produce a list of …","Alternates between two parsers to produce a list of …","Big endian","Configurable endianness","Little endian","Will match the host’s endianness","","","","","Parsers recognizing numbers, complete input version","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parsers recognizing numbers, streaming version","","","","","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 byte integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in a byte string and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 bytes integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes a floating point number in text format and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Helper trait for the tuple combinator.","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then gets another …","Parses the input and returns a tuple of results of each …","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then matches an …","Gets an object from the first parser, then matches an …","Applies a tuple of parsers one by one and returns their …"],"i":[0,0,0,0,0,0,0,6,7,0,0,56,6,0,0,0,0,0,0,6,7,0,0,0,0,0,57,58,56,57,57,0,0,0,7,0,0,0,4,0,0,4,0,24,24,24,24,59,60,0,20,14,2,1,23,19,4,6,7,20,14,2,1,23,19,4,6,7,0,0,0,4,6,4,6,0,61,61,62,6,4,6,7,0,0,0,56,63,64,65,13,24,24,4,6,6,7,20,14,2,1,23,19,4,6,7,46,24,24,20,14,2,1,23,19,4,6,7,60,60,60,60,6,4,60,57,57,60,0,24,24,4,6,6,6,0,4,56,0,66,24,24,24,20,14,2,1,23,19,67,57,6,0,68,57,6,58,58,58,58,69,69,70,70,4,6,6,6,6,6,6,71,20,14,2,1,23,19,4,6,7,20,14,2,1,23,19,4,6,7,20,14,2,1,23,19,4,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,47,0,0,0,0,0,0,47,0,47,0,47,0,0,0,0,0,47,0,0,0,0,0,0,0,47,47,47,0,0,28,28,28,49,28,28,49,0,28,28,28,28,0,0,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,49,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,28,72,48,25,22,48,0,22,48,49,28,22,48,49,28,48,49,28,48,49,28,22,0,22,22,48,48,0,0,28,22,48,49,28,0,48,22,22,48,48,49,28,22,48,49,28,25,48,25,22,48,73,22,48,28,22,22,48,49,28,0,22,25,22,48,48,49,28,22,48,22,48,49,28,22,48,49,28,22,48,49,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,52,52,52,52,52,52,0,52,52,52,52,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],2],[[],2],[[]],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[4,4],[[[6,[5]]],[[6,[5]]]],[[]],[[]],0,[[],7],[[],7],[[]],[6,6],[[4,4],8],[[[6,[9]],6],8],[[7,7],8],0,0,0,[[]],[[],[[11,[10]]]],[[],8],[[],12],[13,12],[[],14],[[],14],[[4,15],16],[[[6,[17]],15],16],[[6,15],16],[[7,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],[[19,[18,18]]]],[[],[[19,[18,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[6,8],[4,8],[[],8],[[]],[[]],[[],10],0,[[],20],[[],20],[[4,21],4],[6,6],[[[6,[22]]],[[6,[22]]]],[6,6],0,[10,4],[[]],0,[[],10],[[],23],[[],23],[[],13],[[[20,[24,21]]],13],[[[14,[24,21]]],13],[[[2,[24,24]]],13],[[[1,[24,24]]],13],[[[23,[[24,[5,[25,[5]]]],[24,[5,[25,[5]]]]]],5],[[13,[5,[25,[5]]]]]],[[[19,[[24,[5]],18,[0,[[25,[5]],18]]]],5],[[13,[5,18,[0,[[25,[5]],18]]]]]],[[],11],[[],[[11,[10]]]],[26],0,[[]],[10,[[12,[10,4]]]],[6,[[11,[27]]]],[[],[[13,[25]]]],[28,[[13,[25]]]],[28,[[13,[25]]]],[[],[[13,[25]]]],[10],[10],[10,29],[[10,10],29],[[]],[[[6,[22]]],[[6,[[22,[[31,[30]]]]]]]],[6,6],[[]],[6,6],[[[6,[[22,[32]]]]],[[6,[[22,[29]]]]]],[[],29],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],34],[[],34],0,0,[[],[[13,[8,25]]]],[[],21],[[],21],[[],[[13,[8,25]]]],[[],21],[[],21],0,0,[[[35,[5,[25,[5]]]]],34],[[],13],[[[36,[5,[25,[5]]]]],34],[[],13],0,0,[3,34],[3,34],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[10,10],21],[3,34],[3,34],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[10,10],21],0,[30,8],[30,8],[30,8],[30,8],[30,8],[30,8],[30,8],0,[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[3,21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[[],21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],21],[[],21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[3,21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[[],21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],21],[[],21],[[],[[13,[25]]]],[[],[[13,[25]]]],[[],[[13,[3,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],0,[[],34],[[]],[[]],[[],34],[8,34],[[],34],[[],34],[[[0,[46,5]]],[[13,[[0,[46,5]],[0,[46,5]],[25,[[0,[46,5]]]]]]]],[[],[[13,[25]]]],[[[47,[5]]],[[13,[5]]]],[[],34],[[]],[[],34],[[]],[[],47],[[],34],[[],34],[[],34],[[],34],[47,11],[[],34],[[],34],[[],34],[[],34],[[],[[13,[25]]]],[[],[[13,[10,25]]]],[5,21],[[],12],[[],12],[[],33],[5,34],[[],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32],[[32,48],48],[28],[[28,22],22],[[28,48],48],[[28,25],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[5]]],[[48,[5]]]],[49,49],[28,28],[[]],[[]],[[]],0,[32,34],[22,22],[22,22],[48,48],[48,48],[[50,[48,[50]]],29],[32,21],[28,32],[[[22,[9]],22],8],[[[48,[9]],48],8],[[49,49],8],[[28,28],8],[28,44],0,[[[22,[17]],15],16],[[[22,[51]],15],16],[[[48,[17]],15],16],[[[48,[51]],15],16],[[49,15],16],[[28,15],16],[[]],[[]],[[]],[[]],[3],[3,48],[28],[28,22],[28,48],[28],[28,22],[28,48],[28],0,[[]],[[]],[[]],[[]],[28,25],[28,22],[[]],[26],[26],[[]],[[]],[[]],[[],29],[[],29],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],33],[[],33],[[],33],[[],33],0,[10,34],[[],34],[[],34],[[],34],[[10,10],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[10,10],34],[[],34],[[],34],[[],34],0,0,0,0,[[]],[[]],[52,52],[[]],0,[[52,52],8],[[52,15],16],[[]],[[]],0,[[]],[[],12],[[],12],[[],33],[[],[[13,[53,25]]]],[[],[[13,[54,25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],[[],[[13,[54,25]]]],[52],[52],[[],[[13,[53,25]]]],[[],[[13,[44,25]]]],[52],[52],[52],[52],[52],[[],[[13,[41,25]]]],[[],[[13,[53,25]]]],[[],[[13,[54,25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[52],[52],[52],[52],[52],[[],[[13,[30,25]]]],[[],[[13,[53,25]]]],[[],[[13,[54,25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],[[],[[13,[54,25]]]],[52],[52],[[],[[13,[53,25]]]],[[],[[13,[44,25]]]],[52],[52],[52],[52],[52],[[],[[13,[41,25]]]],[[],[[13,[53,25]]]],[[],[[13,[54,25]]]],[[],[[13,[37,25]]]],[[],[[13,[38,25]]]],[[],[[13,[39,25]]]],[[],[[13,[39,25]]]],[[],[[13,[40,25]]]],[[],[[13,[41,25]]]],[[],[[13,[42,25]]]],[[],[[13,[43,25]]]],[[],[[13,[44,25]]]],[[],[[13,[44,25]]]],[[],[[13,[45,25]]]],[[],[[13,[30,25]]]],[[],[[13,[25]]]],[[],[[13,[25]]]],[52],[52],[52],[52],[52],[[],[[13,[30,25]]]],0,[[],34],[[],34],[[],13],[[],34],[[],34],[[],34],[[[55,[25]]],34]],"p":[[3,"And"],[3,"AndThen"],[15,"char"],[4,"Needed"],[8,"Clone"],[4,"Err"],[4,"CompareResult"],[15,"bool"],[8,"PartialEq"],[15,"usize"],[4,"Option"],[4,"Result"],[6,"IResult"],[3,"FlatMap"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"From"],[3,"Into"],[3,"Map"],[8,"Fn"],[3,"Error"],[3,"Or"],[8,"Parser"],[8,"ParseError"],[3,"Demand"],[8,"Error"],[4,"ErrorKind"],[3,"String"],[15,"u8"],[3,"Vec"],[15,"str"],[3,"TypeId"],[8,"FnMut"],[8,"Alt"],[8,"Permutation"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"InputLength"],[3,"ParserIterator"],[3,"VerboseError"],[4,"VerboseErrorKind"],[8,"Deref"],[8,"Display"],[4,"Endianness"],[15,"f32"],[15,"f64"],[8,"Tuple"],[8,"ExtendInto"],[8,"InputIter"],[8,"InputTakeAtPosition"],[8,"AsBytes"],[8,"AsChar"],[8,"Compare"],[8,"ErrorConvert"],[8,"FindSubstring"],[8,"FindToken"],[8,"Finish"],[8,"Offset"],[8,"ParseTo"],[8,"Slice"],[8,"InputTake"],[8,"HexDisplay"],[8,"ToUsize"],[8,"ContextError"],[8,"FromExternalError"]]},\
"nom_locate":{"doc":"nom_locate, a special input type to locate tokens","t":[3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["LocatedSpan","as_bytes","as_ref","borrow","borrow_mut","clone","clone_into","compare","compare_no_case","deref","eq","extend_into","extra","find_substring","find_token","fmt","fmt","fragment","from","from","get_column","get_line_beginning","get_utf8_column","hash","impl_compare","impl_extend_into","impl_hex_display","impl_input_iter","impl_slice_range","impl_slice_ranges","input_len","into","iter_elements","iter_indices","location_line","location_offset","map_extra","naive_get_utf8_column","new","new_builder","new_extra","new_from_raw_offset","offset","parse_to","position","position","position","slice","slice_index","split_at_position","split_at_position1","split_at_position1_complete","split_at_position_complete","take","take_split","to_owned","to_string","try_from","try_into","type_id"],"q":["nom_locate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A LocatedSpan is a set of meta information about the …","","","","","","","","","","","","Extra information that can be embedded by the user. …","","","","","The fragment that is spanned. The fragment represents a …","","Returns the argument unchanged.","Return the column index, assuming 1 byte = 1 column.","Return the line that contains this LocatedSpan.","Return the column index for UTF8 text. Return value is …","","","","","","","","","Calls <code>U::from(self)</code>.","","","The line number of the fragment relatively to the input of …","The offset represents the position of the fragment …","Transform the extra inside into another type","Return the column index for UTF8 text. Return value is …","Create a span for a particular input with default <code>offset</code> …","","Create a span for a particular input with default <code>offset</code> …","Similar to <code>new_extra</code>, but allows overriding offset and …","","","Capture the position of the current fragment","","Capture the position of the current fragment","","","","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[[[2,[1]]]],[2],[[]],[[]],[[[2,[3,3]]],[[2,[3,3]]]],[[]],[[[2,[[5,[[4,[[2,[[4,[2]]]]]]]]]],[4,[[2,[[4,[[2,[[4,[2]]]]]]]]]]],6],[[[2,[[5,[[4,[[2,[[4,[2]]]]]]]]]],[4,[[2,[[4,[[2,[[4,[2]]]]]]]]]]],6],[2],[[[2,[[0,[1,7]]]],[2,[[0,[1,7]]]]],8],[2],0,[2,[[10,[9]]]],[[[2,[11]]],8],[[[2,[12]],13],14],[[[2,[15,15]],13],14],[2],[1,[[2,[1,16]]]],[[]],[[[2,[1]]],9],[[[2,[1]]]],[[[2,[1]]],9],[[[2,[17]]]],0,0,0,0,0,0,[[[2,[18]]],9],[[]],[2],[2],[2,19],[2,9],[[2,20],2],[[[2,[1]]],9],[[],2],[2],[[],2],[[9,19],2],[[2,2],9],[2,[[10,[21]]]],[[],22],[2,[[10,[9]]]],0,[[[2,[3]]],[[2,[3]]]],[[2,9],[[24,[9,23]]]],[2,[[22,[2,2,[25,[2]]]]]],[[2,26],[[22,[2,2,[25,[2]]]]]],[[2,26],[[22,[2,2,[25,[2]]]]]],[2,[[22,[2,2,[25,[2]]]]]],[[2,9],2],[[2,9]],[[]],[[],27],[[],24],[[],24],[[],28]],"p":[[8,"AsBytes"],[3,"LocatedSpan"],[8,"Clone"],[8,"Into"],[8,"Compare"],[4,"CompareResult"],[8,"PartialEq"],[15,"bool"],[15,"usize"],[4,"Option"],[8,"FindToken"],[8,"ToString"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Default"],[8,"Hash"],[8,"InputLength"],[15,"u32"],[8,"FnOnce"],[8,"FromStr"],[6,"IResult"],[4,"Needed"],[4,"Result"],[8,"ParseError"],[4,"ErrorKind"],[3,"String"],[3,"TypeId"]]},\
"nom_tracable":{"doc":"<code>nom-tracable</code> is an extension of nom to trace parser.","t":[8,8,8,3,11,11,11,11,11,11,11,5,11,10,11,10,11,11,11,10,11,11,11,10,11,10,5,10,11,11,11,10,11,11,23,11,11,11],"n":["FragmentDisplay","HasTracableInfo","Tracable","TracableInfo","backward","borrow","borrow_mut","clone","clone_into","color","count_width","cumulative_histogram","custom","dec_depth","default","display","eq","fmt","fold","format","forward","fragment_width","from","get_tracable_info","get_tracable_info","header","histogram","inc_depth","into","new","parser_width","set_tracable_info","set_tracable_info","to_owned","tracable_parser","try_from","try_into","type_id"],"q":["nom_tracable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait to indicate the type can display as fragment.","Trait to indicate <code>TracableInfo</code> is provided.","Trait to indicate the type has information for tracing.","Struct to have trace configuration.","","","","","","","","Show cumulative histogram of parser call count.","","","","","","","","","","","Returns the argument unchanged.","","","","Show histogram of parser call count.","","Calls <code>U::from(self)</code>.","","","","","","Custom attribute to enable trace","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,0,1,10,1,11,1,1,1,10,1,1,1,12,1,10,0,10,1,1,1,12,1,1,0,1,1,1],"f":[0,0,0,0,[[1,2],1],[[]],[[]],[1,1],[[]],[[1,2],1],[[1,3],1],[[]],[[1,2],1],[[]],[[],1],[3,4],[[1,1],2],[[1,5],6],[[1,7],1],[[],4],[[1,2],1],[[1,3],1],[[]],[[],1],[1,1],[[],4],[[]],[[]],[[]],[[],1],[[1,3],1],[1],[[1,1],1],[[]],0,[[],8],[[],8],[[],9]],"p":[[3,"TracableInfo"],[15,"bool"],[15,"usize"],[3,"String"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[3,"TypeId"],[8,"Tracable"],[8,"FragmentDisplay"],[8,"HasTracableInfo"]]},\
"nom_tracable_macros":{"doc":"","t":[23],"n":["tracable_parser"],"q":["nom_tracable_macros"],"d":[""],"i":[0],"f":[0],"p":[]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macro2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro2::extra","","","","","","","","","","","","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[9,8,8,0,0,6,0,6,9,0,0,6,8,8,0,6,0,0,0,0,1,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,3,4,3,5,4,6,7,8,1,9,10,3,5,4,6,7,8,1,9,10,3,10,5,7,7,8,9,10,10,5,5,0,3,3,3,3,17,17,5,5,4,6,6,7,7,8,1,1,9,10,10,3,3,17,5,5,5,4,4,6,6,6,6,6,7,8,1,9,10,3,5,5,5,3,10,3,3,3,3,3,3,3,3,3,3,17,5,4,6,7,8,1,9,10,3,5,5,3,3,4,4,4,5,7,1,10,10,10,17,4,6,7,1,10,3,4,1,17,6,7,1,10,3,7,7,7,3,3,5,4,6,7,8,1,9,10,3,17,5,6,7,1,10,3,0,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,3,3,3,3,3,3,3,3,3,3,4,3,3,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],4],[2,3],[5,5],[4,4],[6,6],[7,7],[8,8],[1,1],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],11],[[],5],[7,12],[7,8],[[8,8],13],[[9,9],13],[[10,10],13],[10,13],[[5,14]],[[5,14]],0,[15,3],[15,3],[16,3],[16,3],[[17,18],19],[[17,18],19],[[5,18],19],[[5,18],19],[[4,18],19],[[6,18],19],[[6,18],19],[[7,18],19],[[7,18],19],[[8,18],19],[[1,18],19],[[1,18],19],[[9,18],19],[[10,18],19],[[10,18],19],[[3,18],19],[[3,18],19],[[]],[[]],[20,5],[6,5],[21,4],[[]],[10,6],[1,6],[3,6],[[]],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[22,[[23,[5,17]]]],[22,[[23,[3,17]]]],[10],[24,3],[24,3],[25,3],[25,3],[26,3],[26,3],[27,3],[27,3],[28,3],[28,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,29],[5,13],[30,3],[30,3],[[4,4],[[31,[4]]]],[[4,4],4],[[],4],[[],5],[[8,5],7],[[2,9],1],[[22,4],10],[[22,4],10],[[10,10],[[31,[11]]]],[32],[[4,4],4],[[6,4]],[[7,4]],[[1,4]],[[10,4]],[[3,4]],[4,[[31,[33]]]],[1,9],[17,4],[6,4],[7,4],[1,4],[10,4],[3,4],[7,4],[7,4],[7,5],[22,3],[[3,[35,[34]]],[[31,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[37,3],[37,3],[38,3],[38,3],[39,3],[39,3],[40,3],[40,3],[41,3],[41,3],[4,21],[34,3],[34,3],0,[[]],[[]],[12,12],[[]],[12,4],[[12,18],19],[[]],[[]],[12,4],[12,4],[[]],[[],23],[[],23],[[],36],0,0,[[]],[[]],[29,29],[[]],[[29,18],19],[[]],[[]],[[]],[29,[[31,[6]]]],[29],[[]],[[],23],[[],23],[[],36]],"p":[[3,"Punct"],[15,"char"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[15,"str"],[4,"Result"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,6,6,6,6,7,0,8,8,0,0,7,7,8,8,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],0,[[],3],[[],3],0,0,[[],[[5,[4]]]],[[],[[5,[4]]]],[[],3],[[],3],[3]],"p":[[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rb_sys":{"doc":"","tn":["RubyValue","Value","bindings","ruby_abi_version","ruby_abi_version","special_consts","value_type","ATAN2_INF_C99","BROKEN_BACKTRACE","BROKEN_CRYPT","CASEFOLD_FILESYSTEM","COROUTINE_H","DLEXT","DLEXT_MAXLEN","ENUM_OVER_INT","FALSE","FILE","FMODE_APPEND","FMODE_BINMODE","FMODE_CREATE","FMODE_DUPLEX","FMODE_EXCL","FMODE_READABLE","FMODE_READWRITE","FMODE_SETENC_BY_BOM","FMODE_SYNC","FMODE_TEXTMODE","FMODE_TRUNC","FMODE_TTY","FMODE_WRITABLE","HAVE_ACOSH","HAVE_ALLOCA","HAVE_ALLOCA_H","HAVE_ARC4RANDOM_BUF","HAVE_ATAN2F","HAVE_ATAN2L","HAVE_ATTRIBUTE_ERRORFUNC","HAVE_ATTRIBUTE_WARNINGFUNC","HAVE_BACKTRACE","HAVE_BSD_QSORT_R","HAVE_BUILTIN___BUILTIN_ADD_OVERFLOW","HAVE_BUILTIN___BUILTIN_ALLOCA_WITH_ALIGN","HAVE_BUILTIN___BUILTIN_ASSUME_ALIGNED","HAVE_BUILTIN___BUILTIN_BSWAP16","HAVE_BUILTIN___BUILTIN_BSWAP32","HAVE_BUILTIN___BUILTIN_BSWAP64","HAVE_BUILTIN___BUILTIN_CHOOSE_EXPR","HAVE_BUILTIN___BUILTIN_CHOOSE_EXPR_CONSTANT_P","HAVE_BUILTIN___BUILTIN_CLZ","HAVE_BUILTIN___BUILTIN_CLZL","HAVE_BUILTIN___BUILTIN_CLZLL","HAVE_BUILTIN___BUILTIN_CONSTANT_P","HAVE_BUILTIN___BUILTIN_CTZ","HAVE_BUILTIN___BUILTIN_CTZLL","HAVE_BUILTIN___BUILTIN_EXPECT","HAVE_BUILTIN___BUILTIN_MUL_OVERFLOW","HAVE_BUILTIN___BUILTIN_POPCOUNT","HAVE_BUILTIN___BUILTIN_POPCOUNTLL","HAVE_BUILTIN___BUILTIN_SUB_OVERFLOW","HAVE_BUILTIN___BUILTIN_TRAP","HAVE_BUILTIN___BUILTIN_TYPES_COMPATIBLE_P","HAVE_CBRT","HAVE_CHMOD","HAVE_CHOWN","HAVE_CHROOT","HAVE_CLOCKID_T","HAVE_CLOCK_GETRES","HAVE_CLOCK_GETTIME","HAVE_CONST_PAGE_SIZE","HAVE_COPYFILE_H","HAVE_COSH","HAVE_CRT_EXTERNS_H","HAVE_CRYPT","HAVE_DAYLIGHT","HAVE_DECL_GETENV","HAVE_DECL_SYS_NERR","HAVE_DEV_T","HAVE_DIRENT_H","HAVE_DIRFD","HAVE_DLADDR","HAVE_DLOPEN","HAVE_DUP","HAVE_DUP2","HAVE_ENDGRENT","HAVE_ERF","HAVE_EXECINFO_H","HAVE_EXECL","HAVE_EXECLE","HAVE_EXECV","HAVE_EXECVE","HAVE_FCHMOD","HAVE_FCHOWN","HAVE_FCNTL","HAVE_FCNTL_H","HAVE_FCOPYFILE","HAVE_FDOPENDIR","HAVE_FFS","HAVE_FGETATTRLIST","HAVE_FINITE","HAVE_FLOAT_H","HAVE_FLOCK","HAVE_FMOD","HAVE_FORK","HAVE_FSTATAT","HAVE_FSYNC","HAVE_FTRUNCATE","HAVE_FUNC_WEAK","HAVE_GCC_ATOMIC_BUILTINS","HAVE_GCC_SYNC_BUILTINS","HAVE_GETATTRLIST","HAVE_GETCWD","HAVE_GETEGID","HAVE_GETENTROPY","HAVE_GETEUID","HAVE_GETGID","HAVE_GETGRNAM","HAVE_GETGRNAM_R","HAVE_GETGROUPS","HAVE_GETLOGIN","HAVE_GETLOGIN_R","HAVE_GETPGID","HAVE_GETPGRP","HAVE_GETPPID","HAVE_GETPRIORITY","HAVE_GETPWNAM","HAVE_GETPWNAM_R","HAVE_GETPWUID","HAVE_GETPWUID_R","HAVE_GETRLIMIT","HAVE_GETSID","HAVE_GETTIMEOFDAY","HAVE_GETUID","HAVE_GID_T","HAVE_GMTIME_R","HAVE_GRANTPT","HAVE_GRP_H","HAVE_HYPOT","HAVE_INITGROUPS","HAVE_INT128_T","HAVE_INT16_T","HAVE_INT32_T","HAVE_INT64_T","HAVE_INT8_T","HAVE_INTPTR_T","HAVE_INTTYPES_H","HAVE_IOCTL","HAVE_ISFINITE","HAVE_ISSETUGID","HAVE_KILL","HAVE_KILLPG","HAVE_LANGINFO_H","HAVE_LCHMOD","HAVE_LCHOWN","HAVE_LGAMMA_R","HAVE_LIBDL","HAVE_LIBPROC_H","HAVE_LIBPTHREAD","HAVE_LIBUNWIND_H","HAVE_LIMITS_H","HAVE_LINK","HAVE_LLABS","HAVE_LOCALE_H","HAVE_LOCKF","HAVE_LOG2","HAVE_LONG_LONG","HAVE_LSTAT","HAVE_LUTIMES","HAVE_MACH_MACH_INIT_H","HAVE_MACH_MACH_PORT_H","HAVE_MACH_O_LOADER_H","HAVE_MACH_TASK_EXCEPTION_PORTS","HAVE_MACH_TASK_H","HAVE_MALLOC_MALLOC_H","HAVE_MALLOC_SIZE","HAVE_MBLEN","HAVE_MEMMEM","HAVE_MEMMOVE","HAVE_MEMSET_S","HAVE_MKFIFO","HAVE_MKNOD","HAVE_MKTIME","HAVE_MMAP","HAVE_MODE_T","HAVE_NAN","HAVE_NEXTAFTER","HAVE_NULLPTR","HAVE_OFF_T","HAVE_OPENAT","HAVE_PCLOSE","HAVE_PID_T","HAVE_PIPE","HAVE_POLL","HAVE_POPEN","HAVE_POSIX_MADVISE","HAVE_POSIX_MEMALIGN","HAVE_PREAD","HAVE_PROTOTYPES","HAVE_PTHREAD_ATTR_GETGUARDSIZE","HAVE_PTHREAD_ATTR_GETSTACK","HAVE_PTHREAD_ATTR_SETINHERITSCHED","HAVE_PTHREAD_GET_STACKADDR_NP","HAVE_PTHREAD_GET_STACKSIZE_NP","HAVE_PTHREAD_H","HAVE_PTHREAD_SETNAME_NP","HAVE_PTHREAD_SIGMASK","HAVE_PWD_H","HAVE_PWRITE","HAVE_QSORT_R","HAVE_RB_DATA_TYPE_T_FUNCTION","HAVE_RB_DATA_TYPE_T_PARENT","HAVE_RB_DEFINE_ALLOC_FUNC","HAVE_RB_EXT_RACTOR_SAFE","HAVE_RB_FD_INIT","HAVE_RB_IO_T","HAVE_RB_REG_NEW_STR","HAVE_RB_SCAN_ARGS_OPTIONAL_HASH","HAVE_READLINK","HAVE_REALPATH","HAVE_RLIM_T","HAVE_ROUND","HAVE_RUBY_ATOMIC_H","HAVE_RUBY_DEBUG_H","HAVE_RUBY_DEFINES_H","HAVE_RUBY_ENCODING_H","HAVE_RUBY_FIBER_SCHEDULER_H","HAVE_RUBY_INTERN_H","HAVE_RUBY_IO_H","HAVE_RUBY_MEMORY_VIEW_H","HAVE_RUBY_MISSING_H","HAVE_RUBY_ONIGMO_H","HAVE_RUBY_ONIGURUMA_H","HAVE_RUBY_RACTOR_H","HAVE_RUBY_RANDOM_H","HAVE_RUBY_REGEX_H","HAVE_RUBY_RE_H","HAVE_RUBY_RUBY_H","HAVE_RUBY_ST_H","HAVE_RUBY_THREAD_H","HAVE_RUBY_THREAD_NATIVE_H","HAVE_RUBY_UTIL_H","HAVE_RUBY_VERSION_H","HAVE_RUBY_VM_H","HAVE_SANITIZER_ASAN_INTERFACE_H","HAVE_SANITIZER_MSAN_INTERFACE_H","HAVE_SCHED_YIELD","HAVE_SEEKDIR","HAVE_SENDFILE","HAVE_SETEGID","HAVE_SETENV","HAVE_SETEUID","HAVE_SETGID","HAVE_SETGROUPS","HAVE_SETPGID","HAVE_SETPGRP","HAVE_SETREGID","HAVE_SETREUID","HAVE_SETRGID","HAVE_SETRLIMIT","HAVE_SETRUID","HAVE_SETSID","HAVE_SETUID","HAVE_SHUTDOWN","HAVE_SIGACTION","HAVE_SIGALTSTACK","HAVE_SIGNBIT","HAVE_SIGPROCMASK","HAVE_SIGSETJMP","HAVE_SIG_T","HAVE_SINH","HAVE_SSIZE_T","HAVE_STDALIGN_H","HAVE_STDARG_PROTOTYPES","HAVE_STDBOOL_H","HAVE_STDINT_H","HAVE_STDIO_H","HAVE_STDLIB_H","HAVE_STMT_AND_DECL_IN_EXPR","HAVE_STRCHR","HAVE_STRERROR","HAVE_STRINGS_H","HAVE_STRING_H","HAVE_STRLCAT","HAVE_STRLCPY","HAVE_STRSTR","HAVE_STRUCT_STAT_ST_ATIMESPEC","HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC","HAVE_STRUCT_STAT_ST_BLKSIZE","HAVE_STRUCT_STAT_ST_BLOCKS","HAVE_STRUCT_STAT_ST_CTIMESPEC","HAVE_STRUCT_STAT_ST_MTIMESPEC","HAVE_STRUCT_STAT_ST_RDEV","HAVE_STRUCT_TIMESPEC","HAVE_STRUCT_TIMEVAL","HAVE_STRUCT_TIMEZONE","HAVE_STRUCT_TM_TM_GMTOFF","HAVE_STRUCT_TM_TM_ZONE","HAVE_SYMLINK","HAVE_SYSCONF","HAVE_SYSTEM","HAVE_SYS_ATTR_H","HAVE_SYS_FCNTL_H","HAVE_SYS_FILE_H","HAVE_SYS_IOCTL_H","HAVE_SYS_PARAM_H","HAVE_SYS_RANDOM_H","HAVE_SYS_RESOURCE_H","HAVE_SYS_SELECT_H","HAVE_SYS_SOCKET_H","HAVE_SYS_STAT_H","HAVE_SYS_TIMES_H","HAVE_SYS_TIME_H","HAVE_SYS_TYPES_H","HAVE_SYS_UIO_H","HAVE_SYS_USER_H","HAVE_SYS_WAIT_H","HAVE_TANH","HAVE_TELLDIR","HAVE_TGAMMA","HAVE_TIMEGM","HAVE_TIMES","HAVE_TIME_H","HAVE_TIME_T","HAVE_TM_ZONE","HAVE_TRUE_LONG_LONG","HAVE_TRUNCATE","HAVE_TYPEOF","HAVE_TYPE_RB_DATA_TYPE_T","HAVE_TZSET","HAVE_UCONTEXT_H","HAVE_UID_T","HAVE_UINT128_T","HAVE_UINT16_T","HAVE_UINT32_T","HAVE_UINT64_T","HAVE_UINT8_T","HAVE_UINTPTR_T","HAVE_UMASK","HAVE_UNISTD_H","HAVE_UNSETENV","HAVE_UTIMENSAT","HAVE_UTIMES","HAVE_UTIME_H","HAVE_VA_ARGS_MACRO","HAVE_WAIT4","HAVE_WAITPID","HAVE_WCHAR_H","HAVE_WORKING_FORK","HAVE_WRITEV","HAVE__ALIGNOF","HAVE__BOOL","HAVE__LONGJMP","HAVE__SC_CLK_TCK","HAVE__SETJMP","HAVE___BUILTIN_UNREACHABLE","HAVE___COSPI","HAVE___SINPI","ID","INCLUDE_RUBY_CONFIG_H","INTEGER_PACK_2COMP","INTEGER_PACK_BIG_ENDIAN","INTEGER_PACK_FORCE_BIGNUM","INTEGER_PACK_FORCE_GENERIC_IMPLEMENTATION","INTEGER_PACK_LITTLE_ENDIAN","INTEGER_PACK_LSBYTE_FIRST","INTEGER_PACK_LSWORD_FIRST","INTEGER_PACK_MSBYTE_FIRST","INTEGER_PACK_MSWORD_FIRST","INTEGER_PACK_NATIVE_BYTE_ORDER","INTEGER_PACK_NEGATIVE","INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR","LIBDIR_BASENAME","NEGATIVE_TIME_T","ONIGENC_CASE_ASCII_ONLY","ONIGENC_CASE_DOWNCASE","ONIGENC_CASE_DOWN_SPECIAL","ONIGENC_CASE_FOLD","ONIGENC_CASE_FOLD_LITHUANIAN","ONIGENC_CASE_FOLD_MIN","ONIGENC_CASE_FOLD_TURKISH_AZERI","ONIGENC_CASE_IS_TITLECASE","ONIGENC_CASE_MODIFIED","ONIGENC_CASE_SPECIAL_OFFSET","ONIGENC_CASE_TITLECASE","ONIGENC_CASE_UPCASE","ONIGENC_CASE_UP_SPECIAL","ONIGENC_CODE_TO_MBC_MAXLEN","ONIGENC_CTYPE_ALNUM","ONIGENC_CTYPE_ALPHA","ONIGENC_CTYPE_ASCII","ONIGENC_CTYPE_BLANK","ONIGENC_CTYPE_CNTRL","ONIGENC_CTYPE_DIGIT","ONIGENC_CTYPE_GRAPH","ONIGENC_CTYPE_LOWER","ONIGENC_CTYPE_NEWLINE","ONIGENC_CTYPE_PRINT","ONIGENC_CTYPE_PUNCT","ONIGENC_CTYPE_SPACE","ONIGENC_CTYPE_UPPER","ONIGENC_CTYPE_WORD","ONIGENC_CTYPE_XDIGIT","ONIGENC_FLAG_NONE","ONIGENC_FLAG_UNICODE","ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM","ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN","ONIGENC_MAX_STD_CTYPE","ONIGENC_MBC_CASE_FOLD_MAXLEN","ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE","ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE","ONIGERR_CONTROL_CODE_SYNTAX","ONIGERR_DEFAULT_ENCODING_IS_NOT_SET","ONIGERR_EMPTY_CHAR_CLASS","ONIGERR_EMPTY_GROUP_NAME","ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS","ONIGERR_END_PATTERN_AT_CONTROL","ONIGERR_END_PATTERN_AT_ESCAPE","ONIGERR_END_PATTERN_AT_LEFT_BRACE","ONIGERR_END_PATTERN_AT_LEFT_BRACKET","ONIGERR_END_PATTERN_AT_META","ONIGERR_END_PATTERN_IN_GROUP","ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS","ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY","ONIGERR_INVALID_ARGUMENT","ONIGERR_INVALID_BACKREF","ONIGERR_INVALID_CHAR_IN_GROUP_NAME","ONIGERR_INVALID_CHAR_PROPERTY_NAME","ONIGERR_INVALID_CODE_POINT_VALUE","ONIGERR_INVALID_COMBINATION_OF_OPTIONS","ONIGERR_INVALID_CONDITION_PATTERN","ONIGERR_INVALID_GROUP_NAME","ONIGERR_INVALID_LOOK_BEHIND_PATTERN","ONIGERR_INVALID_POSIX_BRACKET_TYPE","ONIGERR_INVALID_REPEAT_RANGE_PATTERN","ONIGERR_INVALID_WIDE_CHAR_VALUE","ONIGERR_MATCH_STACK_LIMIT_OVER","ONIGERR_MEMORY","ONIGERR_META_CODE_SYNTAX","ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE","ONIGERR_MULTIPLEX_DEFINED_NAME","ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL","ONIGERR_NESTED_REPEAT_OPERATOR","ONIGERR_NEVER_ENDING_RECURSION","ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION","ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED","ONIGERR_PARSER_BUG","ONIGERR_PARSE_DEPTH_LIMIT_OVER","ONIGERR_PREMATURE_END_OF_CHAR_CLASS","ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR","ONIGERR_STACK_BUG","ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID","ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED","ONIGERR_TOO_BIG_BACKREF_NUMBER","ONIGERR_TOO_BIG_NUMBER","ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE","ONIGERR_TOO_BIG_WIDE_CHAR_VALUE","ONIGERR_TOO_LONG_WIDE_CHAR_VALUE","ONIGERR_TOO_MANY_CAPTURE_GROUPS","ONIGERR_TOO_MANY_MULTI_BYTE_RANGES","ONIGERR_TOO_SHORT_DIGITS","ONIGERR_TOO_SHORT_MULTI_BYTE_STRING","ONIGERR_TYPE_BUG","ONIGERR_UNDEFINED_BYTECODE","ONIGERR_UNDEFINED_GROUP_OPTION","ONIGERR_UNDEFINED_GROUP_REFERENCE","ONIGERR_UNDEFINED_NAME_REFERENCE","ONIGERR_UNEXPECTED_BYTECODE","ONIGERR_UNMATCHED_CLOSE_PARENTHESIS","ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS","ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE","ONIGMO_VERSION_MAJOR","ONIGMO_VERSION_MINOR","ONIGMO_VERSION_TEENY","ONIGURUMA_REGEX_H","ONIGURUMA_VERSION_MAJOR","ONIGURUMA_VERSION_MINOR","ONIGURUMA_VERSION_TEENY","ONIG_CHAR_TABLE_SIZE","ONIG_INEFFECTIVE_META_CHAR","ONIG_MAX_BACKREF_NUM","ONIG_MAX_CAPTURE_GROUP_NUM","ONIG_MAX_CAPTURE_HISTORY_GROUP","ONIG_MAX_ERROR_MESSAGE_LEN","ONIG_MAX_MULTI_BYTE_RANGES_NUM","ONIG_MAX_REPEAT_NUM","ONIG_META_CHAR_ANYCHAR","ONIG_META_CHAR_ANYCHAR_ANYTIME","ONIG_META_CHAR_ANYTIME","ONIG_META_CHAR_ESCAPE","ONIG_META_CHAR_ONE_OR_MORE_TIME","ONIG_META_CHAR_ZERO_OR_ONE_TIME","ONIG_MISMATCH","ONIG_NORMAL","ONIG_NO_SUPPORT_CONFIG","ONIG_NREGION","ONIG_OPTION_ASCII_RANGE","ONIG_OPTION_CAPTURE_GROUP","ONIG_OPTION_DONT_CAPTURE_GROUP","ONIG_OPTION_DOTALL","ONIG_OPTION_EXTEND","ONIG_OPTION_FIND_LONGEST","ONIG_OPTION_FIND_NOT_EMPTY","ONIG_OPTION_IGNORECASE","ONIG_OPTION_MAXBIT","ONIG_OPTION_MULTILINE","ONIG_OPTION_NEGATE_SINGLELINE","ONIG_OPTION_NEWLINE_CRLF","ONIG_OPTION_NONE","ONIG_OPTION_NOTBOL","ONIG_OPTION_NOTBOS","ONIG_OPTION_NOTEOL","ONIG_OPTION_NOTEOS","ONIG_OPTION_POSIX_BRACKET_ALL_RANGE","ONIG_OPTION_SINGLELINE","ONIG_OPTION_WORD_BOUND_ALL_RANGE","ONIG_REGION_NOTPOS","ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC","ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC","ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV","ONIG_SYN_ALLOW_INVALID_INTERVAL","ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME","ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME_CALL","ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP","ONIG_SYN_BACKSLASH_ESCAPE_IN_CC","ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP","ONIG_SYN_CONTEXT_INDEP_ANCHORS","ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS","ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS","ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND","ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY","ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC","ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY","ONIG_SYN_OP2_CCLASS_SET_OP","ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL","ONIG_SYN_OP2_ESC_CAPITAL_K_KEEP","ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META","ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE","ONIG_SYN_OP2_ESC_CAPITAL_R_LINEBREAK","ONIG_SYN_OP2_ESC_CAPITAL_X_EXTENDED_GRAPHEME_CLUSTER","ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR","ONIG_SYN_OP2_ESC_G_BRACE_BACKREF","ONIG_SYN_OP2_ESC_G_SUBEXP_CALL","ONIG_SYN_OP2_ESC_H_HORIZONTAL_WHITESPACE","ONIG_SYN_OP2_ESC_H_XDIGIT","ONIG_SYN_OP2_ESC_K_NAMED_BACKREF","ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY","ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT","ONIG_SYN_OP2_ESC_U_HEX4","ONIG_SYN_OP2_ESC_V_VERTICAL_WHITESPACE","ONIG_SYN_OP2_ESC_V_VTAB","ONIG_SYN_OP2_INEFFECTIVE_ESCAPE","ONIG_SYN_OP2_OPTION_PERL","ONIG_SYN_OP2_OPTION_RUBY","ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL","ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT","ONIG_SYN_OP2_QMARK_CAPITAL_P_NAMED_GROUP","ONIG_SYN_OP2_QMARK_GROUP_EFFECT","ONIG_SYN_OP2_QMARK_LPAREN_CONDITION","ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP","ONIG_SYN_OP2_QMARK_SUBEXP_CALL","ONIG_SYN_OP2_QMARK_TILDE_ABSENT","ONIG_SYN_OP2_QMARK_VBAR_BRANCH_RESET","ONIG_SYN_OP_ASTERISK_ZERO_INF","ONIG_SYN_OP_BRACE_INTERVAL","ONIG_SYN_OP_BRACKET_CC","ONIG_SYN_OP_DECIMAL_BACKREF","ONIG_SYN_OP_DOT_ANYCHAR","ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF","ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR","ONIG_SYN_OP_ESC_BRACE_INTERVAL","ONIG_SYN_OP_ESC_B_WORD_BOUND","ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR","ONIG_SYN_OP_ESC_CONTROL_CHARS","ONIG_SYN_OP_ESC_C_CONTROL","ONIG_SYN_OP_ESC_D_DIGIT","ONIG_SYN_OP_ESC_LPAREN_SUBEXP","ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END","ONIG_SYN_OP_ESC_OCTAL3","ONIG_SYN_OP_ESC_O_BRACE_OCTAL","ONIG_SYN_OP_ESC_PLUS_ONE_INF","ONIG_SYN_OP_ESC_QMARK_ZERO_ONE","ONIG_SYN_OP_ESC_S_WHITE_SPACE","ONIG_SYN_OP_ESC_VBAR_ALT","ONIG_SYN_OP_ESC_W_WORD","ONIG_SYN_OP_ESC_X_BRACE_HEX8","ONIG_SYN_OP_ESC_X_HEX2","ONIG_SYN_OP_LINE_ANCHOR","ONIG_SYN_OP_LPAREN_SUBEXP","ONIG_SYN_OP_PLUS_ONE_INF","ONIG_SYN_OP_POSIX_BRACKET","ONIG_SYN_OP_QMARK_NON_GREEDY","ONIG_SYN_OP_QMARK_ZERO_ONE","ONIG_SYN_OP_VARIABLE_META_CHARACTERS","ONIG_SYN_OP_VBAR_ALT","ONIG_SYN_STRICT_CHECK_BACKREF","ONIG_SYN_USE_LEFT_MOST_NAMED_GROUP","ONIG_SYN_WARN_CC_DUP","ONIG_SYN_WARN_CC_OP_NOT_ESCAPED","ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT","ONIG_TRAVERSE_CALLBACK_AT_BOTH","ONIG_TRAVERSE_CALLBACK_AT_FIRST","ONIG_TRAVERSE_CALLBACK_AT_LAST","OnigApplyAllCaseFoldFunc","OnigCaseFoldCodeItem","OnigCaseFoldType","OnigCodePoint","OnigCodePointMask","OnigCodePointMaskWidth","OnigCompileInfo","OnigCtype","OnigDefaultCaseFoldFlag","OnigDefaultSyntax","OnigDistance","OnigEncDefaultCharEncoding","OnigEncoding","OnigEncodingASCII","OnigEncodingType","OnigEncodingTypeST","OnigErrorInfo","OnigMetaCharTableType","OnigOptionType","OnigPosition","OnigRegex","OnigRegexType","OnigRegion","OnigRepeatRange","OnigSpecialIndexShift","OnigSpecialIndexWidth","OnigSyntaxASIS","OnigSyntaxEmacs","OnigSyntaxGnuRegex","OnigSyntaxGrep","OnigSyntaxJava","OnigSyntaxPerl","OnigSyntaxPerl58","OnigSyntaxPerl58_NG","OnigSyntaxPosixBasic","OnigSyntaxPosixExtended","OnigSyntaxPython","OnigSyntaxRuby","OnigSyntaxType","OnigUChar","OnigWarnFunc","PATH_ENV","PATH_SEP","POSIX_SIGNAL","PRIXPTRDIFF","PRIXSIZE","PRIXVALUE","PRI_64_PREFIX","PRI_INT_PREFIX","PRI_LL_PREFIX","PRI_LONG_PREFIX","PRI_OFFT_PREFIX","PRI_PTRDIFF_PREFIX","PRI_PTR_PREFIX","PRI_RLIM_PREFIX","PRI_SHORT_PREFIX","PRI_SIZE_PREFIX","PRI_VALUE_PREFIX","PRIdPTRDIFF","PRIdSIZE","PRIdVALUE","PRIiPTRDIFF","PRIiSIZE","PRIoPTRDIFF","PRIoSIZE","PRIoVALUE","PRIsVALUE","PRIuPTRDIFF","PRIuSIZE","PRIuVALUE","PRIxPTRDIFF","PRIxSIZE","PRIxVALUE","RARRAY_EMBED_FLAG","RARRAY_EMBED_LEN_MASK","RARRAY_EMBED_LEN_SHIFT","RARRAY_TRANSIENT_FLAG","RArray","RArray__bindgen_ty_1","RArray__bindgen_ty_1__bindgen_ty_1","RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","RBIMPL_COMPILER_IS_Apple","RBIMPL_COMPILER_IS_Clang","RBIMPL_COMPILER_IS_GCC","RBIMPL_COMPILER_IS_Intel","RBIMPL_COMPILER_IS_MSVC","RBIMPL_COMPILER_IS_SunPro","RBIMPL_HAS_ATTR_CONSTEXPR_CXX11","RBIMPL_HAS_ATTR_CONSTEXPR_CXX14","RBIMPL_HAVE_ENUM_ATTRIBUTE","RBIMPL_HAVE___HAS_ATTRIBUTE","RBIMPL_HAVE___HAS_BUILTIN","RBIMPL_NDEBUG","RBIMPL_RUBY_DEBUG","RBIMPL_RVALUE_EMBED_LEN_MAX","RBIMPL_VALUE_FULL","RBIMPL_VALUE_NULL","RBIMPL_VALUE_ONE","RBIMPL_WIDER_ENUM","RB_BLOCK_CALL_FUNC_STRICT","RB_DEBUG_H","RB_EVENT_HOOKS_HAVE_CALLBACK_DATA","RB_IO_WAIT_READABLE","RB_IO_WAIT_WRITABLE","RB_NOGVL_INTR_FAIL","RB_NOGVL_UBF_ASYNC_SAFE","RB_NO_KEYWORDS","RB_NUM_COERCE_FUNCS_NEED_OPID","RB_PASS_KEYWORDS","RB_SCAN_ARGS_KEYWORDS","RB_SCAN_ARGS_LAST_HASH_KEYWORDS","RB_SCAN_ARGS_PASS_CALLED_KEYWORDS","RB_WAITFD_IN","RB_WAITFD_OUT","RB_WAITFD_PRI","RB_WARN_CATEGORY_ALL_BITS","RB_WARN_CATEGORY_DEPRECATED","RB_WARN_CATEGORY_EXPERIMENTAL","RB_WARN_CATEGORY_NONE","RBasic","RClass","RFile","RGENGC_WB_PROTECTED_ARRAY","RGENGC_WB_PROTECTED_BIGNUM","RGENGC_WB_PROTECTED_CLASS","RGENGC_WB_PROTECTED_COMPLEX","RGENGC_WB_PROTECTED_FLOAT","RGENGC_WB_PROTECTED_HASH","RGENGC_WB_PROTECTED_NODE_CREF","RGENGC_WB_PROTECTED_OBJECT","RGENGC_WB_PROTECTED_RATIONAL","RGENGC_WB_PROTECTED_REGEXP","RGENGC_WB_PROTECTED_STRING","RGENGC_WB_PROTECTED_STRUCT","RMODULE_IS_REFINEMENT","RMatch","ROBJECT_EMBED","ROBJECT_OFFSET_AS_ARY","ROBJECT_OFFSET_AS_HEAP_IVPTR","ROBJECT_OFFSET_AS_HEAP_IV_INDEX_TBL","RObject","RObject__bindgen_ty_1","RObject__bindgen_ty_1__bindgen_ty_1","RRegexp","RSTRING_FSTR","RSTRING_NOEMBED","RString","RString__bindgen_ty_1","RString__bindgen_ty_1__bindgen_ty_1","RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","RString__bindgen_ty_1__bindgen_ty_2","RTypedData","RUBY_ALLOCV_LIMIT","RUBY_API_VERSION_CODE","RUBY_API_VERSION_MAJOR","RUBY_API_VERSION_MINOR","RUBY_API_VERSION_TEENY","RUBY_ATOMIC_GENERIC_MACRO","RUBY_AUTHOR","RUBY_BIRTH_DAY","RUBY_BIRTH_MONTH","RUBY_BIRTH_YEAR","RUBY_BLOCK_CALL_FUNC_TAKES_BLOCKARG","RUBY_CALL_WO_GVL_FLAG_SKIP_CHECK_INTS_AFTER","RUBY_DATA_FUNC","RUBY_DEBUG","RUBY_DEFINES_H","RUBY_ECONV_AFTER_OUTPUT","RUBY_ECONV_CRLF_NEWLINE_DECORATOR","RUBY_ECONV_CR_NEWLINE_DECORATOR","RUBY_ECONV_DECORATOR_MASK","RUBY_ECONV_DEFAULT_NEWLINE_DECORATOR","RUBY_ECONV_ERROR_HANDLER_MASK","RUBY_ECONV_FLAGS_PLACEHOLDER","RUBY_ECONV_INVALID_MASK","RUBY_ECONV_INVALID_REPLACE","RUBY_ECONV_LF_NEWLINE_DECORATOR","RUBY_ECONV_NEWLINE_DECORATOR_MASK","RUBY_ECONV_NEWLINE_DECORATOR_READ_MASK","RUBY_ECONV_NEWLINE_DECORATOR_WRITE_MASK","RUBY_ECONV_PARTIAL_INPUT","RUBY_ECONV_STATEFUL_DECORATOR_MASK","RUBY_ECONV_UNDEF_HEX_CHARREF","RUBY_ECONV_UNDEF_MASK","RUBY_ECONV_UNDEF_REPLACE","RUBY_ECONV_UNIVERSAL_NEWLINE_DECORATOR","RUBY_ECONV_XML_ATTR_CONTENT_DECORATOR","RUBY_ECONV_XML_ATTR_QUOTE_DECORATOR","RUBY_ECONV_XML_TEXT_DECORATOR","RUBY_ELTS_SHARED","RUBY_ENCODING_H","RUBY_ENCODING_INLINE_MAX","RUBY_ENCODING_MASK","RUBY_ENCODING_MAXNAMELEN","RUBY_ENCODING_SHIFT","RUBY_ENC_CODERANGE_7BIT","RUBY_ENC_CODERANGE_BROKEN","RUBY_ENC_CODERANGE_MASK","RUBY_ENC_CODERANGE_UNKNOWN","RUBY_ENC_CODERANGE_VALID","RUBY_EVENT_ALL","RUBY_EVENT_B_CALL","RUBY_EVENT_B_RETURN","RUBY_EVENT_CALL","RUBY_EVENT_CLASS","RUBY_EVENT_C_CALL","RUBY_EVENT_C_RETURN","RUBY_EVENT_END","RUBY_EVENT_FIBER_SWITCH","RUBY_EVENT_HOOK_FLAG_DELETED","RUBY_EVENT_HOOK_FLAG_RAW_ARG","RUBY_EVENT_HOOK_FLAG_SAFE","RUBY_EVENT_LINE","RUBY_EVENT_NONE","RUBY_EVENT_RAISE","RUBY_EVENT_RESERVED_FOR_INTERNAL_USE","RUBY_EVENT_RETURN","RUBY_EVENT_SCRIPT_COMPILED","RUBY_EVENT_SWITCH","RUBY_EVENT_THREAD_BEGIN","RUBY_EVENT_THREAD_END","RUBY_EVENT_TRACEPOINT_ALL","RUBY_FIBER_SCHEDULER_VERSION","RUBY_FIXNUM_FLAG","RUBY_FIXNUM_MAX","RUBY_FIXNUM_MIN","RUBY_FLONUM_FLAG","RUBY_FLONUM_MASK","RUBY_FL_DUPPED","RUBY_FL_DUPPED","RUBY_FL_EXIVAR","RUBY_FL_FINALIZE","RUBY_FL_FREEZE","RUBY_FL_PROMOTED","RUBY_FL_PROMOTED0","RUBY_FL_PROMOTED1","RUBY_FL_SEEN_OBJ_ID","RUBY_FL_SHAREABLE","RUBY_FL_SINGLETON","RUBY_FL_TAINT","RUBY_FL_UNTRUSTED","RUBY_FL_USER0","RUBY_FL_USER1","RUBY_FL_USER10","RUBY_FL_USER11","RUBY_FL_USER12","RUBY_FL_USER13","RUBY_FL_USER14","RUBY_FL_USER15","RUBY_FL_USER16","RUBY_FL_USER17","RUBY_FL_USER18","RUBY_FL_USER19","RUBY_FL_USER2","RUBY_FL_USER3","RUBY_FL_USER4","RUBY_FL_USER5","RUBY_FL_USER6","RUBY_FL_USER7","RUBY_FL_USER8","RUBY_FL_USER9","RUBY_FL_USHIFT","RUBY_FL_WB_PROTECTED","RUBY_H","RUBY_IMMEDIATE_MASK","RUBY_INTEGER_UNIFICATION","RUBY_INTERNAL_EVENT_FREEOBJ","RUBY_INTERNAL_EVENT_GC_END_MARK","RUBY_INTERNAL_EVENT_GC_END_SWEEP","RUBY_INTERNAL_EVENT_GC_ENTER","RUBY_INTERNAL_EVENT_GC_EXIT","RUBY_INTERNAL_EVENT_GC_START","RUBY_INTERNAL_EVENT_MASK","RUBY_INTERNAL_EVENT_NEWOBJ","RUBY_INTERNAL_EVENT_OBJSPACE_MASK","RUBY_INTERNAL_EVENT_SWITCH","RUBY_INTERNAL_THREAD_EVENT_EXITED","RUBY_INTERNAL_THREAD_EVENT_MASK","RUBY_INTERNAL_THREAD_EVENT_READY","RUBY_INTERNAL_THREAD_EVENT_RESUMED","RUBY_INTERNAL_THREAD_EVENT_STARTED","RUBY_INTERNAL_THREAD_EVENT_SUSPENDED","RUBY_INTERN_H","RUBY_IO_H","RUBY_IO_PRIORITY","RUBY_IO_READABLE","RUBY_IO_WRITABLE","RUBY_MEMORY_VIEW_ANY_CONTIGUOUS","RUBY_MEMORY_VIEW_COLUMN_MAJOR","RUBY_MEMORY_VIEW_FORMAT","RUBY_MEMORY_VIEW_H","RUBY_MEMORY_VIEW_INDIRECT","RUBY_MEMORY_VIEW_MULTI_DIMENSIONAL","RUBY_MEMORY_VIEW_ROW_MAJOR","RUBY_MEMORY_VIEW_SIMPLE","RUBY_MEMORY_VIEW_STRIDES","RUBY_MEMORY_VIEW_WRITABLE","RUBY_MISSING_H","RUBY_NDEBUG","RUBY_PLATFORM","RUBY_PRI_VALUE_MARK","RUBY_Qfalse","RUBY_Qnil","RUBY_Qtrue","RUBY_Qundef","RUBY_RACTOR_H","RUBY_RANDOM_H","RUBY_RANDOM_INTERFACE_VERSION_MAJOR","RUBY_RANDOM_INTERFACE_VERSION_MAJOR_MAX","RUBY_RANDOM_INTERFACE_VERSION_MINOR","RUBY_RANDOM_INTERFACE_VERSION_MINOR_MAX","RUBY_RE_H","RUBY_RUBY_BACKWARD_H","RUBY_RUBY_H","RUBY_SPECIAL_SHIFT","RUBY_ST_H","RUBY_SUBST_H","RUBY_SYMBOL_FLAG","RUBY_THREAD_H","RUBY_THREAD_NATIVE_H","RUBY_TYPED_FREE_IMMEDIATELY","RUBY_TYPED_FROZEN_SHAREABLE","RUBY_TYPED_PROMOTED1","RUBY_TYPED_WB_PROTECTED","RUBY_T_ARRAY","RUBY_T_BIGNUM","RUBY_T_CLASS","RUBY_T_COMPLEX","RUBY_T_DATA","RUBY_T_FALSE","RUBY_T_FILE","RUBY_T_FIXNUM","RUBY_T_FLOAT","RUBY_T_HASH","RUBY_T_ICLASS","RUBY_T_IMEMO","RUBY_T_MASK","RUBY_T_MATCH","RUBY_T_MODULE","RUBY_T_MOVED","RUBY_T_NIL","RUBY_T_NODE","RUBY_T_NONE","RUBY_T_OBJECT","RUBY_T_RATIONAL","RUBY_T_REGEXP","RUBY_T_STRING","RUBY_T_STRUCT","RUBY_T_SYMBOL","RUBY_T_TRUE","RUBY_T_UNDEF","RUBY_T_ZOMBIE","RUBY_UNTYPED_DATA_WARNING","RUBY_UTIL_H","RUBY_VERSION_H","RUBY_VM","RUBY_VM_H","RVALUE_EMBED_LEN_MAX","Regexp","SIGNEDNESS_OF_CLOCKID_T","SIGNEDNESS_OF_DEV_T","SIGNEDNESS_OF_GID_T","SIGNEDNESS_OF_MODE_T","SIGNEDNESS_OF_OFF_T","SIGNEDNESS_OF_PID_T","SIGNEDNESS_OF_RLIM_T","SIGNEDNESS_OF_TIME_T","SIGNEDNESS_OF_UID_T","SIZEOF_CLOCK_T","SIZEOF_DEV_T","SIZEOF_DOUBLE","SIZEOF_FLOAT","SIZEOF_INT","SIZEOF_INT128_T","SIZEOF_INT16_T","SIZEOF_INT32_T","SIZEOF_INT64_T","SIZEOF_INT8_T","SIZEOF_INTPTR_T","SIZEOF_LONG","SIZEOF_LONG_LONG","SIZEOF_OFF_T","SIZEOF_PTRDIFF_T","SIZEOF_SHORT","SIZEOF_SIZE_T","SIZEOF_SSIZE_T","SIZEOF_STRUCT_STAT_ST_BLOCKS","SIZEOF_STRUCT_STAT_ST_DEV","SIZEOF_STRUCT_STAT_ST_INO","SIZEOF_STRUCT_STAT_ST_RDEV","SIZEOF_STRUCT_STAT_ST_SIZE","SIZEOF_STRUCT_TIMEVAL_TV_SEC","SIZEOF_ST_INDEX_T","SIZEOF_TIME_T","SIZEOF_UINT128_T","SIZEOF_UINT16_T","SIZEOF_UINT32_T","SIZEOF_UINT64_T","SIZEOF_UINT8_T","SIZEOF_UINTPTR_T","SIZEOF_VALUE","SIZEOF_VOIDP","SIZEOF___INT128","SIZEOF___INT64","STACK_GROW_DIRECTION","STDC_HEADERS","ST_CHECK","ST_CONTINUE","ST_DELETE","ST_INDEX_BITS","ST_REPLACE","ST_STOP","THREAD_IMPL_H","THREAD_IMPL_SRC","TRUE","UNALIGNED_WORD_ACCESS","UNLIMITED_ARGUMENTS","USE_FLONUM","USE_GC_MALLOC_OBJ_INFO_DETAILS","USE_MJIT","USE_RGENGC","USE_RGENGC_LOGGING_WB_UNPROTECT","USE_RINCGC","USE_RVARGC","USE_SYMBOL_AS_METHOD_NAME","USE_TRANSIENT_HEAP","USE_UNALIGNED_MEMBER_ACCESS","USE_YJIT","VALUE","_ALL_SOURCE","_DARWIN_C_SOURCE","_GNU_SOURCE","_HPUX_ALT_XOPEN_SOCKET_API","_NETBSD_SOURCE","_OPENBSD_SOURCE","_POSIX_PTHREAD_SEMANTICS","_REENTRANT","_TANDEM_SOURCE","_THREAD_SAFE","__BindgenBitfieldUnit","__EXTENSIONS__","__STDC_WANT_IEC_60559_ATTRIBS_EXT__","__STDC_WANT_IEC_60559_BFP_EXT__","__STDC_WANT_IEC_60559_DFP_EXT__","__STDC_WANT_IEC_60559_FUNCS_EXT__","__STDC_WANT_IEC_60559_TYPES_EXT__","__STDC_WANT_LIB_EXT1__","__STDC_WANT_LIB_EXT2__","__STDC_WANT_MATH_SPEC_FUNCS__","__builtin_va_list","__darwin_blkcnt_t","__darwin_blksize_t","__darwin_dev_t","__darwin_gid_t","__darwin_ino64_t","__darwin_intptr_t","__darwin_mode_t","__darwin_off_t","__darwin_pid_t","__darwin_size_t","__darwin_ssize_t","__darwin_suseconds_t","__darwin_time_t","__darwin_uid_t","__int32_t","__int64_t","__sFILE","__sFILEX","__sbuf","__uint16_t","__uint32_t","__uint64_t","_address","_base","_bf","_bindgen_ty_2","_bindgen_ty_3","_bindgen_ty_4","_bindgen_ty_5","_bindgen_ty_6","_bindgen_ty_7","_bindgen_ty_8","_bindgen_ty_9","_bitfield_1","_bitfield_align_1","_blksize","_close","_cookie","_extra","_file","_flags","_lb","_lbfsize","_memory_view_entry","_nbuf","_offset","_p","_r","_read","_seek","_size","_ub","_ubuf","_ur","_w","_write","alloc","allocated","anchor","anchor_dmax","anchor_dmin","anychar","anychar_anytime","anytime","apply_all_case_fold","ary","ary","ary","as_","as_","as_","aux","aux","available_p_func","base_num","basic","basic","basic","basic","basic","basic","basic","beg","beg","begin","behavior","bin_power","bins","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bt_mem_end","bt_mem_start","byte_len","byte_size","capa","capa","capa","capture_history","case_fold_flag","case_fold_flag","case_map","cbuf","chain","char_offset","char_offset_num_allocated","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","code_len","code_to_mbc","code_to_mbclen","compare","components","data","data","data","dcompact","default","default_seed_bits","dev_t","dfree","dmark","dmax","dmin","dsize","eaccess","ecflags","econv_after_output","econv_destination_buffer_full","econv_finished","econv_incomplete_input","econv_invalid_byte_sequence","econv_source_buffer_empty","econv_undefined_conversion","ecopts","embed","enc","enc","enc","enc2","encs","end","end","end","entries","entries_bound","entries_start","entry_power","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","esc","exact","exact_end","exclude_end","explicit_bzero","fd","fd_set","fds_bits","fdset","finalize","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","fpos_t","fptr","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","get","get_bit","get_bytes","get_case_fold_codes_by_str","get_ctype_code_range","get_func","get_int32","get_real","gid_t","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","heap","heap","heap","init","init_int32","inner_num","int_map","int_map_backward","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_allowed_reverse_match","is_code_ctype","is_mbc_newline","item_desc","item_size","iv_index_tbl","ivptr","klass","left","left_adjust_char_head","len","len","len","len","length","lineno","little_endian_p","lower","major","map","mark","max_enc_len","maxfd","mbc_case_fold","mbc_to_code","meta_char_table","min_enc_len","minor","mode","mode_t","name","name_table","native_size_p","ndim","new","new_bitfield_1","nlink_t","num_call","num_comb_exp_check","num_entries","num_mem","num_null_check","num_of_elements","num_regs","num_repeat","obj","off","off_t","offset","one_or_more_time","onig_capture_tree_traverse","onig_check_linear_time","onig_copy_encoding","onig_copy_syntax","onig_copyright","onig_end","onig_error_code_to_str","onig_foreach_name","onig_free","onig_free_body","onig_get_case_fold_flag","onig_get_default_case_fold_flag","onig_get_encoding","onig_get_match_stack_limit_size","onig_get_options","onig_get_parse_depth_limit","onig_get_syntax","onig_get_syntax_behavior","onig_get_syntax_op","onig_get_syntax_op2","onig_get_syntax_options","onig_init","onig_initialize","onig_match","onig_name_to_backref_number","onig_name_to_group_numbers","onig_new","onig_new_deluxe","onig_new_without_alloc","onig_noname_group_capture_is_active","onig_null_warn","onig_number_of_capture_histories","onig_number_of_captures","onig_number_of_names","onig_reg_init","onig_region_clear","onig_region_copy","onig_region_free","onig_region_init","onig_region_new","onig_region_resize","onig_region_set","onig_scan","onig_search","onig_search_gpos","onig_set_default_case_fold_flag","onig_set_default_syntax","onig_set_match_stack_limit_size","onig_set_meta_char","onig_set_parse_depth_limit","onig_set_syntax_behavior","onig_set_syntax_op","onig_set_syntax_op2","onig_set_syntax_options","onig_set_verb_warn_func","onig_set_warn_func","onig_version","onigenc_ascii_only_case_map","onigenc_get_default_encoding","onigenc_get_left_adjust_char_head","onigenc_get_prev_char_head","onigenc_get_right_adjust_char_head","onigenc_get_right_adjust_char_head_with_prev","onigenc_init","onigenc_mbclen","onigenc_set_default_encoding","onigenc_step_back","onigenc_str_bytelen_null","onigenc_strlen","onigenc_strlen_null","op","op2","optimize","option","options","options","p","par","par_end","parent","partial_cmp","pathv","pattern_enc","pid","pid_t","precise_mbc_enc_len","private_data","property_name_to_ctype","ptr","ptr","ptr","ptr","rb_Array","rb_Complex","rb_Float","rb_Hash","rb_Integer","rb_Rational","rb_String","rb_absint_numwords","rb_absint_singlebit_p","rb_absint_size","rb_add_event_hook","rb_add_event_hook2","rb_alias","rb_alias_variable","rb_alloc_func_t","rb_alloc_tmp_buffer","rb_alloc_tmp_buffer_with_count","rb_any_to_s","rb_apply","rb_argv0","rb_arithmetic_sequence_beg_len_step","rb_arithmetic_sequence_components_t","rb_arithmetic_sequence_extract","rb_ary_aref","rb_ary_assoc","rb_ary_cat","rb_ary_clear","rb_ary_cmp","rb_ary_concat","rb_ary_delete","rb_ary_delete_at","rb_ary_detransient","rb_ary_dup","rb_ary_each","rb_ary_entry","rb_ary_free","rb_ary_freeze","rb_ary_hidden_new","rb_ary_includes","rb_ary_join","rb_ary_modify","rb_ary_new","rb_ary_new_capa","rb_ary_new_from_args","rb_ary_new_from_values","rb_ary_plus","rb_ary_pop","rb_ary_ptr_use_end","rb_ary_ptr_use_start","rb_ary_push","rb_ary_rassoc","rb_ary_replace","rb_ary_resize","rb_ary_resurrect","rb_ary_reverse","rb_ary_rotate","rb_ary_shared_with_p","rb_ary_shift","rb_ary_sort","rb_ary_sort_bang","rb_ary_store","rb_ary_subseq","rb_ary_to_ary","rb_ary_to_s","rb_ary_unshift","rb_ascii8bit_encindex","rb_ascii8bit_encoding","rb_assert_failure","rb_assoc_new","rb_atomic_t","rb_attr","rb_attr_get","rb_autoload_load","rb_autoload_p","rb_backref_get","rb_backref_set","rb_backtrace","rb_big2dbl","rb_big2ll","rb_big2long","rb_big2str","rb_big2ull","rb_big2ulong","rb_big_2comp","rb_big_and","rb_big_clone","rb_big_cmp","rb_big_div","rb_big_divmod","rb_big_eq","rb_big_eql","rb_big_idiv","rb_big_lshift","rb_big_minus","rb_big_modulo","rb_big_mul","rb_big_new","rb_big_norm","rb_big_or","rb_big_pack","rb_big_plus","rb_big_pow","rb_big_resize","rb_big_rshift","rb_big_sign","rb_big_unpack","rb_big_xor","rb_bigzero_p","rb_binding_new","rb_block_call","rb_block_call_func","rb_block_call_func_t","rb_block_call_kw","rb_block_given_p","rb_block_lambda","rb_block_proc","rb_blocking_function_t","rb_bug","rb_bug_errno","rb_cArray","rb_cBasicObject","rb_cBinding","rb_cClass","rb_cComplex","rb_cDir","rb_cEncoding","rb_cEnumerator","rb_cFalseClass","rb_cFile","rb_cFloat","rb_cHash","rb_cIO","rb_cInteger","rb_cMatch","rb_cMethod","rb_cModule","rb_cNameErrorMesg","rb_cNilClass","rb_cNumeric","rb_cObject","rb_cProc","rb_cRactor","rb_cRandom","rb_cRange","rb_cRational","rb_cRefinement","rb_cRegexp","rb_cStat","rb_cString","rb_cStruct","rb_cSymbol","rb_cThread","rb_cTime","rb_cTrueClass","rb_cUnboundMethod","rb_call_super","rb_call_super_kw","rb_catch","rb_catch_obj","rb_category_compile_warn","rb_category_warn","rb_category_warning","rb_char_to_option_kcode","rb_check_array_type","rb_check_convert_type","rb_check_copyable","rb_check_frozen","rb_check_funcall","rb_check_funcall_kw","rb_check_hash_type","rb_check_id","rb_check_id_cstr","rb_check_inheritable","rb_check_safe_str","rb_check_string_type","rb_check_symbol","rb_check_symbol_cstr","rb_check_to_float","rb_check_to_int","rb_check_to_integer","rb_check_type","rb_check_typeddata","rb_class2name","rb_class_attached_object","rb_class_descendants","rb_class_get_superclass","rb_class_inherited_p","rb_class_instance_methods","rb_class_name","rb_class_new","rb_class_new_instance","rb_class_new_instance_kw","rb_class_new_instance_pass_kw","rb_class_path","rb_class_path_cached","rb_class_private_instance_methods","rb_class_protected_instance_methods","rb_class_public_instance_methods","rb_class_real","rb_class_subclasses","rb_class_superclass","rb_clear_constant_cache","rb_clear_constant_cache_for_id","rb_cloexec_dup","rb_cloexec_dup2","rb_cloexec_fcntl_dupfd","rb_cloexec_open","rb_cloexec_pipe","rb_close_before_exec","rb_cmperr","rb_cmpint","rb_compile_warn","rb_compile_warning","rb_complex_abs","rb_complex_arg","rb_complex_conjugate","rb_complex_div","rb_complex_imag","rb_complex_minus","rb_complex_mul","rb_complex_new","rb_complex_new_polar","rb_complex_plus","rb_complex_polar","rb_complex_pow","rb_complex_raw","rb_complex_real","rb_complex_uminus","rb_const_defined","rb_const_defined_at","rb_const_defined_from","rb_const_get","rb_const_get_at","rb_const_get_from","rb_const_list","rb_const_remove","rb_const_set","rb_convert_type","rb_copy_generic_ivar","rb_cstr2inum","rb_cstr_to_dbl","rb_cstr_to_inum","rb_current_receiver","rb_cv_get","rb_cv_set","rb_cvar_defined","rb_cvar_find","rb_cvar_get","rb_cvar_set","rb_data_object_wrap","rb_data_object_zalloc","rb_data_type_struct","rb_data_type_struct__bindgen_ty_1","rb_data_type_t","rb_data_typed_object_wrap","rb_data_typed_object_zalloc","rb_dbl2big","rb_dbl_cmp","rb_dbl_complex_new","rb_debug_inspector_backtrace_locations","rb_debug_inspector_current_depth","rb_debug_inspector_frame_binding_get","rb_debug_inspector_frame_class_get","rb_debug_inspector_frame_depth","rb_debug_inspector_frame_iseq_get","rb_debug_inspector_frame_self_get","rb_debug_inspector_func_t","rb_debug_inspector_open","rb_debug_inspector_struct","rb_debug_inspector_t","rb_debug_rstring_null_ptr","rb_default_external_encoding","rb_default_internal_encoding","rb_default_rs","rb_define_alias","rb_define_alloc_func","rb_define_attr","rb_define_class","rb_define_class_id","rb_define_class_id_under","rb_define_class_under","rb_define_class_variable","rb_define_const","rb_define_dummy_encoding","rb_define_finalizer","rb_define_global_const","rb_define_global_function","rb_define_hooked_variable","rb_define_method","rb_define_method_id","rb_define_module","rb_define_module_function","rb_define_module_id","rb_define_module_id_under","rb_define_module_under","rb_define_private_method","rb_define_protected_method","rb_define_readonly_variable","rb_define_singleton_method","rb_define_variable","rb_define_virtual_variable","rb_deprecate_constant","rb_detach_process","rb_dir_getwd","rb_during_gc","rb_eArgError","rb_eEOFError","rb_eEncCompatError","rb_eEncodingError","rb_eException","rb_eFatal","rb_eFloatDomainError","rb_eFrozenError","rb_eIOError","rb_eIOTimeoutError","rb_eIndexError","rb_eInterrupt","rb_eKeyError","rb_eLoadError","rb_eLocalJumpError","rb_eMathDomainError","rb_eNameError","rb_eNoMatchingPatternError","rb_eNoMatchingPatternKeyError","rb_eNoMemError","rb_eNoMethodError","rb_eNotImpError","rb_eRangeError","rb_eRegexpError","rb_eRuntimeError","rb_eScriptError","rb_eSecurityError","rb_eSignal","rb_eStandardError","rb_eStopIteration","rb_eSyntaxError","rb_eSysStackError","rb_eSystemCallError","rb_eSystemExit","rb_eThreadError","rb_eTypeError","rb_eZeroDivError","rb_each","rb_econv_append","rb_econv_asciicompat_encoding","rb_econv_binmode","rb_econv_check_error","rb_econv_close","rb_econv_convert","rb_econv_decorate_at_first","rb_econv_decorate_at_last","rb_econv_encoding_to_insert_output","rb_econv_has_convpath_p","rb_econv_insert_output","rb_econv_make_exception","rb_econv_open","rb_econv_open_exc","rb_econv_open_opts","rb_econv_prepare_options","rb_econv_prepare_opts","rb_econv_putback","rb_econv_putbackable","rb_econv_result_t","rb_econv_set_replacement","rb_econv_str_append","rb_econv_str_convert","rb_econv_substr_append","rb_econv_substr_convert","rb_econv_t","rb_enc_alias","rb_enc_ascget","rb_enc_associate","rb_enc_associate_index","rb_enc_capable","rb_enc_check","rb_enc_codelen","rb_enc_codepoint_len","rb_enc_compatible","rb_enc_copy","rb_enc_default_external","rb_enc_default_internal","rb_enc_dummy_p","rb_enc_fast_mbclen","rb_enc_find","rb_enc_find_index","rb_enc_from_encoding","rb_enc_from_index","rb_enc_get","rb_enc_get_index","rb_enc_interned_str","rb_enc_interned_str_cstr","rb_enc_mbclen","rb_enc_nth","rb_enc_path_end","rb_enc_path_last_separator","rb_enc_path_next","rb_enc_path_skip_prefix","rb_enc_precise_mbclen","rb_enc_raise","rb_enc_reg_new","rb_enc_replicate","rb_enc_set_default_external","rb_enc_set_default_internal","rb_enc_set_index","rb_enc_sprintf","rb_enc_str_asciionly_p","rb_enc_str_buf_cat","rb_enc_str_coderange","rb_enc_str_new","rb_enc_str_new_cstr","rb_enc_str_new_static","rb_enc_strlen","rb_enc_symname2_p","rb_enc_symname_p","rb_enc_to_index","rb_enc_tolower","rb_enc_toupper","rb_enc_uint_chr","rb_enc_unicode_p","rb_enc_vsprintf","rb_encoding","rb_ensure","rb_enum_values_pack","rb_enumerator_size_func","rb_enumeratorize","rb_enumeratorize_with_size","rb_enumeratorize_with_size_kw","rb_env_clear","rb_eof_error","rb_eql","rb_equal","rb_errinfo","rb_error_arity","rb_error_frozen","rb_error_frozen_object","rb_eval_cmd_kw","rb_eval_string","rb_eval_string_protect","rb_eval_string_wrap","rb_event_flag_t","rb_event_hook_flag_t","rb_event_hook_func_t","rb_exc_fatal","rb_exc_new","rb_exc_new_cstr","rb_exc_new_str","rb_exc_raise","rb_exec_recursive","rb_exec_recursive_outer","rb_exec_recursive_paired","rb_exec_recursive_paired_outer","rb_exit","rb_ext_ractor_safe","rb_extend_object","rb_external_str_new","rb_external_str_new_cstr","rb_external_str_new_with_enc","rb_extract_keywords","rb_f_abort","rb_f_exec","rb_f_exit","rb_f_global_variables","rb_f_kill","rb_f_notimplement","rb_f_require","rb_f_sprintf","rb_f_trace_var","rb_f_untrace_var","rb_fatal","rb_fd_clr","rb_fd_copy","rb_fd_dup","rb_fd_fix_cloexec","rb_fd_init","rb_fd_isset","rb_fd_select","rb_fd_set","rb_fd_term","rb_fd_zero","rb_fdopen","rb_fdset_t","rb_feature_provided","rb_fiber_alive_p","rb_fiber_current","rb_fiber_new","rb_fiber_new_storage","rb_fiber_raise","rb_fiber_resume","rb_fiber_resume_kw","rb_fiber_scheduler_address_resolve","rb_fiber_scheduler_block","rb_fiber_scheduler_close","rb_fiber_scheduler_current","rb_fiber_scheduler_current_for_thread","rb_fiber_scheduler_fiber","rb_fiber_scheduler_get","rb_fiber_scheduler_io_close","rb_fiber_scheduler_io_pread","rb_fiber_scheduler_io_pwrite","rb_fiber_scheduler_io_read","rb_fiber_scheduler_io_read_memory","rb_fiber_scheduler_io_select","rb_fiber_scheduler_io_selectv","rb_fiber_scheduler_io_wait","rb_fiber_scheduler_io_wait_readable","rb_fiber_scheduler_io_wait_writable","rb_fiber_scheduler_io_write","rb_fiber_scheduler_io_write_memory","rb_fiber_scheduler_kernel_sleep","rb_fiber_scheduler_kernel_sleepv","rb_fiber_scheduler_make_timeout","rb_fiber_scheduler_process_wait","rb_fiber_scheduler_set","rb_fiber_scheduler_unblock","rb_fiber_transfer","rb_fiber_transfer_kw","rb_fiber_yield","rb_fiber_yield_kw","rb_file_absolute_path","rb_file_directory_p","rb_file_dirname","rb_file_expand_path","rb_file_open","rb_file_open_str","rb_file_s_absolute_path","rb_file_s_expand_path","rb_file_size","rb_filesystem_encindex","rb_filesystem_encoding","rb_filesystem_str_new","rb_filesystem_str_new_cstr","rb_find_encoding","rb_find_file","rb_find_file_ext","rb_fix2int","rb_fix2short","rb_fix2str","rb_fix2uint","rb_fix2ushort","rb_float_new","rb_float_new_in_heap","rb_float_value","rb_flt_rationalize","rb_flt_rationalize_with_prec","rb_frame_callee","rb_frame_method_id_and_class","rb_frame_this_func","rb_free_generic_ivar","rb_free_tmp_buffer","rb_freeze_singleton_class","rb_frozen_error_raise","rb_fs","rb_funcall","rb_funcall_passing_block","rb_funcall_passing_block_kw","rb_funcall_with_block","rb_funcall_with_block_kw","rb_funcallv","rb_funcallv_kw","rb_funcallv_public","rb_funcallv_public_kw","rb_gc","rb_gc_adjust_memory_usage","rb_gc_copy_finalizer","rb_gc_count","rb_gc_disable","rb_gc_enable","rb_gc_force_recycle","rb_gc_latest_gc_info","rb_gc_location","rb_gc_mark","rb_gc_mark_locations","rb_gc_mark_maybe","rb_gc_mark_movable","rb_gc_register_address","rb_gc_register_mark_object","rb_gc_start","rb_gc_stat","rb_gc_unregister_address","rb_gc_update_tbl_refs","rb_gc_writebarrier","rb_gc_writebarrier_unprotect","rb_genrand_int32","rb_genrand_real","rb_genrand_ulong_limited","rb_get_alloc_func","rb_get_argv","rb_get_kwargs","rb_get_path","rb_get_path_no_checksafe","rb_get_values_at","rb_gets","rb_glob","rb_global_variable","rb_gv_get","rb_gv_set","rb_gvar_getter_t","rb_gvar_marker_t","rb_gvar_readonly_setter","rb_gvar_setter_t","rb_gvar_undef_getter","rb_gvar_undef_marker","rb_gvar_undef_setter","rb_gvar_val_getter","rb_gvar_val_marker","rb_gvar_val_setter","rb_gvar_var_getter","rb_gvar_var_marker","rb_gvar_var_setter","rb_hash","rb_hash_aref","rb_hash_aset","rb_hash_bulk_insert","rb_hash_bulk_insert_into_st_table","rb_hash_clear","rb_hash_delete","rb_hash_delete_if","rb_hash_dup","rb_hash_fetch","rb_hash_foreach","rb_hash_freeze","rb_hash_lookup","rb_hash_lookup2","rb_hash_new","rb_hash_new_capa","rb_hash_set_ifnone","rb_hash_size","rb_hash_size_num","rb_hash_start","rb_hash_tbl","rb_hash_update_by","rb_hash_update_func","rb_id2name","rb_id2str","rb_id2sym","rb_id_attrset","rb_id_table","rb_include_module","rb_inspect","rb_int2big","rb_int2inum","rb_int_pair_to_real","rb_int_positive_pow","rb_integer_pack","rb_integer_unpack","rb_intern","rb_intern2","rb_intern3","rb_intern_str","rb_internal_thread_add_event_hook","rb_internal_thread_event_callback","rb_internal_thread_event_data_t","rb_internal_thread_event_hook","rb_internal_thread_event_hook_t","rb_internal_thread_remove_event_hook","rb_interned_str","rb_interned_str_cstr","rb_interrupt","rb_invalid_str","rb_io_addstr","rb_io_ascii8bit_binmode","rb_io_binmode","rb_io_buffer_t","rb_io_bufwrite","rb_io_check_byte_readable","rb_io_check_char_readable","rb_io_check_closed","rb_io_check_initialized","rb_io_check_io","rb_io_check_readable","rb_io_check_writable","rb_io_close","rb_io_descriptor","rb_io_enc_t","rb_io_eof","rb_io_event_t","rb_io_extract_encoding_option","rb_io_extract_modeenc","rb_io_fdopen","rb_io_flush","rb_io_fptr_finalize","rb_io_get_io","rb_io_get_write_io","rb_io_getbyte","rb_io_gets","rb_io_make_open_file","rb_io_maybe_wait","rb_io_maybe_wait_readable","rb_io_maybe_wait_writable","rb_io_modestr_fmode","rb_io_modestr_oflags","rb_io_oflags_fmode","rb_io_print","rb_io_printf","rb_io_puts","rb_io_read_check","rb_io_read_pending","rb_io_set_nonblock","rb_io_set_timeout","rb_io_set_write_io","rb_io_stdio_file","rb_io_synchronized","rb_io_t","rb_io_taint_check","rb_io_timeout","rb_io_ungetbyte","rb_io_ungetc","rb_io_wait","rb_io_wait_readable","rb_io_wait_readwrite","rb_io_wait_writable","rb_io_write","rb_is_absolute_path","rb_is_attrset_id","rb_is_class_id","rb_is_const_id","rb_is_global_id","rb_is_instance_id","rb_is_junk_id","rb_is_local_id","rb_iter_break","rb_iter_break_value","rb_iterate","rb_iv_get","rb_iv_set","rb_ivar_count","rb_ivar_defined","rb_ivar_foreach","rb_ivar_get","rb_ivar_set","rb_jump_tag","rb_keyword_given_p","rb_last_status_get","rb_last_status_set","rb_lastline_get","rb_lastline_set","rb_ll2inum","rb_load","rb_load_file","rb_load_file_str","rb_load_protect","rb_loaderror","rb_loaderror_with_path","rb_locale_charmap","rb_locale_encindex","rb_locale_encoding","rb_locale_str_new","rb_locale_str_new_cstr","rb_mComparable","rb_mEnumerable","rb_mErrno","rb_mFileTest","rb_mGC","rb_mKernel","rb_mMath","rb_mProcess","rb_mWaitReadable","rb_mWaitWritable","rb_make_backtrace","rb_make_exception","rb_mark_hash","rb_mark_set","rb_mark_tbl","rb_mark_tbl_no_pin","rb_marshal_define_compat","rb_marshal_dump","rb_marshal_load","rb_match_busy","rb_mem_clear","rb_memcicmp","rb_memerror","rb_memhash","rb_memory_id","rb_memory_view_available_p","rb_memory_view_available_p_func_t","rb_memory_view_entry","rb_memory_view_entry_t","rb_memory_view_exported_object_registry","rb_memory_view_exported_object_registry_data_type","rb_memory_view_extract_item_members","rb_memory_view_fill_contiguous_strides","rb_memory_view_get","rb_memory_view_get_func_t","rb_memory_view_get_item","rb_memory_view_get_item_pointer","rb_memory_view_init_as_byte_array","rb_memory_view_is_column_major_contiguous","rb_memory_view_is_row_major_contiguous","rb_memory_view_item_component_t","rb_memory_view_item_size_from_format","rb_memory_view_parse_item_format","rb_memory_view_prepare_item_desc","rb_memory_view_register","rb_memory_view_release","rb_memory_view_release_func_t","rb_memory_view_t","rb_memory_view_t__bindgen_ty_1","rb_memsearch","rb_method_basic_definition_p","rb_method_boundp","rb_method_call","rb_method_call_kw","rb_method_call_with_block","rb_method_call_with_block_kw","rb_mod_ancestors","rb_mod_class_variables","rb_mod_const_at","rb_mod_const_of","rb_mod_constants","rb_mod_include_p","rb_mod_included_modules","rb_mod_init_copy","rb_mod_method_arity","rb_mod_module_eval","rb_mod_module_exec","rb_mod_name","rb_mod_remove_const","rb_mod_remove_cvar","rb_mod_sys_fail","rb_mod_sys_fail_str","rb_mod_syserr_fail","rb_mod_syserr_fail_str","rb_module_new","rb_must_asciicompat","rb_mutex_lock","rb_mutex_locked_p","rb_mutex_new","rb_mutex_sleep","rb_mutex_synchronize","rb_mutex_trylock","rb_mutex_unlock","rb_name_error","rb_name_error_str","rb_need_block","rb_newobj","rb_newobj_of","rb_nogvl","rb_notimplement","rb_num2dbl","rb_num2fix","rb_num2int","rb_num2ll","rb_num2long","rb_num2short","rb_num2uint","rb_num2ull","rb_num2ulong","rb_num2ushort","rb_num_coerce_bin","rb_num_coerce_bit","rb_num_coerce_cmp","rb_num_coerce_relop","rb_num_zerodiv","rb_obj_alloc","rb_obj_as_string","rb_obj_call_init","rb_obj_call_init_kw","rb_obj_class","rb_obj_classname","rb_obj_clone","rb_obj_dup","rb_obj_encoding","rb_obj_freeze","rb_obj_freeze_inline","rb_obj_frozen_p","rb_obj_hide","rb_obj_id","rb_obj_init_copy","rb_obj_instance_eval","rb_obj_instance_exec","rb_obj_instance_variables","rb_obj_is_fiber","rb_obj_is_instance_of","rb_obj_is_kind_of","rb_obj_is_method","rb_obj_is_proc","rb_obj_method","rb_obj_method_arity","rb_obj_remove_instance_variable","rb_obj_respond_to","rb_obj_reveal","rb_obj_setup","rb_obj_singleton_methods","rb_out_of_int","rb_output_fs","rb_output_rs","rb_p","rb_path2class","rb_path_check","rb_path_to_class","rb_pipe","rb_postponed_job_func_t","rb_postponed_job_register","rb_postponed_job_register_one","rb_prepend_module","rb_proc_arity","rb_proc_call","rb_proc_call_kw","rb_proc_call_with_block","rb_proc_call_with_block_kw","rb_proc_exec","rb_proc_lambda_p","rb_proc_new","rb_proc_times","rb_profile_frame_absolute_path","rb_profile_frame_base_label","rb_profile_frame_classpath","rb_profile_frame_first_lineno","rb_profile_frame_full_label","rb_profile_frame_label","rb_profile_frame_method_name","rb_profile_frame_path","rb_profile_frame_qualified_method_name","rb_profile_frame_singleton_method_p","rb_profile_frames","rb_protect","rb_provide","rb_provided","rb_ractor_local_key_struct","rb_ractor_local_key_t","rb_ractor_local_storage_ptr","rb_ractor_local_storage_ptr_newkey","rb_ractor_local_storage_ptr_set","rb_ractor_local_storage_type","rb_ractor_local_storage_type_free","rb_ractor_local_storage_value","rb_ractor_local_storage_value_lookup","rb_ractor_local_storage_value_newkey","rb_ractor_local_storage_value_set","rb_ractor_make_shareable","rb_ractor_make_shareable_copy","rb_ractor_stderr","rb_ractor_stderr_set","rb_ractor_stdin","rb_ractor_stdin_set","rb_ractor_stdout","rb_ractor_stdout_set","rb_raise","rb_rand_bytes_int32","rb_random_base_init","rb_random_bytes","rb_random_data_type_1_0","rb_random_data_type_t","rb_random_get_bytes_func","rb_random_get_int32_func","rb_random_get_real_func","rb_random_init_func","rb_random_init_int32_func","rb_random_int32","rb_random_interface_t","rb_random_interface_t__bindgen_ty_1","rb_random_mark","rb_random_real","rb_random_struct","rb_random_t","rb_random_ulong_limited","rb_range_beg_len","rb_range_new","rb_range_values","rb_rational_den","rb_rational_new","rb_rational_num","rb_rational_raw","rb_readwrite_sys_fail","rb_readwrite_syserr_fail","rb_refinement_new","rb_reg_adjust_startpos","rb_reg_alloc","rb_reg_backref_number","rb_reg_init_str","rb_reg_last_match","rb_reg_match","rb_reg_match2","rb_reg_match_last","rb_reg_match_post","rb_reg_match_pre","rb_reg_new","rb_reg_new_str","rb_reg_nth_defined","rb_reg_nth_match","rb_reg_options","rb_reg_prepare_re","rb_reg_quote","rb_reg_regcomp","rb_reg_region_copy","rb_reg_regsub","rb_reg_search","rb_remove_event_hook","rb_remove_event_hook_with_data","rb_remove_method","rb_remove_method_id","rb_require","rb_require_string","rb_rescue","rb_rescue2","rb_reserved_fd_p","rb_reset_random_seed","rb_respond_to","rb_rs","rb_ruby_debug_ptr","rb_ruby_verbose_ptr","rb_scan_args","rb_scan_args_bad_format","rb_scan_args_kw","rb_scan_args_length_mismatch","rb_set_class_path","rb_set_class_path_string","rb_set_end_proc","rb_set_errinfo","rb_singleton_class","rb_singleton_class_attached","rb_singleton_class_clone","rb_sourcefile","rb_sourceline","rb_spawn","rb_spawn_err","rb_sprintf","rb_st_add_direct","rb_st_cleanup_safe","rb_st_clear","rb_st_copy","rb_st_delete","rb_st_delete_safe","rb_st_foreach","rb_st_foreach_check","rb_st_foreach_safe","rb_st_foreach_with_replace","rb_st_free_table","rb_st_get_key","rb_st_hash","rb_st_hash_end","rb_st_hash_start","rb_st_hash_uint","rb_st_hash_uint32","rb_st_init_numtable","rb_st_init_numtable_with_size","rb_st_init_strcasetable","rb_st_init_strcasetable_with_size","rb_st_init_strtable","rb_st_init_strtable_with_size","rb_st_init_table","rb_st_init_table_with_size","rb_st_insert","rb_st_insert2","rb_st_keys","rb_st_keys_check","rb_st_locale_insensitive_strcasecmp","rb_st_locale_insensitive_strncasecmp","rb_st_lookup","rb_st_memsize","rb_st_numcmp","rb_st_numhash","rb_st_shift","rb_st_update","rb_st_values","rb_st_values_check","rb_stat_new","rb_stderr","rb_stdin","rb_stdout","rb_str2inum","rb_str_append","rb_str_buf_append","rb_str_buf_cat","rb_str_buf_cat2","rb_str_buf_cat_ascii","rb_str_buf_new","rb_str_buf_new_cstr","rb_str_capacity","rb_str_cat","rb_str_cat2","rb_str_cat_cstr","rb_str_catf","rb_str_cmp","rb_str_coderange_scan_restartable","rb_str_comparable","rb_str_concat","rb_str_conv_enc","rb_str_conv_enc_opts","rb_str_drop_bytes","rb_str_dump","rb_str_dup","rb_str_dup_frozen","rb_str_ellipsize","rb_str_encode","rb_str_encode_ospath","rb_str_equal","rb_str_export","rb_str_export_locale","rb_str_export_to_enc","rb_str_format","rb_str_free","rb_str_freeze","rb_str_hash","rb_str_hash_cmp","rb_str_inspect","rb_str_intern","rb_str_length","rb_str_locktmp","rb_str_modify","rb_str_modify_expand","rb_str_new","rb_str_new_cstr","rb_str_new_frozen","rb_str_new_shared","rb_str_new_static","rb_str_new_with_class","rb_str_offset","rb_str_plus","rb_str_replace","rb_str_resize","rb_str_resurrect","rb_str_scrub","rb_str_set_len","rb_str_setter","rb_str_shared_replace","rb_str_split","rb_str_strlen","rb_str_sublen","rb_str_subpos","rb_str_subseq","rb_str_substr","rb_str_succ","rb_str_times","rb_str_tmp_new","rb_str_to_dbl","rb_str_to_interned_str","rb_str_to_inum","rb_str_to_str","rb_str_unlocktmp","rb_str_update","rb_str_vcatf","rb_string_value","rb_string_value_cstr","rb_string_value_ptr","rb_struct_alloc","rb_struct_alloc_noinit","rb_struct_aref","rb_struct_aset","rb_struct_define","rb_struct_define_under","rb_struct_define_without_accessor","rb_struct_define_without_accessor_under","rb_struct_getmember","rb_struct_initialize","rb_struct_members","rb_struct_new","rb_struct_s_members","rb_struct_size","rb_sym2id","rb_sym2str","rb_sym_all_symbols","rb_sym_to_s","rb_symname_p","rb_sys_fail","rb_sys_fail_str","rb_sys_warning","rb_syserr_fail","rb_syserr_fail_str","rb_syserr_new","rb_syserr_new_str","rb_syswait","rb_thread_add_event_hook","rb_thread_add_event_hook2","rb_thread_alone","rb_thread_atfork","rb_thread_atfork_before_exec","rb_thread_call_with_gvl","rb_thread_call_without_gvl","rb_thread_call_without_gvl2","rb_thread_check_ints","rb_thread_create","rb_thread_current","rb_thread_fd_close","rb_thread_fd_select","rb_thread_fd_writable","rb_thread_interrupted","rb_thread_kill","rb_thread_local_aref","rb_thread_local_aset","rb_thread_main","rb_thread_remove_event_hook","rb_thread_remove_event_hook_with_data","rb_thread_run","rb_thread_schedule","rb_thread_sleep","rb_thread_sleep_deadly","rb_thread_sleep_forever","rb_thread_stop","rb_thread_wait_fd","rb_thread_wait_for","rb_thread_wakeup","rb_thread_wakeup_alive","rb_throw","rb_throw_obj","rb_time_interval","rb_time_nano_new","rb_time_new","rb_time_num_new","rb_time_timespec","rb_time_timespec_interval","rb_time_timespec_new","rb_time_timeval","rb_time_utc_offset","rb_timespec_now","rb_to_encoding","rb_to_encoding_index","rb_to_float","rb_to_id","rb_to_int","rb_to_symbol","rb_trace_arg_struct","rb_trace_arg_t","rb_tracearg_binding","rb_tracearg_callee_id","rb_tracearg_defined_class","rb_tracearg_event","rb_tracearg_event_flag","rb_tracearg_from_tracepoint","rb_tracearg_lineno","rb_tracearg_method_id","rb_tracearg_object","rb_tracearg_path","rb_tracearg_raised_exception","rb_tracearg_return_value","rb_tracearg_self","rb_tracepoint_disable","rb_tracepoint_enable","rb_tracepoint_enabled_p","rb_tracepoint_new","rb_typeddata_inherited_p","rb_typeddata_is_kind_of","rb_uint2big","rb_uint2inum","rb_ull2inum","rb_unblock_function_t","rb_undef","rb_undef_alloc_func","rb_undef_method","rb_undefine_finalizer","rb_unexpected_type","rb_update_max_fd","rb_usascii_encindex","rb_usascii_encoding","rb_usascii_str_new","rb_usascii_str_new_cstr","rb_usascii_str_new_static","rb_utf8_encindex","rb_utf8_encoding","rb_utf8_str_new","rb_utf8_str_new_cstr","rb_utf8_str_new_static","rb_uv_to_utf8","rb_varargs_bad_length","rb_vm_struct","rb_vrescue2","rb_vsprintf","rb_wait_for_single_fd","rb_waitpid","rb_warn","rb_warning","rb_warning_category_t","rb_write_error","rb_write_error2","rb_yield","rb_yield_block","rb_yield_splat","rb_yield_splat_kw","rb_yield_values","rb_yield_values2","rb_yield_values_kw","rbimpl_size_mul_overflow_tag","rbimpl_typeddata_flags","rbuf","re_patter_buffer","re_pattern_buffer","re_registers","readconv","readonly","rebuilds_num","regex_t","regexp","regs","release_func","repeat","repeat_range","repeat_range_alloc","reserved","right","rmatch","rmatch","rmatch_offset","ruby_api_version","ruby_brace_glob","ruby_cleanup","ruby_coderange_type","ruby_copyright","ruby_default_signal","ruby_description","ruby_digit36_to_number_table","ruby_each_words","ruby_econv_flag_type","ruby_enc_find_basename","ruby_enc_find_extname","ruby_encoding_consts","ruby_encoding_index","ruby_engine","ruby_exec_node","ruby_executable_node","ruby_finalize","ruby_fl_type","ruby_fl_ushift","ruby_getcwd","ruby_glob","ruby_glob_func","ruby_hexdigits","ruby_incpush","ruby_init","ruby_init_loadpath","ruby_init_stack","ruby_malloc_size_overflow","ruby_memory_view_flags","ruby_native_thread_p","ruby_options","ruby_patchlevel","ruby_platform","ruby_posix_signal","ruby_process_options","ruby_prog_init","ruby_qsort","ruby_rarray_consts","ruby_rarray_flags","ruby_release_date","ruby_rmodule_flags","ruby_robject_flags","ruby_rstring_flags","ruby_run_node","ruby_rvalue_flags","ruby_scan_digits","ruby_scan_hex","ruby_scan_oct","ruby_script","ruby_set_argv","ruby_set_script_name","ruby_setenv","ruby_setup","ruby_show_copyright","ruby_show_version","ruby_sig_finalize","ruby_signal_name","ruby_snprintf","ruby_special_consts","ruby_stack_check","ruby_stack_length","ruby_stop","ruby_strdup","ruby_strtod","ruby_strtoul","ruby_sysinit","ruby_unsetenv","ruby_value_type","ruby_version","ruby_vm_at_exit","ruby_vm_destruct","ruby_vm_t","ruby_vsnprintf","ruby_xcalloc","ruby_xfree","ruby_xmalloc","ruby_xmalloc2","ruby_xrealloc","ruby_xrealloc2","seed","self_","set","set_bit","set_little_endian_p","set_native_size_p","setproctitle","shape","shared","shared_root","size","size_ind","size_t","src","ssize_t","st_atimespec","st_birthtimespec","st_blksize","st_blocks","st_check_for_sizeof_st_index_t","st_compare_func","st_ctimespec","st_data_t","st_dev","st_flags","st_foreach_callback_func","st_foreach_check_callback_func","st_gen","st_gid","st_hash_func","st_hash_type","st_index_t","st_ino","st_lspare","st_mode","st_mtimespec","st_nlink","st_qspare","st_rdev","st_retval","st_size","st_table","st_table_entry","st_uid","st_update_callback_func","stack_pop_level","stat","stdio_file","step","str_","strides","sub_anchor","sub_offsets","syntax","syntax","target_enc","threshold_len","tied_io_for_writing","time_t","timelimit","timeout","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed_flag","uid_t","upper","usecnt","used","va_list","version","wbuf","wrap_struct_name","write_lock","writeconv","writeconv_asciicompat","writeconv_initialized","writeconv_pre_ecflags","writeconv_pre_ecopts","x","x","x","x","x","x","x","y","y","y","y","y","y","y","zero_or_one_time","FIXNUM_FLAG","FIXNUM_P","FLONUM_FLAG","FLONUM_MASK","FLONUM_P","IMMEDIATE_MASK","IMMEDIATE_P","NIL_P","Qfalse","Qnil","Qtrue","Qundef","SPECIAL_CONST_P","STATIC_SYM_P","SYMBOL_FLAG","TEST","RB_BUILTIN_TYPE","RB_DYNAMIC_SYM_P","RB_FLOAT_TYPE_P","RB_INTEGER_TYPE_P","RB_SYMBOL_P","RB_TYPE_P"],"q":["rb_sys","","","","","","","rb_sys::bindingsrb_sys::special_consts","","","","","","","","","","","","","","","","rb_sys::value_type","","","","",""],"d":["","","Raw bindings to libruby, generated by bindgen.","","","Definitions for Ruby’s special constants.","Definitions for Ruby’s special constants.","","","","","","","","","","Generated by rb-sys for Rubyenerated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Ruby’s array.","Array’s specific fields.","Arrays  that  use separated  memory  region  for elements  …","Auxiliary info.","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","Warning is for experimental features.","Warning is for deprecated features.","Warning is for experimental features.","Category unspecified.","Ruby’s object’s,  base components.  Every  single ruby …","Generated by rb-sys for Ruby 3.2.0","Ruby’s File  and IO.  Ruby’s  IO are not  just file …","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Regular expression  execution context.  When a  regular …","Generated by rb-sys for Ruby 3.2.0","","","","Ruby’s ordinal objects.  Unless otherwise  special …","Object’s specific fields.","Object that use  separated memory region for  instance …","Ruby’s regular expression.   A regexp is compiled into  …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Ruby’s String.  A string in ruby conceptually has these …","String’s specific fields.","Strings  that use  separated  memory region  for  contents …","Auxiliary info.","Embedded contents.","&quot;Typed&quot; user data.   By using this, extension libraries …","","","","","","","","","","","","","This is  the type of callbacks  registered to ::RData.  …","","","Instructs the converter to stop after output.","CR to CRLF conversion shall happen.","CRLF to CR conversion shall happen.","Decorators are there.","Newline decorator’s default.","Mask for error handling related bits.","&lt; Placeholder (not used)","Special handling of invalid sequences are there.","Invalid sequences shall be replaced.","CRLF to LF conversion shall happen.","Newline converters are there.","(Unclear; seems unused).","(Unclear; seems unused).","Indicates the input is a part of much larger one.","(Unclear; seems unused).","Undefined characters shall be escaped.","Special handling of undefined conversion are there.","Undefined characters shall be replaced.","Universal newline mode.","Texts shall be AttrValue escaped","Texts shall be AttrValue escaped.","Texts shall be XML-escaped.","","","Max possible number of embeddable encodings.","Bits we use to store inline encodings.","Max possible length of an encoding name.","Where inline encodings reside.","The object holds 0 to 127 inclusive and nothing else.","The object holds invalid/malformed/broken character(s).","","The object’s coderange is unclear yet.","The object’s encoding and contents are consistent each …","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","<strong>@deprecated</strong> This flag once was a thing  back in the old …","","This flag has something to do with instance variables.  …","This flag has  something to do with finalisers.  A  ruby …","This flag has something to do with data immutability.  …","This flag  has something to do  with our garbage …","","This flag  has something to do  with our garbage …","This flag has something to do with  object IDs.  Unlike in …","","","<strong>@deprecated</strong> This flag once was a thing  back in the old …","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Number of bits in ::ruby_fl_type that  are <em>not</em> open to …","<strong>@deprecated</strong> This flag once was a thing  back in the old …","","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","","","","&lt; <code>IO::PRIORITY</code>","&lt; <code>IO::READABLE</code>","&lt; <code>IO::WRITABLE</code>","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","&lt; Least significant 8 bits are reserved.","","","Generated by rb-sys for Ruby 3.2.0","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","&lt; @see struct ::RArray","&lt; @see struct ::RBignum","&lt; @see struct ::RClass and ::<code>rb_cClass</code>","&lt; @see struct ::RComplex","&lt; @see struct ::RTypedData","&lt; @see ::RUBY_Qtrue","&lt; @see struct ::RFile","&lt; Integers formerly known as Fixnums.","&lt; @see struct ::RFloat","&lt; @see struct ::RHash","&lt; Hidden classes known as IClasses.","&lt; @see struct ::RIMemo","&lt; Bitmask of ::ruby_value_type.","&lt; @see struct ::RMatch","&lt; @see struct ::RClass and ::<code>rb_cModule</code>","&lt; @see struct ::RMoved","&lt; @see ::RUBY_Qnil","&lt; @see struct ::RNode","&lt; Non-object (swept etc.)","&lt; @see struct ::RObject","&lt; @see struct ::RRational","&lt; @see struct ::RRegexp","&lt; @see struct ::RString","&lt; @see struct ::RStruct","&lt; @see struct ::RSymbol","&lt; @see ::RUBY_Qfalse","&lt; @see ::RUBY_Qundef","&lt; @see struct ::RZombie","","","","","","Generated by rb-sys for Ruby 3.2.0","@old{re_pattern_buffer}","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","DO NOT TOUCH THIS: The memory view entry for the internal …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Queries if an object understands memory view protocol.","Generated by rb-sys for Ruby 3.2.0","Basic part, including flags and class.","Basic part, including flags and class.","Basic part, including flags and class.","Basic part, including flags and class.","Basic part, including flags and class.","The part that all ruby objects have in common.","Basic part, including flags and class.","Generated by rb-sys for Ruby 3.2.0","&lt; Beginning of a group.","&lt; &quot;Left&quot; or &quot;lowest&quot; endpoint of the sequence.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Rubyenerated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The number of bytes in data.","Capacity of <code>*ptr</code>.  A continuous  memory region of at least …","Capacity of <code>*ptr</code>.  A continuous  memory region of at least …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","<code>rb_io_ungetc</code>  destination.   This  buffer   is  read  …","Generated by rb-sys for Ruby 3.2.0","Capture group offsets, in C array.","Number of ::rmatch_offset that ::rmatch::char_offset holdsenerated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The array of <code>rb_memory_view_item_component_t</code> that …","Type-specific static data.   This area can be used for  …","Pointer to the actual C level struct that you want to wrap.","The pointer to the exported memory.","This  function  is  called  when  the  object  is  …","","Number of bits of seed numbers.","Generated by rb-sys for Ruby 3.2.0","This function is called when the object is no longer used. …","This function  is called when  the object is experiencing  …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","This function is to query the size of the underlying …","Generated by rb-sys for Ruby 3.2.0","Flags.","The  conversion stopped  after  writing something  to …","The conversion stopped because there is no destination.","The conversion  stopped after  converting everything.  …","The conversion stopped in middle of reading a character, …","The conversion stopped when it found an invalid sequence.","The conversion stopped because there is no input.","The conversion  stopped when  it found  a character  in …","Flags as Ruby hash.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Internal encoding.","External encoding.","&lt; Decomposed encoding flags.","&lt; &quot;Right&quot; or &quot;highest&quot; endpoint of the sequence.","Generated by rb-sys for Ruby 3.2.0","&lt; End of a group.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","&lt; Whether the endpoint is open or closed.","Generated by rb-sys for Ruby 3.2.0","file descriptor.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","&lt; File descriptors buffer","finalize proc","Per-object  flags.  Each  ruby  objects have  their own  …","Type-specific behavioural  characteristics.  This is a  …","Generated by rb-sys for Ruby 3.2.0","Reserved flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>@see</strong> ::<code>rb_memory_view_t</code>::formatGenerated by rb-sys for …","A string to describe the format of an element, or NULL for …","Generated by rb-sys for Ruby 3.2.0","IO’s specific fields.","A function to destruct a ractor-local storage.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generated by rb-sys for Ruby 3.2.0","","","Function to obtain a series of random bytes.  If your PRNG …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Exports a memory view from a Ruby object.","Function to obtain a random integer.","Function to obtain  a random double.  If your PRNG  have a …","Generated by rb-sys for Ruby 3.2.0","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Function to initialize from uint32_t array.","Function to initialize from single uint32_t.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The number of bytes in each element. item_size should …","This  is a  table that  holds  instance variable  name to  …","Pointer to a C array that holds instance variables.","Class of an object.  Every object has its class.  Also, …","&lt; Whether overflow happened or not.","Generated by rb-sys for Ruby 3.2.0","Length of the string, not including terminating NUL …","Generated by rb-sys for Ruby 3.2.0","Number of elements of the array.","Generated by rb-sys for Ruby 3.2.0","The number of components in an item.","number of lines read","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","A function to mark a ractor-local storage.","Generated by rb-sys for Ruby 3.2.0","&lt; Maximum allowed number of FDs.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","mode flags: FMODE_XXXs","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","The number of dimension.","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The original object that has the memory exported via this …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The component’s offset.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Parent  of  this  class.   Sometimes  C  structs  have  …","","pathname for file","Generated by rb-sys for Ruby 3.2.0","child’s pid (for pipes)","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The private data for managing this exported memory","Generated by rb-sys for Ruby 3.2.0","Pointer to  the contents of  the string.   In the old  …","Pointer to the C array that holds the elements of the …","The pattern buffer.   This is a quasi-opaque struct  that …","Generated by rb-sys for Ruby 3.2.0","This is the  logic behind <code>Kernel#Array</code>.  Arguments are  …","Converts various values into a Complex.  This function …","This  is  the logic  behind  <code>Kernel#Float</code>.   Numeric types …","This is  the logic behind  <code>Kernel#Hash</code>.  Arguments are …","This  is the  logic behind  <code>Kernel#Integer</code>.  Numeric  …","Converts various values into a Rational.  This function …","This is the logic behind  <code>Kernel#String</code>.  Arguments are …","Calculates the  number of words needed  represent the …","Tests <code>abs(val)</code> consists only of a bit or not.","Calculates the number of bytes needed to represent the …","Registers an event hook function.","Generated by rb-sys for Ruby 3.2.0","Resembles <code>alias</code>.","Aliases  a global  variable.   Did you  know  that you  …","This is  the type of  functions that ruby calls  when …","Private","Private","Generates a textual representation of the given object.","Identical to <code>rb_funcallv</code>, except it takes Ruby’s array …","The value of <code>$0</code> at process bootup.","Identical   to  <code>rb_range_beg_len</code>,   except   it  takes   …","Decomposed   <code>Enumerator::ArithmeicSequence</code>.   This   is   …","Extracts components of the passed arithmetic  sequence.  …","Queries element(s) of  an array.  This is  complicated!  …","Looks up the passed key, assuming the  passed array is an …","Destructively appends multiple elements at the end of the …","Destructively removes everything form an array.","Recursively compares each elements of the two arrays …","Destructively appends the contents of latter into the end …","Destructively removes elements from the passed array, so …","Destructively removes an element which resides  at the …","Destructively converts an array of transient backend into …","Duplicates an array.","Iteratively yields each element of the passed array to the …","Queries an  element of an array.   When passed offset is  …","Destroys the given array for no reason.","@alias{<code>rb_obj_freeze</code>}","Allocates a hidden (no class) empty array.","Queries if the passed array has the passed entry.","Recursively  stringises the  elements  of the  passed  …","Declares that the array is about to  be modified.  This …","Allocates a new, empty array.","Identical to <code>rb_ary_new</code>,  except it additionally specifies …","Constructs an array from the passed objects.","Identical to <code>rb_ary_new_from_args</code>, except how objects are …","Creates a new array, concatenating the former to the …","Destructively  deletes an  element  from the  end of  the  …","Private","Private","Special case of <code>rb_ary_cat</code> that it adds only one element.","Identical  to <code>rb_ary_assoc</code>,  except it  scans  the passed  …","Replaces the contents of the former object with the …","Expands or shrinks the passed array to the passed length.","I guess there  is no use case  of this function in  …","<em>Destructively</em> reverses the passed array in-place.","<em>Destructively</em> rotates the  passed array in-place to …","Queries if the passed two arrays share the same backend …","Destructively deletes an element from the  beginning of …","Creates a copy  of the passed array, whose elements  are …","Destructively sorts the  passed array in-place, according  …","Destructively stores  the passed value  to the passed array…","Obtains a part of the passed array.","Force converts an object to an  array.  It first tries its …","Converts an array into a  human-readable string.  …","Destructively prepends the passed item at the beginning of …","Identical to <code>rb_ascii8bit_encoding</code>, except it returns the …","Queries the encoding that represents ASCII-8BIT a.k.a. …","Generated by rb-sys for Ruby 3.2.0","Identical  to  <code>rb_ary_new_from_values</code>,  except   it  …","Generated by rb-sys for Ruby 3.2.0","This function resembles now-deprecated <code>Module#attr</code>.","Identical to <code>rb_ivar_get</code>","Kicks the autoload procedure as if it was &quot;touched&quot;.","Queries if an autoload is defined at a point.","Queries the last match, or <code>Regexp.last_match</code>, or the <code>$~</code>.  …","Updates <code>$~</code>.  You don’t have to use it, because in …","Prints the backtrace  out to the standard error.  This  …","Converts a bignum into C’s <code>double</code>.","Converts a bignum into C’s <code>long long</code>.","Converts a bignum into C’s <code>long</code>.","Generates a place-value representation of the passed …","Converts a bignum into C’s <code>unsigned long long</code>.","Converts a bignum into C’s <code>unsigned long</code>.","Destructively modify the passed bignum into 2’s …","Performs bitwise and of the passed two objects.","Duplicates the given bignum.","Compares the passed two bignums.","Performs division of the passed two objects.","Performs &quot;divmod&quot; operation.   The operation in bignum’s …","Equality, in terms of <code>==</code>.  This checks if the <em>value</em> is the …","Equality,  in terms  of  <code>eql?</code>.   Unlike <code>rb_big_eq</code>  it  …","Performs &quot;integer division&quot;.  This is different from …","Performs shift left.","Performs subtraction of the passed two objects.","Performs modulo of the passed two objects.","Performs multiplication of the passed two objects.","Allocates a bignum object.","Normalises the passed bignum.  It for  instance returns a …","Performs bitwise or of the passed two objects.","Converts a bignum into a series of its parts.","Performs addition of the passed two objects.","Raises <code>x</code> to the powerof <code>y</code>.","Destructively resizes the backend storage of the passed …","Performs shift right.","The &quot;sign&quot; of a bignum.","Constructs a (possibly very big) bignum from a series of …","Performs exclusive or of the passed two objects.","Queries if  the passed bignum  instance is a  &quot;bigzro&quot;.  …","Snapshots the  current execution  context and  turn it  …","Identical to  <code>rb_funcallv</code>, except it  additionally passes …","This is the  type of a function that the  interpreter …","Shorthand type that represents an iterator-written-in-C …","Identical to <code>rb_funcallv_kw</code>, except it additionally passes …","Determines if the current method is given a block.","Identical to <code>rb_proc_new</code>, except it returns a lambda.","Constructs a  Proc object  from implicitly passed  …","Private","Interpreter  panic  switch.   Immediate   process  …","This is  a wrapper  of <code>rb_bug</code>  which automatically  …","&lt; <code>Array</code> class.","&lt; <code>BasicObject</code> class.","&lt; <code>Binding</code> class.","&lt; <code>Class</code> class.","&lt; <code>Complex</code> class.","&lt; <code>Dir</code> class.","&lt; <code>Encoding</code> class.","&lt; <code>Enumerator</code> class.","&lt; <code>FalseClass</code> class.","&lt; <code>File</code> class.","&lt; <code>Float</code> class.","&lt; <code>Hash</code> class.","&lt; <code>IO</code> class.","&lt; <code>Module</code> class.","&lt; <code>MatchData</code> class.","&lt; <code>Method</code> class.","&lt; <code>Module</code> class.","&lt; <code>NameError::Message</code> class.","&lt; <code>NilClass</code> class.","&lt; <code>Numeric</code> class.","Private","&lt; <code>Proc</code> class.","<code>Ractor</code> class.","&lt; <code>Random</code> class.","&lt; <code>Range</code> class.","&lt; <code>Rational</code> class.","&lt; <code>Refinement</code> class.","&lt; <code>Regexp</code> class.","&lt; <code>File::Stat</code> class.","&lt; <code>String</code> class.","&lt; <code>Struct</code> class.","&lt; <code>Sumbol</code> class.","&lt; <code>Thread</code> class.","&lt; <code>Time</code> class.","&lt; <code>TrueClass</code> class.","&lt; <code>UnboundMethod</code> class.","This resembles ruby’s <code>super</code>.","Identical to <code>rb_call_super</code>, except you can  specify how to …","Executes the passed block and catches values thrown from …","Identical to <code>rb_catch</code>, except it catches arbitrary Ruby …","Identical to  <code>rb_compile_warn</code>, except  it also accepts …","Identical to  <code>rb_category_warning</code>, except it reports  …","Identical to <code>rb_warning</code>, except it takes additional …","Converts  a character  option  to its  encoding.  It  only …","Try  converting an  object to  its array  representation …","Identical  to <code>rb_convert_type</code>,  except it  returns …","Ensures that the passed object  can be <code>initialize_copy</code> …","Queries  if the  passed  object is  frozen.","Identical  to  <code>rb_funcallv</code>, except  it  returns  …","Identical to  <code>rb_check_funcall</code>, except you  can specify …","Try  converting an  object to  its hash  representation …","Detects if  the given name  is already interned or  not.  …","Identical to  <code>rb_check_id</code>, except it  takes a  pointer to …","Asserts that  the given class  can derive a child  class.  …","Private","Try converting an object to its stringised representation …","Identical to  <code>rb_check_id</code>, except it  returns an instance  …","Identical to <code>rb_check_id_cstr</code>, except for the return type. …","This is complicated.","Identical to <code>rb_check_to_integer</code>, except it uses <code>#to_int</code> …","Identical to <code>rb_check_convert_type</code>, except the  return …","Private","Identical to <code>rb_typeddata_is_kind_of</code>, except  it raises …","Queries the name of the passed class.","Returns the attached object for a singleton class. If the …","Queries the class’s descendants. This  routine gathers …","Returns the superclass of a class.","Determines if the given two modules are relatives.","Generates an array of symbols, which are the list of …","Queries the name of the given object’s class.","Creates a new, anonymous class.","Allocates, then initialises an instance of  the given …","Identical to <code>rb_class_new_instance</code>,  except you can …","Identical to  <code>rb_class_new_instance</code>, except it passes  the …","Identical  to  <code>rb_mod_name</code>,  except   it  returns  …","@alias{<code>rb_mod_name</code>}","Identical to <code>rb_class_instance_methods</code>, except it returns …","Identical to <code>rb_class_instance_methods</code>, except it returns …","Identical to <code>rb_class_instance_methods</code>, except it returns …","Finds a &quot;real&quot; class.  As the name  implies there are …","Queries the class’s direct descendants. This  routine …","Queries the parent of the given class.","Generated by rb-sys for Ruby 3.2.0","Clears the inline constant caches associated with a …","Identical to <code>rb_cloexec_fcntl_dupfd</code>, except it implies …","Identical to <code>rb_cloexec_dup</code>,  except you can specify  the …","Duplicates  a file  descriptor  with  closing on  exec.   …","Opens a file  that closes on exec.   In case of POSIX  …","Opens a pipe with  closing on exec.  In case of  POSIX …","Closes everything.  In case of  POSIX environments, a …","Raises &quot;comparison failed&quot; error.","Canonicalises the passed <code>val</code>, which is the return value of …","Identical to  <code>rb_compile_warning</code>, except  it reports …","Issues a compile-time warning  that happens at …","Queries the absolute (or the magnitude) of the passed …","Queries the argument (or the angle) of the passed object.","Performs complex conjugation of the passed object.","Performs division of the passed two objects.","Queries the imaginary part of the passed Complex.","Performs subtraction of the passed two objects.","Performs multiplication of the passed two objects.","Constructs a Complex, by first multiplying the imaginary …","Constructs a  Complex using polar representations.   …","Performs addition of the passed two objects.","@old{<code>rb_complex_new_polar</code>}","Performs exponentiation of the passed two objects.","Identical  to <code>rb_complex_new</code>,  except it  assumes both  …","Queries the real part of the passed Complex.","Performs negation of the passed object.","Queries if the constant is defined at the namespace.","Identical to <code>rb_const_defined</code>, except it  doesn’t look …","Identical  to  <code>rb_const_defined</code>,  except  it  returns  …","Identical to <code>rb_const_defined</code>, except it returns the …","Identical  to <code>rb_const_defined_at</code>,  except it  returns the …","Identical  to <code>rb_const_defined_at</code>,  except it  returns the …","This is  another mysterious  API that  comes with no  …","Identical to <code>rb_mod_remove_const</code>, except it takes the name …","Names a constant.","Converts an object into another type.  Calls the specified …","Copies the list of instance variables.  3rd parties need …","Identical to <code>rb_cstr_to_inum</code>, except the second argument …","Converts a textual representation of a  real number into a …","Parses C’s string to convert into a Ruby’s integer.  …","This resembles ruby’s <code>self</code>.","Identical to <code>rb_cvar_get</code>, except it accepts C’s string …","Identical to <code>rb_cvar_set</code>, except it accepts C’s string …","Queries if the given class has the given class variable.","Identical  to <code>rb_cvar_get</code>,  except  it takes  additional …","Obtains a value from a class variable.","Assigns a value to a class variable.","This is the primitive way to wrap an existing C struct …","Identical to  <code>rb_data_object_wrap</code>, except it  allocates a …","<strong>@copydoc</strong> <code>rb_data_type_t</code>Generated by rb-sys for Ruby 3.2.0","Function pointers.  Resembles C++ <code>vtbl</code>.","<strong>@copydoc</strong> <code>rb_data_type_t</code>Generated by rb-sys for Ruby 3.2.0","This is the primitive way to wrap an existing C struct …","Identical  to <code>rb_data_typed_object_wrap</code>,  except it  …","Converts a C’s <code>double</code> into a bignum.","Compares two <code>double</code>s.  Handy when implementing a spaceship …","Identical to <code>rb_complex_new</code>,  except it takes the …","Queries  the backtrace  object  of the  context.   This is …","Return current frmae depth.","Queries the binding of the passed context’s upper frame.","Queries the current class of the passed context’s upper …","Queries the depth of the passed context’s upper frame.","Queries the instruction sequence of the passed context’s …","Queries the current receiver of the passed context’s …","Type  of   the  callback   function  passed   to  …","Prepares, executes, then cleans up a debug session.","Generated by rb-sys for Ruby 3.2.0","Opaque struct representing a debug inspector.","Private","Queries  the &quot;default  external&quot; encoding.   This is  used …","Queries  the &quot;default  internal&quot; encoding.   This could  …","This is the default  value of ::<code>rb_rs</code>, i.e. <code>\\\\&quot;\\\\\\\\n\\\\&quot;</code>.  It  …","Defines an alias of a method.","Sets the allocator function of a class.","Defines public accessor method(s) for an attribute.","Defines a top-level class.","This is a very badly designed API that creates an …","Identical  to <code>rb_define_class_under</code>,  except  it takes  …","Defines a class under the namespace of <code>outer</code>.","@alias{<code>rb_cv_set</code>}","Defines a Ruby level constant under a namespace.","Creates a new &quot;dummy&quot; encoding.  Roughly speaking, an …","Assigns a finaliser for an object.  Each objects can have …","Identical  to  <code>rb_define_const</code>,  except   it  defines  …","Defines a global function.","Identical to  <code>rb_define_virtual_variable</code>, but can also  …","Defines a method.","Identical to <code>rb_define_method</code>,  except it takes the name …","Defines a top-level module.","Defines a module function for a module.","This is a very badly designed API that creates an …","Identical  to <code>rb_define_module_under</code>,  except it  takes …","Defines a module under the namespace of <code>outer</code>.","Identical to <code>rb_define_method</code>, except it defines a private …","Identical to <code>rb_define_method</code>, except it defines a …","Identical to <code>rb_define_variable</code>, except it does not allow …","Identical to <code>rb_define_method</code>, except it defines a …","&quot;Shares&quot; a global variable between Ruby and C.  Normally a …","Defines a global variable that  is purely …","Asserts  that the  given  constant  is deprecated.   …","&quot;Detaches&quot;  a subprocess.   In POSIX  systems every  child …","Queries the path of the current working directory of the …","Queries if the GC is busy.","&lt; <code>ArgumentError</code> exception.","&lt; <code>EOFError</code> exception.","&lt; <code>Encoding::CompatibilityError</code> exception.","&lt; <code>EncodingError</code> exception.","&lt; Mother of all exceptions.","&lt; <code>fatal</code> exception.","&lt; <code>FloatDomainError</code> exception.","&lt; <code>FrozenError</code> exception.","&lt; <code>IOError</code> exception.","Indicates that a timeout has occurred while performing an …","&lt; <code>IndexError</code> exception.","&lt; <code>Interrupt</code> exception.","&lt; <code>KeyError</code> exception.","&lt; <code>LoadError</code> exception.","&lt; <code>LocalJumpError</code> exception.","&lt; <code>Math::DomainError</code> exception.","&lt; <code>NameError</code> exception.","&lt; <code>NoMatchingPatternError</code> exception.","&lt; <code>NoMatchingPatternKeyError</code> exception.","&lt; <code>NoMemoryError</code> exception.","&lt; <code>NoMethodError</code> exception.","&lt; <code>NotImplementedError</code> exception.","&lt; <code>RangeError</code> exception.","&lt; <code>RegexpError</code> exception.","&lt; <code>RuntimeError</code> exception.","&lt; <code>ScriptError</code> exception.","&lt; <code>SecurityError</code> exception.","&lt; <code>SignalException</code> exception.","&lt; <code>StandardError</code> exception.","&lt; <code>StopIteration</code> exception.","&lt; <code>SyntaxError</code> exception.","&lt; <code>SystemStackError</code> exception.","&lt; <code>SystemCallError</code> exception.","&lt; <code>SystemExit</code> exception.","&lt; <code>ThreadError</code> exception.","&lt; <code>TypeError</code> exception.","&lt; <code>ZeroDivisionError</code> exception.","This is a shorthand of calling <code>obj.each</code>.","Converts  the passed  C’s pointer  according to  the …","Queries the passed encoding’s corresponding ASCII …","This badly named  function does not set the destination  …","This is a <code>rb_econv_make_exception</code> + <code>rb_exc_raise</code> combo.","Destructs a converter.  Note that a converter  can have a …","Converts a string from an encoding to another.","&quot;Decorate&quot;s  a  converter.   There  are  special  kind  of …","Identical to  <code>rb_econv_decorate_at_first</code>, except  it adds …","Queries  an encoding  name which  best suits  for …","Queries if  there is  more than one  way to convert  …","Appends the passed string to the passed converter’s …","This function makes sense right after <code>rb_econv_convert</code> …","Creates a new instance of struct ::<code>rb_econv_t</code>.","Creates  a  <code>[</code>rb_eConverterNotFoundError<code>]</code>  exception  …","Identical  to  <code>rb_econv_open</code>,  except  it additionally  …","Identical  to  <code>rb_econv_prepare_opts</code>,  except it  …","Splits a  keyword arguments  hash (that  for instance  …","Puts  back the  bytes.  In  case of  …","Queries  if <code>rb_econv_putback</code>  makes  sense, i.e.  there  …","return value of <code>rb_econv_convert</code>","Assigns  the replacement  string.  The  string passed  …","Identical to <code>rb_econv_str_convert</code>, except it appends the …","Identical to  <code>rb_econv_convert</code>, except it  takes Ruby’s …","Identical to  <code>rb_econv_str_append</code>, except  it appends only …","Identical to <code>rb_econv_str_convert</code>,  except it converts …","Generated by rb-sys for Ruby 3.2.0","Registers an  &quot;alias&quot; name.  In  the wild, an  encoding …","Queries the code point of character  pointed by the passed …","Identical to  <code>rb_enc_associate_index</code>, except  it takes an  …","Identical to <code>rb_enc_set_index</code>, except it additionally does …","Queries if the passed object can have its encoding.","Identical to <code>rb_enc_compatible</code>,  except it raises an  …","Queries the  number of bytes  requested to  represent the …","Queries  the  code  point  of  character  pointed  by  the …","Look for the &quot;common&quot; encoding between the two.  One …","Destructively copies  the encoding of  the latter  object …","Identical   to  <code>rb_default_external_encoding</code>,   except   …","Identical   to  <code>rb_default_internal_encoding</code>,   except   …","Queries if the passed encoding is dummy.","Identical to <code>rb_enc_mbclen</code> unless the character at <code>p</code> …","Identical to  <code>rb_find_encoding</code>, except  it takes a  C’s …","Queries the index of the encoding.","Queries  the   Ruby-level  counterpart   instance  of   ::…","Identical to <code>rb_find_encoding</code>,  except it takes an  …","Identical to <code>rb_enc_get_index</code>, except the return type.","Queries the index of the encoding of the passed object, if …","Identical to <code>rb_enc_str_new</code>,  except it returns a &quot;f…","Identical to <code>rb_enc_str_new_cstr</code>,  except it returns a  &quot;f…","Queries the number of bytes of the character at the passed …","Queries the n-th character.  Like  <code>rb_enc_strlen</code> this …","This just returns the passed end basically.  It makes …","Returns the last path component.","Returns a path component directly adjacent to the passed …","Seeks for non-prefix  part of a pathname.   This can be a …","Queries the  number of bytes of  the character at the  …","Identical to <code>rb_raise</code>, except it additionally takes an …","Identical to <code>rb_reg_new</code>, except it additionally takes an …","Creates a new encoding, using the passed one as a template.","Destructively assigns the passed encoding  as the default …","Destructively assigns the passed encoding  as the default …","Destructively assigns an encoding (via its index) to an …","Identical to  <code>rb_sprintf</code>, except it  additionally takes an …","Queries if  the passed string  is &quot;ASCII only&quot;.  An  ASCII …","Identical to <code>rb_str_cat</code>, except it additionally takes an …","Scans the passed string to collect  its code range.  …","Identical to <code>rb_enc_str_new</code>, except it additionally takes …","Identical to  <code>rb_enc_str_new</code>, except  it assumes the  …","Identical to <code>rb_enc_str_new</code>,  except it takes a C string  …","Counts  the number  of characters  of the  passed string,  …","Identical  to <code>rb_enc_symname_p</code>,  except it  additionally …","Identical to <code>rb_symname_p</code>, except it additionally takes an …","Queries the  index of  the encoding.   An encoding’s  …","Identical to [<code>rb_tolower</code>], except it additionally takes an …","Identical to [<code>rb_toupper</code>], except it additionally takes an …","Encodes the passed code point into a series of bytes.","Queries if the passed encoding is either one of …","Identical  to  <code>rb_enc_sprintf</code>, except  it  takes  a <code>va_list</code>…","The  type  of encoding.   Our  design  here  is we  take  …","An equivalent to <code>ensure</code> clause.   Calls the function <code>b_proc</code>…","Basically identical to [<code>rb_ary_new_form_values</code>], except it …","This is the type of functions that …","Constructs an enumerator.  This roughly resembles …","Identical  to <code>rb_enumeratorize</code>,  except you  can …","Identical  to [<code>rb_enumeratorize_with_func</code>],  except you  …","Destructively removes every environment variables of the …","Utility function to raise ::<code>rb_eEOFError</code>.","Checks for equality of the passed objects, in terms of …","This function is an optimised version  of calling <code>#==</code>.  It …","This is the same as <code>$!</code> in Ruby.","Private","Identical  to <code>rb_frozen_error_raise</code>,  except its  raising …","Identical  to  <code>rb_error_frozen</code>,  except  it takes  …","This API  is practically a  variant of <code>rb_proc_call_kw</code>  …","Evaluates the given string.","Identical to  <code>rb_eval_string</code>, except  it avoids potential  …","Identical to <code>rb_eval_string_protect</code>, except  it evaluates …","Represents event(s).  As the name implies events are bit …","<strong>@cond</strong> INTERNAL_MACROAnything  after this  are  …","Type of event hooks.  When an  event happens registered …","Identical to <code>rb_fatal</code>, except it  raises the passed …","Creates an instance of the passed exception class.","Identical to <code>rb_exc_new</code>, except it assumes the passed …","Identical to <code>rb_exc_new_cstr</code>,  except it takes a Ruby’s  …","Identical to <code>rb_raise</code>, except it  raises the passed …","&quot;Recursion&quot; API entry  point.  This basically calls the  …","Identical  to  <code>rb_exec_recursive</code>,  except   it  calls  <code>f</code>  …","Identical to <code>rb_exec_recursive</code>, except it  checks for the …","Identical to  <code>rb_exec_recursive_outer</code>, except it checks  …","Terminates the current execution context.  This  API is …","Asserts that  the extension  library that  calls this  …","Extend the object with the module.","Identical  to  <code>rb_str_new</code>,  except  it  generates  a  …","Identical to <code>rb_external_str_new</code>, except it  assumes the …","Identical  to   <code>rb_external_str_new</code>,  except  it  …","Splits a hash into two.","This is  similar to <code>rb_f_exit</code>.   In fact  on some …","Replaces the current process by running the given external …","Identical to <code>rb_exit</code>, except how arguments are passed.","Queries the list of global variables.","Sends a signal (&quot;kills&quot;) to processes.","Raises  ::<code>rb_eNotImpError</code>.   This  function  is   used  as …","Identical to <code>rb_require_string</code>,  except it ignores the  …","Identical to <code>rb_str_format</code>, except how the arguments are …","Traces a global variable.","Deletes the  passed tracer from the  passed global …","Raises the unsung &quot;fatal&quot; exception.  This is considered …","Releases a specific FD from the given fdset.","Destructively overwrites an fdset with another.","Identical  to  <code>rb_fd_copy</code>,  except  it copies  unlimited  …","Sets or clears  the close-on-exec flag of the passed  file …","(Re-)initialises a  fdset.  One must  be initialised …","Queries if the given FD is in the given set.","Waits for multiple file descriptors at once.","Sets an fd to a fdset.","Destroys the ::<code>rb_fdset_t</code>,  releasing any memory and …","Wipes out the current set of FDs.","Identical to <code>rb_io_stdio_file</code>, except it takes file …","The data  structure which wraps the  fd_set bitmap used by …","Identical to  <code>rb_provided</code>, except it additionally  returns …","Queries the  liveness of the  passed fiber.   &quot;Alive&quot; in …","Queries  the fiber  which  is  calling this  function.   …","Creates a Fiber instance from a C-backended block.","Creates a Fiber instance from a C-backended block with the …","Identical to <code>rb_fiber_resume</code>  but instead of resuming  …","Resumes the  execution of the passed  fiber, either from …","Identical to  <code>rb_fiber_resume</code>, except  you can specify  …","Non-blocking DNS lookup.","Non-blocking  wait  for  the  passed   &quot;blocker&quot;,  which  …","Closes the passed scheduler object.  This expects the …","Identical to <code>rb_fiber_scheduler_get</code>, except it also …","Identical to <code>rb_fiber_scheduler_current</code>, except it queries …","Create and schedule a non-blocking fiber.","Queries the  current scheduler of  the current  thread …","Non-blocking close the given IO.","Non-blocking read from the passed IO at the specified …","Non-blocking write to the passed IO at the specified …","Non-blocking read from the passed IO.","Non-blocking read from the passed IO using a native buffer.","Non-blocking version of <code>IO.select</code>.","Non-blocking version of <code>IO.select</code>, <code>argv</code> variant.","Non-blocking version of <code>rb_io_wait</code>.  Depending on scheduler","Non-blocking  wait until the passed  IO  is ready  for …","Non-blocking  wait until  the passed  IO  is ready  for …","Non-blocking write to the passed IO.","Non-blocking write to the passed IO using a native buffer.","Non-blocking  <code>sleep</code>.  Depending  on  scheduler  …","Identical to <code>rb_fiber_scheduler_kernel_sleep</code>, except  it …","Converts the passed timeout to an expression that …","Non-blocking <code>waitpid</code>.  Depending  on  scheduler  …","Destructively assigns  the passed  scheduler to that  of …","Wakes up a fiber previously blocked using …","Transfers control to  another fiber, resuming it from …","Identical to <code>rb_fiber_transfer</code>,  except you can specify …","Yields the  control back to the  point where the current  …","Identical to <code>rb_fiber_yield</code>, except you can specify how to …","Maps a  relative path  to its absolute  representation.  …","Queries  if  the  given path  is  either  a  directory,  …","Strips a file path’s last component  (and trailing …","Identical  to <code>rb_file_absolute_path</code>,  except  it …","Opens a file located at the given path.","Identical to <code>rb_file_open</code>, except it takes the pathname as …","Identical to <code>rb_file_absolute_path</code>, except how arguments …","Identical to <code>rb_file_expand_path</code>, except how arguments are …","Queries  the file  size  of the  given file.   Because  …","Identical  to <code>rb_filesystem_encoding</code>,  except  it  returns …","Queries the &quot;filesystem&quot;  encoding.  This is the encoding  …","Identical  to <code>rb_str_new</code>,  except it  generates a  string …","Identical to  <code>rb_filesystem_str_new</code>, except it assumes  …","Identical to <code>rb_to_encoding_index</code>, except the return type.","Identical  to <code>rb_find_file_ext</code>,  except it  takes  a …","Resolves a  feature’s path.  This  function takes for …","Identical to <code>rb_num2int</code>.","Identical to <code>rb_num2short</code>.","Generates  a place-value  representation  of the  given  …","Identical to <code>rb_num2uint</code>.","Identical to <code>rb_num2ushort</code>.","Converts a C’s <code>double</code> into an instance of ::<code>rb_cFloat</code>.","Identical to <code>rb_float_new</code>, except it does not generate …","Extracts its double value from an instance of ::<code>rb_cFloat</code>.","Identical   to   <code>rb_flt_rationalize_with_prec</code>,  except   …","Simplified  approximation of  a float.   It returns  a …","Identical to <code>rb_frame_this_func</code>, except it  returns the …","Resembles <code>__method__</code>.","Queries the  name of the  Ruby level method  that is …","Frees the list of instance variables.   3rd parties need …","Private","This is an  implementation detail of #RB_OBJ_FREEZE().  …","Raises an instance  of ::<code>rb_eFrozenError</code>.  The object can  …","The field  separator character for  inputs, or  the <code>$;</code>.  …","Calls a method.  Can call both public and private methods.","Identical to <code>rb_funcallv_public</code>, except you can pass the …","Identical  to [<code>rb_funcallv_passing_block</code>],  except  you …","Identical to  <code>rb_funcallv_public</code>, except  you can pass  a …","Identical to [<code>rb_funcallv_with_block</code>], except you  can …","Identical  to <code>rb_funcall</code>,  except it  takes the  method …","Identical to  <code>rb_funcallv</code>, except you can  specify how to …","Identical  to  <code>rb_funcallv</code>,  except  it only  takes  …","Identical to <code>rb_funcallv_public</code>, except you  can specify …","Triggers a GC process.  This was the only  GC entry point …","Informs that  there are  external memory  usages.  Our GC  …","Copy&amp;paste an object’s finaliser to another.   This is …","Identical to <code>rb_gc_stat</code>, with &quot;count&quot; parameter.","Disables GC.   This prevents automatic GC  runs when the …","(Re-) enables GC.  This makes sense only after you called …","Asserts  that the  passed  object is  no longer  needed.   …","Obtains various  info regarding the most  recent GC run.  …","Finds a new &quot;location&quot; of an object.   An object can be …","Marks an object.  This is one of  the GC utility functions …","Marks  objects between  the two  pointers.  This  is one  …","Identical  to  <code>rb_gc_mark</code>,  except  it   allows  the  …","Maybe this  is the only  function provided for  C …","Inform the garbage collector that <code>valptr</code> points to a live …","Inform the garbage collector that <code>object</code> is a live Ruby …","Identical to <code>rb_gc</code>, except the return value.","Obtains various GC  related profiles.  The parameter can …","Inform the garbage collector that a pointer previously …","Updates  references  inside  of  tables.   After  you  …","This  is  the  implementation  of  #RB_OBJ_WRITE().   …","This is the  implementation of #RB_OBJ_WB_UNPROTECT().  …","Generates a 32 bit random number.","Generates a <code>double</code> random number.","Generates a random number whose upper limit is <code>i</code>.","Queries the allocator function of a class.","Queries the arguments passed to the current process that …","Keyword argument deconstructor.","Converts an object to a path.  It first tries <code>#to_path</code> …","<strong>@deprecated</strong> This function is an alias  of <code>rb_get_path</code> now. …","This <em>was</em>  a generalisation  of <code>Array#values_at</code>,  …","Much like <code>rb_io_gets</code>, but it reads  from the mysterious …","The &quot;glob&quot;  operator.  Expands  the given pattern  against …","An alias for <code>[</code>rb_gc_register_address<code>]</code>.","Obtains a global variable.","Assigns to a global variable.","Type that represents a global variable getter function.","Type that represents a global variable marker function.","This function just raises ::<code>rb_eNameError</code>.   Handy when …","Type that represents a global variable setter function.","@deprecated","@deprecated","@deprecated","This is the getter function that  backs global variables …","This is the setter function that  backs global variables …","This is the setter function that  backs global variables …","@deprecated","@deprecated","@deprecated","Calculates a message  authentication code of the passed  …","Queries the given key  in the given hash table.  If there …","Inserts or replaces (&quot;upsert&quot;s) the objects into the given …","Inserts  a list  of  key-value pairs  into  a  hash table  …","Generated by rb-sys for Ruby 3.2.0","Swipes everything out of the passed hash table.","Deletes the passed key from the passed hash table, if any.","Deletes each entry for which the block  returns a truthy …","Duplicates a hash.","Identical  to <code>rb_hash_lookup</code>,  except  it yields  the …","Iterates   over  a   hash.   This   basically   does  the  …","@alias{<code>rb_obj_freeze</code>}","Identical  to  <code>rb_hash_aref</code>,  except  it always  returns  …","Identical  to <code>rb_hash_lookup</code>,  except you  can specify  …","Creates a new, empty hash object.","Identical to <code>rb_hash_new</code>, except it additionally specifies …","This is the  implementation detail of #RHASH_SET_IFNONE.   …","Identical to  #RHASH_SIZE(), except  it returns the  size …","This is  the implementation detail  of #RHASH_SIZE.  …","Starts a series of hashing.  Suppose you have a struct:","This is  the implementation  detail of #RHASH_TBL.   …","Destructively merges two hash tables into one.  It …","Type of callback functions to pass to <code>rb_hash_update_by</code>.","Retrieves the name mapped to the given id.","Identical to <code>rb_id2name</code>, except it returns a Ruby’s …","Allocates an instance of ::<code>rb_cSymbol</code> that has the given …","Calculates an ID of attribute writer.   For instance it …","This  is a  table that  holds  instance variable  name to  …","Includes a module to a class.","Generates a human-readable textual representation of the …","Converts a C’s <code>intptr_t</code> into an instance of ::<code>rb_cInteger</code>…","Converts a C’s <code>intptr_t</code> into an instance of ::<code>rb_cInteger</code>…","Generates a 64 bit floating point number by concatenating …","Raises the passed <code>x</code> to the power of <code>y</code>.","Exports an integer into a buffer.   This function fills …","Import an integer from a buffer.","Finds or creates a symbol of the given name.","Identical to  <code>rb_intern</code>, except  it additionally takes  …","Identical to <code>rb_intern2</code>, except it additionally takes an …","Identical to  <code>rb_intern</code>, except  it takes an instance of ::…","Registers a thread event hook function.","Generated by rb-sys for Ruby 3.2.0","All Thread events","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Unregister the passed hook.","Identical to <code>rb_str_new</code>, except it returns an infamous &quot;f…","Identical to  <code>rb_interned_str</code>, except it  assumes the …","Raises an instance of ::<code>rb_eInterrupt</code>.","Honestly  I  don’t  understand  the  name, but  it  …","Identical to <code>rb_io_write</code>, except it always returns the …","Forces no conversions be applied  to the passed IO.  …","Sets the binmode.  This operation  nullifies the effect of …","IO  buffers.   This  is  an implementation  detail  of  ::…","Buffered write to the passed IO.","Asserts  that  an IO  is  opened  for  byte-based reading. …","Asserts that an  IO is opened for character-based reading. …","This badly named function asserts that the passed IO is …","Asserts that the passed IO is initialised.","Try converting an object to its  IO representation using …","@alias{<code>rb_io_check_byte_readable</code>}","Asserts that an IO is opened for writing.","Closes the IO.   Any buffered contents are flushed to  the …","Returns an integer representing the numeric file …","Decomposed encoding flags (e.g. <code>\\\\&quot;enc:enc2\\\\&quot;\\\\&quot;</code>).","Queries if the passed IO is at the end of file.  &quot;The end …","Type of events that an IO can wait.","This function  breaks down the  option hash that …","This    function    can   be    seen    as    an   …","Creates  an IO  instance  whose backend  is the  given  …","Flushes any buffered  data within the passed IO to  the …","Destroys the given IO.  Any pending operations are flushed.","Identical  to <code>rb_io_check_io</code>,  except it  raises …","Queries the tied IO  for writing.  An IO can be  duplexed. …","Reads a byte from the given IO.","Reads a &quot;line&quot; from  the given IO.  A line here means  a …","Private","Identical to <code>rb_io_wait</code>  except it additionally takes  …","Blocks until the passed IO is ready for reading, if that …","Blocks until the passed IO is ready for writing, if that …","Maps  a file  mode  string (that  <code>rb_file_open</code> takes)  …","Identical  to <code>rb_io_modestr_fmode</code>,  except it  returns a  …","Converts an  oflags (that <code>rb_io_modestr_oflags</code>  returns) …","Iterates  over the  passed array  to apply  <code>rb_io_write</code> …","This is a <code>rb_f_sprintf</code> + <code>rb_io_write</code> combo.","Iterates over the passed array  to apply <code>rb_io_write</code> …","Blocks until there is a pending read  in the passed IO.  …","Queries if the  passed IO has any pending  reads.  Unlike …","Instructs the OS to put its internal file structure into …","Set the timeout associated with the specified io object. …","Assigns the tied IO for writing.   See <code>rb_io_get_write_io</code> …","Finds or creates  a stdio’s file structure  from a Ruby…","Sets #FMODE_SYNC.","Ruby’s IO, metadata and buffers.","<strong>@deprecated</strong> This function  once was a thing  in the old …","Get the timeout associated with the specified io object.","Identical  to <code>rb_io_ungetc</code>,  except it  doesn’t take  …","&quot;Unget&quot;s a  string.  This function  pushes back  the …","Blocks until  the passed IO  is ready for  the passed …","Blocks until the passed file descriptor gets readable.","for <code>rb_readwrite_sys_fail</code> first argument","Blocks until the passed file descriptor gets writable.","Writes the given string to the given IO.","Queries if the given path is an  absolute path.  On POSIX …","Classifies  the given  ID,  then sees  if  it is  an  …","Classifies the  given ID,  then sees  if it  is a  class …","Classifies the given ID, then sees if it is a constant.  …","Classifies the  given ID, then  sees if it is  a global …","Classifies  the given  ID, then  sees  if it  is an  …","Classifies the  given ID,  then sees  if it  is a  junk …","Classifies the  given ID,  then sees  if it  is a  local …","Breaks from a block.  Because you are  using a CAPI this …","Identical to  <code>rb_iter_break</code>, except it  additionally takes …","Old way to iterate a block.","Obtains an instance variable.","Assigns to an instance variable.","Number of instance variables defined on an object.","Queries if  the instance variable  is defined  at the …","Iterates over an object’s instance variables.","Identical to <code>rb_iv_get</code>, except it accepts the name as an …","Identical to <code>rb_iv_set</code>, except it accepts the name as an …","This function  is to re-throw  global escapes.  Such …","Determines if the current method is given a keyword …","Queries the &quot;last status&quot;, or the <code>$?</code>.","Sets the &quot;last status&quot;, or the <code>$?</code>.","Queries the last  line, or the <code>$_</code>.   You don’t have to …","Updates <code>$_</code>.  You don’t have to use it, because in …","Converts a C’s <code>long long</code> into an instance of ::…","Loads and executes the Ruby program in the given file.","Loads the given  file.  This function opens the given  …","Identical to <code>rb_load_file</code>, except it takes the argument as …","Identical to  <code>rb_load</code>, except  it avoids  potential global …","Raises an instance of ::<code>rb_eLoadError</code>.","Identical  to <code>rb_loaderror</code>,  except it  additionally takes …","Returns  a   platform-depended  &quot;charmap&quot;  of  the   …","Identical to  <code>rb_locale_encoding</code>, except  it returns the  …","Queries the encoding that represents the current locale.","Identical  to  <code>rb_str_new</code>,  except  it  generates  a  …","Identical to <code>rb_locale_str_new</code>, except it  assumes the …","&lt; <code>Comparable</code> module.","&lt; <code>Enumerable</code> module.","&lt; <code>Errno</code> module.","&lt; <code>FileTest</code> module.","&lt; <code>GC</code> module.","&lt; <code>Kernel</code> module.","&lt; <code>Math</code> module.","&lt; <code>Process</code> module.","&lt; <code>IO::WaitReadable</code> module.","&lt; <code>IO::WaitReadable</code> module.","Creates the good old fashioned array-of-strings style …","Constructs  an exception  object from  the list  of …","Marks keys and values  associated inside of the given …","Identical to  <code>rb_mark_hash</code>, except  it marks  only keys  …","Identical to  <code>rb_mark_hash</code>, except it marks  only values …","Identical    to   <code>rb_mark_tbl</code>,    except    it    marks   …","Marshal  format compatibility  layer.  Over  time, classes …","Serialises the  given object and  all its  referring …","Deserialises  a  previous output  of  <code>rb_marshal_dump</code>  …","Asserts  that  the given  MatchData  is  &quot;occupied&quot;.  …","Fills the memory region with a series of ::RUBY_Qnil.","Identical to  st_locale_insensitive_strcasecmp(), except  …","Triggers out-of-memory error.  If  possible it raises ::…","This is a universal hash function.","Identical to <code>rb_obj_id</code>, except it hesitates from …","Return  <code>true</code> if  <code>obj</code> supports  to export  a MemoryView.   …","Type of function of ::<code>rb_memory_view_entry_t</code>…","Operations applied to a specific kind of a memory view.","Operations applied to a specific kind of a memory view.","<strong>@cond</strong> INTERNAL_MACROGenerated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Return a value that consists of item members.","Fill the  <code>strides</code> array  with byte-Strides  of a  …","If the given  <code>obj</code> supports to export a MemoryView  that …","Type of function of ::<code>rb_memory_view_entry_t</code>::get_func.","Return a value that consists of item members in the given …","Calculate the location of the item indicated by the given …","Fill the members of <code>view</code> as an 1-dimensional byte array.","Return  <code>true</code>  if  the  data  in  the  MemoryView  <code>view</code>  is …","Return <code>true</code> if the data in the MemoryView <code>view</code> is …","Memory view component metadata.","Calculate the number of bytes occupied by an element.","Deconstructs    the     passed    format    string,    as  …","Fill the <code>item_desc</code> member of <code>view</code>.","Associates the passed class with the  passed memory view …","Release the  given MemoryView  <code>view</code> and decrement  the …","Type of function of ::<code>rb_memory_view_entry_t</code>::release_func.","A MemoryView  structure, <code>[</code>rb_memory_view_t<code>]</code>, is used  for …","Description of each components.","Looks for the passed string in the passed buffer.","Well…  Let us hesitate from describing what a &quot;basic …","Queries if the  klass has this method.   This function has …","Evaluates the passed method with the passed arguments.","Identical to <code>rb_method_call</code>, except you can specify how to …","Identical to  <code>rb_proc_call</code>, except you can  additionally …","Identical  to <code>rb_method_call_with_block</code>,  except  you can  …","Queries the  module’s ancestors.  This routine gathers …","Resembles <code>Module#class_variables</code>.   List up  the variables …","This API is  mysterious.  It has been there since  the …","This is a variant of <code>rb_mod_const_at</code>.  As a result, it is …","Resembles  <code>Module#constants</code>.   List  up   the  constants  …","Queries if the passed module is included by the module.  …","Queries the list of  included modules.  It can also be …","The comment  that comes with  this function  says <code>:nodoc:</code>. …","Queries the number of mandatory arguments of the method …","Identical to <code>rb_obj_instance_eval</code>, except  it evaluates …","Identical to <code>rb_obj_instance_exec</code>, except  it evaluates …","Queries the name of a module.","Resembles <code>Module#remove_const</code>.","Resembles <code>Module#remove_class_variable</code>.","Identical to <code>rb_sys_fail</code>, except it  takes additional …","Identical to <code>rb_mod_sys_fail</code>, except it takes the message …","Identical  to <code>rb_mod_sys_fail</code>,  except  it  does not  …","Identical to  <code>rb_mod_syserr_fail</code>, except  it takes  the …","Creates a new, anonymous module.","Asserts that  the given  string’s encoding is  (Ruby’s …","Attempts to lock the mutex.  It waits until the mutex gets …","Queries if there are any threads that holds the lock.","Creates a mutex.","Releases  the lock  held in  the mutex  and waits  for the …","Obtains the  lock, runs the passed  function, and releases …","Attempts to lock the mutex, without  waiting for other …","Releases the mutex.","Raises an instance of ::<code>rb_eNameError</code>.  The name can be …","Identical to <code>rb_name_error</code>, except it takes a ::VALUE …","Declares that the current method needs a block.","This is the implementation detail of #RB_NEWOBJ.","This is the implementation detail of #RB_NEWOBJ_OF.","Identical  to  <code>rb_thread_call_without_gvl</code>,  except it  …","<strong>@exception</strong> <code>rb_eNotImpError</code>Note","Converts an instance of ::<code>rb_cNumeric</code> into C’s <code>double</code>.","Converts  a  numeric  value  into  a  Fixnum.   This  is  …","Converts an instance of ::<code>rb_cNumeric</code> into C’s <code>long</code>.","Converts an instance of ::<code>rb_cNumeric</code> into C’s <code>long long</code>.","Converts an instance of ::<code>rb_cNumeric</code> into C’s <code>long</code>.","Converts an instance of ::<code>rb_cNumeric</code> into C’s <code>short</code>.","Converts an instance of ::<code>rb_cNumeric</code> into C’s …","Converts an instance of ::<code>rb_cNumeric</code> into C’s …","Converts an instance of ::<code>rb_cNumeric</code> into C’s …","Converts an instance of ::<code>rb_cNumeric</code> into C’s …","Coerced binary operation.  This function first coerces the …","This one  is optimised for bitwise  operations, but the …","Identical to  <code>rb_num_coerce_bin</code>, except for return  …","Identical to  <code>rb_num_coerce_cmp</code>, except for return  …","Just always raises an exception.","Allocates an instance of the given class.","Try converting an  object to its stringised representation …","Calls <code>initialize</code>  method of the  passed object with the  …","Identical to  <code>rb_obj_call_init</code>, except you  can specify …","Queries  the  class  of  an  object.    This  is  not  …","Queries the name of the class of the passed object.","Produces a shallow copy of the given object.  Its list of …","Duplicates  the  given   object.   This  does  almost  the …","Identical to <code>rb_enc_get_index</code>, except the return type.","Just  calls  <code>rb_obj_freeze_inline</code> inside.   Does  this  …","Generated by rb-sys for Ruby 3.2.0","Just calls  RB_OBJ_FROZEN() inside.   Does this make  any …","Make the object invisible from Ruby code.","Finds or  creates an integer  primary key of the  given …","Default   implementation   of  <code>#initialize_copy</code>,   …","Evaluates a string  containing Ruby source code, or the  …","Executes the  given block within the  context of the …","Resembles <code>Object#instance_variables</code>.","Queries if an object is a fiber.","Queries if the given object is a direct instance of the …","Queries if the given object is  an instance (of possibly …","Queries if the given object is a method.","Queries if the given object is a proc.","Creates a method object.  A method object is a proc-like …","Identical to <code>rb_mod_method_arity</code>, except it searches for …","Resembles <code>Object#remove_instance_variable</code>.","Identical to  <code>rb_respond_to</code>, except  it additionally takes …","Make a hidden object visible again.","Fills common fields in the object.","Identical  to  <code>rb_class_instance_methods</code>,  except   it  …","This is an utility function to raise an ::<code>rb_eRangeError</code>.","The field  separator character for outputs,  or the <code>$,</code>.  …","The record separator  character for outputs, or the <code>$\\\\\\\\</code>.   …","Inspects an object.   It first calls the argument’s  …","Resolves a <code>Q::W::E::R</code>-style path string to the actual …","This function is mysterious.  What it does is not …","Identical to  <code>rb_path2class</code>, except it  accepts the path …","This is an <code>rb_cloexec_pipe</code> + <code>rb_update_max_fd</code> combo.","Type of postponed jobs.","Registers a postponed job.","Identical to <code>rb_postponed_job_register_one</code>,  except it …","Identical to <code>rb_include_module</code>, except it  &quot;prepends&quot; the …","Queries the number  of mandatory arguments of the given  …","Evaluates the passed proc with the passed arguments.","Identical to <code>rb_proc_call</code>,  except you can specify how to  …","Identical to <code>rb_proc_call</code>,  except you can additionally  …","Identical to <code>rb_proc_call_with_block</code>, except you can …","Executes a shell command.","Queries if the given object is a lambda.  Instances of ::…","This is an <code>rb_iterate</code> + <code>rb_block_proc</code> combo.","Gathers info about resources consumed by the current …","Identical  to  <code>rb_profile_frame_path</code>,  except   it  tries  …","Identical  to <code>rb_profile_frame_label</code>,  except  it does  …","Queries the class path of the method that the passed frame …","Queries the first  line of the method  of the passed frame …","Identical to <code>rb_profile_frame_label</code>, except it returns a …","Queries human-readable &quot;label&quot; string.  This is <code>\\\\&quot;&lt;main&gt;\\\\&quot;</code> …","Queries the name of the method of the passed frame.","Queries the path of the passed backtrace.","Identical  to  <code>rb_profile_frame_method_name</code>,  except  it  …","Queries if the method of the passed frame is a singleton …","Queries mysterious &quot;frame&quot;s of the given range.","Protects a  function call from  potential global escapes …","Declares that the  given feature is already provided by  …","Queries if  the given  feature has  already been  loaded …","Generated by rb-sys for Ruby 3.2.0","(Opaque) struct that holds a ractor-local storage key.","Identical to <code>rb_ractor_local_storage_value</code> except the …","Extended version of <code>rb_ractor_local_storage_value_newkey</code>.  …","Identical to <code>rb_ractor_local_storage_value_set</code> except the …","Type that defines a ractor-local storage.","A type of ractor-local storage that destructs itself using …","Queries the key.","Queries the key.","Issues a new key.","Associates the passed value to the passed key.","Destructively  transforms the  passed object  so that  …","Identical to <code>rb_ractor_make_shareable</code>, except it  returns …","Queries  the standard  error  of the  current Ractor  that …","Assigns an  IO to  the standard  error of  the Ractor  …","Queries  the standard  input  of the  current Ractor  that …","Assigns an  IO to  the standard  input of  the Ractor  …","Queries  the standard  output of  the current  Ractor that …","Assigns an  IO to  the standard output  of the Ractor  …","Exception  entry point.   By calling  this  function the  …","Repeatedly calls  the passed function over  and over again …","Initialises  an allocated  ::<code>rb_random_t</code> instance.   Call …","Generates a String of random bytes.","Generated by rb-sys for Ruby 3.2.0","<strong>@copydoc</strong> <code>rb_data_type_t</code>Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Identical to <code>rb_genrand_int32</code>, except it generates using …","PRNG algorithmic interface, analogous to Ruby level …","Major/minor versions of this interface","This   is    the   implementation   of    ::…","Identical to <code>rb_genrand_real</code>, except it generates using …","Base components of the random interface.","Base components of the random interface.","Identical  to  <code>rb_genrand_ulong_limited</code>,  except it  …","Deconstructs  a numerical  range.  As  the  arguments are  …","Creates a new Range.","Deconstructs a range into its components.","Queries the denominator of the passed Rational.","Constructs a Rational,  with reduction.  This returns  for …","Queries the numerator of the passed Rational.","Identical to <code>rb_rational_new</code>, except it skips argument …","Raises appropriate exception using the parameters.","Identical to <code>rb_readwrite_sys_fail</code>, except it  does not …","Creates a new, anonymous refinement.","Tell us if this is a wrong idea,  but it seems this …","Allocates an instance of ::<code>rb_cRegexp</code>.","Queries the index of the given named capture.  Captures …","Initialises an instance of ::<code>rb_cRegexp</code>.","This just returns the argument, stringified.  What a poor …","This is the match operator.","Identical  to <code>rb_reg_match</code>,  except it  matches against  …","The portion of the original string that captured at the …","The portion of the original string after the given match.","The portion of the original string before the given match.","Creates a new Regular expression.","Identical to <code>rb_reg_new</code>,  except it takes the expression  …","Identical to <code>rb_reg_nth_match</code>, except it just returns …","Queries the nth captured substring.","Queries the options of the passed regular expression.","Exercises  various  checks  and  preprocesses  so  that  …","Escapes  any  characters  that  would  have special  …","Creates a  new instance of  ::<code>rb_cRegexp</code>.  It can  be seen …","Duplicates a match data.  This  is roughly the same as …","Substitution.  This  is basically the implementation  of …","Runs  the  passed  regular  expression   over  the  passed …","Removes the passed function from the list of event hooks.","Identical to  <code>rb_remove_event_hook</code>, except it additionally …","Removes a  method.  Don’t confuse  this to …","Identical to <code>rb_remove_method</code>, except it accepts the …","Identical  to <code>rb_require_string</code>,  except it  takes C’s  …","Finds and loads the given feature, if absent.","Identical  to <code>rb_rescue2</code>,  except it  does not  take a  …","An equivalent of <code>rescue</code> clause.","Queries if the  given FD is reserved or not.   …","Resets the RNG behind <code>rb_genrand_int32</code>/<code>rb_genrand_real</code>.","Queries if  the object responds  to the  method.  This …","The record  separator character for inputs,  or the <code>$/</code>.  …","Private","Private","Retrieves argument from argc and  argv to given ::VALUE …","Private","Identical to <code>rb_scan_args</code>, except it also accepts <code>kw_splat</code>.","Private","Names a class.","Identical  to <code>rb_set_class_path</code>,  except  it accepts  the  …","Registers a function  that shall run on process  exit.  …","Sets the current exception (<code>$!</code>) to the given value.","Finds or creates the singleton class of the passed object.","Attaches a singleton class to its corresponding object.","Clones a singleton class.  An object  can have its own …","Resembles <code>__FILE__</code>.","Resembles <code>__LINE__</code>.","Identical  to <code>rb_f_exec</code>,  except  it  spawns a  child  …","Identical  to <code>rb_spawn</code>,  except  you can  additionally  …","Ruby’s extended <code>sprintf(3)</code>.   We ended up reinventing  …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Identical to <code>rb_st_foreach</code>, except it  raises exceptions …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Constructs an instance of ::<code>rb_cStat</code> from the passed …","&lt; <code>STDERR</code> constant.","&lt; <code>STDIN</code> constant.","&lt; <code>STDOUT</code> constant.","Identical to <code>rb_str_to_inum</code>, except the  second argument …","Identical to  <code>rb_str_buf_append</code>, except  it converts  the …","Identical to  <code>rb_str_cat_cstr</code>, except  it takes  Ruby’s …","@alias{<code>rb_str_cat</code>}","@alias{<code>rb_str_cat_cstr</code>}","Identical to  <code>rb_str_cat_cstr</code>, except  it additionally …","Allocates  a &quot;string  buffer&quot;.   A  string buffer  here  …","This is a <code>rb_str_buf_new</code> + <code>rb_str_buf_cat</code> combo.","Queries the capacity of the given string.","Destructively appends the passed contents to the string.","@alias{<code>rb_str_cat_cstr</code>}","Identical to <code>rb_str_cat</code>, except it assumes the passed …","Identical to  <code>rb_sprintf</code>, except  it renders the  output …","Compares two strings, as in <code>strcmp(3)</code>.  This does not …","Scans the passed string until it finds something odd.  …","Checks  if  two   strings  are  comparable  each  other   …","Identical  to  <code>rb_str_append</code>, except  it  also  accepts  …","Encoding conversion main routine.","Identical  to <code>rb_str_conv_enc</code>,  except  it additionally  …","Shrinks the given string for the given number of bytes.","&quot;Inverse&quot; of <code>rb_eval_string</code>.  Returns a quoted version of …","Duplicates a string.","@alias{<code>rb_str_new_frozen</code>}","Shortens <code>str</code> and adds three dots, an  ellipsis, if it is …","Converts the contents  of the passed string from its  …","Converts a  string into an  &quot;OS Path&quot; encoding,  if any.  …","Equality of two strings.","Identical  to <code>rb_str_to_str</code>,  except it  additionally …","Identical to  <code>rb_str_export</code>, except it  converts into the  …","Identical to <code>rb_str_export</code>, except it additionally takes …","Formats a string.","Destroys the given string for no reason.","This is the implementation of <code>String#freeze</code>.","Calculates a hash value of a string.   This is one of the …","Compares two  strings.  This  is one  of the  two …","Generates a &quot;readable&quot; version of the receiver.","Identical  to  <code>rb_to_symbol</code>,  except  it assumes  the  …","Identical to <code>rb_str_strlen</code>, except it returns the value in …","Obtains a &quot;temporary  lock&quot; of the string.  This  advisory …","Declares that the string is about to be modified.  This …","Identical to <code>rb_str_modify</code>, except it additionally expands …","Allocates an instance of ::<code>rb_cString</code>.","Identical to <code>rb_str_new</code>, except it assumes the passed …","Creates  a frozen  copy of  the string,  if necessary.   …","Identical to <code>rb_str_new_cstr</code>,  except it takes a Ruby’s  …","Identical to <code>rb_str_new</code>, except it takes a C string …","Identical  to <code>rb_str_new</code>,  except it  takes  the class  of …","&quot;Inverse&quot; of <code>rb_str_sublen</code>.  This function  scans the …","Generates a new string, concatenating the former to the …","Replaces the contents  of the former object with the  …","Overwrites the length of the  string.  In contrast to …","I guess there  is no use case  of this function in  …","&quot;Cleanses&quot; the string.   A string has its encoding and  …","Overwrites the  length of the  string.  Typically this  is …","This is a ::<code>rb_gvar_setter_t</code> that refutes non-string …","Replaces the contents of the former with the latter.","Divides  the  given string  based  on  the  given  …","Counts the  number of characters (not  bytes) that are …","Byte  offset to  character offset  conversion.   This …","Identical  to <code>rb_str_substr</code>,  except it  returns a  C’s …","Identical to  <code>rb_str_substr</code>, except  the numbers  are …","This is the implementation of two-argumented <code>String#slice</code>.","Searches for  the &quot;successor&quot;  of a string.   This …","Repetition of a string.","Allocates a  &quot;temporary&quot; string.  This is  a hidden empty …","Identical to <code>rb_cstr_to_dbl</code>, except it  accepts a Ruby’s …","Identical to <code>rb_interned_str</code>,  except it takes a Ruby’s  …","Identical to <code>rb_cstr2inum</code>, except it takes Ruby’s …","Identical to <code>rb_check_string_type</code>, except it  raises …","Releases a lock formerly obtained by <code>rb_str_locktmp</code>.","Replaces some  (or all) of  the contents of the  given …","Identical to  <code>rb_str_catf</code>, except it  takes a  <code>va_list</code>.  …","Identical to  <code>rb_str_to_str</code>, except it  fills the passed …","Identical to  <code>rb_string_value_ptr</code>, except  it additionally …","Identical  to  <code>rb_str_to_str</code>, except  it  returns  the …","Identical to  <code>rb_struct_new</code>, except it  takes the  field …","Allocates an  instance of the  given class.   This …","Resembles <code>Struct#[]</code>.","Resembles <code>Struct#[]=</code>.","Defines a struct class.","Identical  to <code>rb_struct_define</code>,  except  it defines  the  …","Identical to <code>rb_struct_define</code>, except it does not define …","Identical  to  <code>rb_struct_define_without_accessor</code>,  except …","Identical to <code>rb_struct_aref</code>, except it takes ::ID instead …","Mass-assigns a struct’s fields.","Queries the list of the names of the fields of the class …","Creates an instance of the given struct.","Queries the list of the names of the fields of the given …","Returns the number of struct members.","Converts an instance of ::<code>rb_cSymbol</code> into an ::ID.","Identical to <code>rb_id2str</code>, except it takes an instance of ::…","Collects every single bits of symbols  that have ever …","This is an <code>rb_sym2str</code> + <code>rb_str_dup</code> combo.","Sees if  the passed C string  constructs a valid syntactic …","Converts a C errno into a Ruby exception, then raises it.  …","Identical to  <code>rb_sys_fail</code>, except  it takes the  message …","Identical to <code>rb_sys_fail</code>, except it does  not raise an …","Raises appropriate exception that represents a C errno.","Identical to <code>rb_syserr_fail</code>, except it  takes the message …","Creates an exception object that represents the given C …","Identical to <code>rb_syserr_new</code>,  except it takes the message  …","This is  a shorthand of  <code>rb_waitpid</code> without status  and …","Identical to <code>rb_add_event_hook</code>, except its effect is …","Generated by rb-sys for Ruby 3.2.0","Checks if  the thread this  function is running is  the …","A <code>pthread_atfork(3posix)</code>-like  API.  Ruby  expects its …",":FIXME: situation  of this function  is unclear.   It …","(Re-)acquires the GVL.   This manoeuvre makes it possible  …","Allows the passed function to run in parallel with other …","Identical to <code>rb_thread_call_without_gvl</code>, except it does …","Checks for  interrupts.  In ruby,  signals are  masked by …","Creates a Ruby thread that is backended by a C function.","Obtains the &quot;current&quot; thread.","Notifies a closing of a file  descriptor to other threads. …","Waits for multiple file descriptors at once.  This is …","Identical to <code>rb_thread_wait_fd</code>, except it  blocks the …","Checks if the  thread’s execution was recently …","Terminates the given thread.  Unlike a stopped thread, a …","This  badly named  function reads  from a  Fiber local  …","This  badly named  function  writes to  a Fiber  local  …","Obtains the &quot;main&quot; thread.  There are threads called main. …","Identical to  <code>rb_remove_event_hook</code>, except it additionally …","Identical to <code>rb_thread_remove_event_hook</code>, except it …","This is a <code>rb_thread_wakeup</code> + <code>rb_thread_schedule</code> combo.","Tries to switch  to another thread.  This function blocks  …","Blocks for the given period of time.","Identical  to  <code>rb_thread_sleep_forever</code>,  except the  …","Blocks indefinitely.","Stops the current thread.  This is not the end of the …","Blocks the  current thread until  the given file  …","Identical to <code>rb_thread_sleep</code>, except it takes struct …","Marks a given thread as eligible for scheduling.","Identical  to <code>rb_thread_wakeup</code>,  except  it doesn’t  …","Transfers control to the end of  the active <code>catch</code> block …","Identical to <code>rb_throw</code>, except it allows  arbitrary Ruby …","Creates  a  &quot;time  interval&quot;.   This   basically  converts …","Identical  to  <code>rb_time_new</code>, except  it  accepts  the time  …","Creates  an  instance of  ::<code>rb_cTime</code>  with  the  given  …","Identical to <code>rb_time_timespec_new</code>, except it  takes Ruby …","Identical to <code>rb_time_timeval</code>, except for return type.","Identical to <code>rb_time_interval</code>, except for return type.","Creates an instance of ::<code>rb_cTime</code>, with given time and …","Converts an  instance of <code>rb_cTime</code>  to a  struct timeval …","Queries the  offset, in seconds  between the time zone  of …","Fills the current time into the given struct.","Identical to  <code>rb_find_encoding</code>, except it  raises an …","Obtains   a  encoding   index  from   a   wider  range   …","Identical to <code>rb_check_to_float</code>, except it raises on error.","<strong>@copydoc</strong> <code>rb_intern_str</code>Internal","Identical  to <code>rb_check_to_int</code>,  except  it raises  in  …","Identical  to  <code>rb_intern_str</code>, except  it  generates  a …","Generated by rb-sys for Ruby 3.2.0","Type  that  represents  a  specific  trace  event.   …","Creates a binding object of the point where the trace is …","Identical  to  <code>rb_tracearg_method_id</code>, except  it  returns  …","Queries the class that defines the method that the passed …","Identical to  <code>rb_tracearg_event_flag</code>, except  it returns  …","Queries the event of the passed trace.","Queries the current event of the passed tracepoint.","Queries the line of the point where the trace is at.","Queries the method name of the point where the trace is at.","Queries the allocated/deallocated object that the trace …","Queries the file name of the point where the trace is at.","Queries the raised exception that the trace represents.","Queries the return value that the trace represents.","Queries the receiver of the point trace is at.","Stops (disables) an already running instance of TracePoint.","Starts (enables) trace(s) defined by the passed object.  A …","Queries if the passed TracePoint is up and running.","Creates a  tracepoint by  registering a  callback function …","Checks for the domestic relationship between the two.","Checks if the given object is of given kind.","Converts a C’s <code>intptr_t</code> into an instance of ::<code>rb_cInteger</code>…","Converts a C’s <code>uintptr_t</code> into an instance of ::…","Converts a C’s <code>unsigned long long</code> into an instance of ::…","This is  the type of UBFs.   An UBF is  a function that …","Inserts a  method entry that hides  previous method …","Deletes the  allocator function of  a class.   It is …","Defines an undef of a method.  – What?","Modifies the object so  that it has no finalisers at  all. …","Fails with the given object’s type incompatibility to …","Informs the interpreter that the passed fd can be the max. …","Identical to  <code>rb_usascii_encoding</code>, except it returns  the …","Queries the encoding that represents US-ASCII.","Identical  to <code>rb_str_new</code>,  except  it  generates a  string …","Identical to <code>rb_str_new_cstr</code>,  except it generates a …","Identical to <code>rb_str_new_static</code>, except it generates a …","Identical  to <code>rb_utf8_encoding</code>,  except  it returns  the …","Queries the encoding that represents UTF-8.","Identical to <code>rb_str_new</code>, except it generates a string of …","Identical  to <code>rb_str_new_cstr</code>,  except it  generates a  …","Identical to  <code>rb_str_new_static</code>, except it  generates a …","Encodes a Unicode codepoint into its UTF-8 representation.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Identical to  <code>rb_rescue2</code>, except  it takes  <code>va_list</code> …","Identical to <code>rb_sprintf</code>, except it takes a <code>va_list</code>.","Blocks until the passed file descriptor is ready for the …","Waits for a process, with releasing GVL.","Identical to  <code>rb_warning</code>, except it  reports always …","Issues a warning.","Warning  categories.  A  warning issued  using this  API …","Writes the given error message to  somewhere applicable.  …","Identical to  <code>rb_write_error</code>, except  it additionally …","Yields the block.  In Ruby there is  a concept called a …","Pass a passed block.","Identical to  <code>rb_yield_values</code>, except it  splats an array …","Identical to <code>rb_yield_splat</code>, except you can specify how to …","Identical to <code>rb_yield</code>,  except it takes variadic number  …","Identical to <code>rb_yield_values</code>,  except it takes the …","Identical to  <code>rb_yield_values2</code>, except you  can specify …","Private","Private","(Byte)  read   buffer.   Note  also   that  there  is  a   …","@endcond","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Encoding converter used when reading from this IO.","true for readonly memory, false for writable memory.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The expression of this match.","&quot;Registers&quot;  of a  match.   This  is a  quasi-opaque  …","Releases   a   memory  view   that   was   previously  …","How many numbers of components are there. For instance &quot;CCC…","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","This field  is reserved for future  extension.  For now, …","&lt; Multiplication result.","Represents a match.","The result of this match.","Represents the  region of a  capture group.   This is …","API versions, in { major, minor, teeny } order.","Identical to  ruby_glob(), @shyouhei  currently suspects.  …","Destructs the VM.","What <code>rb_enc_str_coderange</code> returns.","Copyright notice.","Pretends as if  there was no custom signal handler.   This …","This is what <code>ruby -v</code> prints to the standard error.  …","Character to  number mapping  like <code>&#39;a&#39;</code>  -&gt; <code>10</code>, <code>&#39;b&#39;</code>  -&gt; <code>11</code>  …","Scans the  passed string, with calling  the callback …","This enum is kind of omnibus.  Gathers various constants.","Our own  encoding-aware version  of <code>basename(3)</code>.  …","Our own  encoding-aware version of  <code>extname</code>.  This …","Private","Generated by rb-sys for Ruby 3.2.0","This  is just  <code>\\\\&quot;ruby\\\\&quot;</code>  for  us.  But  different  …","Identical to ruby_run_node(), except it returns an opaque …","Checks the return value of ruby_options().","Runs the VM finalization processes.","The  flags.  Each  ruby objects  have their  own …","This is an enum because GDB wants it (rather than a …","This is our  own version of <code>getcwd(3)</code> that uses  …","Identical to <code>rb_glob</code>, except it returns opaque exception …","Type of a glob callback function.  Called every time glob …","Characters that Ruby accepts as hexadecimal digits.  This …","Appends the given path to the end of the load path.","Calls ruby_setup() and check error.","Sets up <code>$LOAD_PATH</code>.","Set stack bottom of Ruby implementation.","Private","Flags passed to <code>rb_memory_view_get</code>, then to ::…","Queries  if  the thread  which  calls  this  function  is …","Processes command line arguments and compiles the Ruby …","This  is a  monotonic  increasing integer  that  describes …","Target platform identifier, in a C string.","Generated by rb-sys for Ruby 3.2.0","Identical to ruby_options(), except it raises ruby-level …","Defines built-in variables","Generated by rb-sys for Ruby 3.2.0","This is an enum because GDB wants it (rather than a …","Private","Date of release, in a C string.","Private","Private","Private","Runs the given compiled source and exits this process.","This is an enum because GDB wants it (rather than a …","Scans the passed string, assuming the  string is a textual …","Interprets the  passed string  a hexadecimal  unsigned …","Interprets  the passed  string as  an  octal unsigned  …","Sets the current script name to this value.","Sets argv that ruby understands.  Your program might have …","Identical to ruby_script(), except it takes the name as a …","Sets  an environment  variable.   In case  of  POSIX this  …","Initializes the VM and builtin libraries.","Prints the copyright notice of the CRuby interpreter to …","Prints the version information of the CRuby interpreter to …","Clear signal handlers.","Queries  the name  of  the signal.   It returns  for  …","Our own locale-insensitive version of <code>snprintf(3)</code>.  It can …","special constants - i.e. non-zero and non-fixnum constants","Checks for stack overflow.","Queries what Ruby thinks is the machine stack.  Ruby …","Calls ruby_cleanup() and exits the process.","This is our  own version of <code>strdup(3)</code> that uses  …","Our own locale-insensitive  version of <code>strtod(3)</code>.  The  …","Our own locale-insensitive version of  <code>strtoul(3)</code>.  The …","Initializes the process for libruby.","Deletes the passed environment variable, if any.","C-level type of an object.","Stringised version.","ruby_vm_at_exit registers a function <em>func</em> to be invoked …","Destructs the  passed VM.   You don’t  have to call  …","The opaque struct to hold VM internals.  Its fields are …","Identical to ruby_snprintf(),  except it takes a <code>va_list</code>.  …","Identical  to  ruby_xmalloc2(),  except  it returns  a  …","Deallocates a storage instance.","Allocates a  storage instance.  It is  largely the same as …","Identical to ruby_xmalloc(), except it allocates <code>nelems</code> * …","Resize the storage instance.","Identical to ruby_xrealloc(),  except it resizes the  …","Seed, passed through e.g. <code>Random.new</code>","The IO’s Ruby level counterpart.","","","","","Generated by rb-sys for Ruby 3.2.0","ndim size array indicating the number of elements in each …","Parent  of the  string.   Nowadays strings  can share  …","Generated by rb-sys for Ruby 3.2.0","The component’s size.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Source code of this expression.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","stdio ptr for read/write, if available.","&lt; Step between a sequence.","The target string that the match was made against.","ndim size array indicating the number of bytes to skip to …","Generated by rb-sys for Ruby 3.2.0","The offset in each dimension when this memory view exposes …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Duplex IO object, if set.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","The timeout associated with this IO when performing …","Generated by rb-sys for Ruby 3.2.0","@endcond","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","This field  stores various  information about how  Ruby …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This has to be always 1.","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Reference count.  A  regexp match can take extraordinarily …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Write buffer.","Name of  structs of this  kind.  This  is used for  …","This is a Ruby  level mutex.  It avoids multiple threads  …","Encoding converter used when writing to this IO.","This is, when set, an instance  of ::<code>rb_cString</code> which …","Whether ::<code>rb_io_t</code>::writeconv is already set up.","Value   of    ::<code>rb_io_t</code>::<code>rb_io_enc_t</code>::ecflags   stored    …","Value of ::<code>rb_io_t</code>::<code>rb_io_enc_t</code>::ecopts stored right …","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","Generated by rb-sys for Ruby 3.2.0","","Checks if the given object is a so-called Fixnum.","","","Checks if the given object is a so-called Flonum.","","Checks if  the given  object is  an immediate  i.e. an  …","Checks if the given object is nil.","","","","","Checks if the given object is of enum …","Checks if the given object is a static symbol.","","Emulates Ruby’s “if” statement.","Queries the type of the object.","Queries if the object is a dynamic symbol.","Queries if the object is an instance of ::rb_cFloat.","Queries if the object is an instance of ::rb_cInteger.","Queries if the object is an instance of ::rb_cSymbol.","Identical to RB_BUILTIN_TYPE(), except it can also accept …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,37,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,45,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,24,0,70,70,70,70,60,60,60,60,60,0,0,0,0,0,0,0,0,0,59,59,59,0,0,0,0,0,0,0,0,0,0,0,17,0,0,17,17,25,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,24,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,78,78,78,0,78,78,78,78,78,78,0,0,0,0,17,17,17,17,0,0,0,0,0,0,0,0,0,17,0,0,17,0,0,51,51,51,51,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,35,35,0,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,3,5,0,0,0,0,0,0,0,0,79,79,5,5,5,5,5,5,5,5,80,5,5,5,5,5,5,3,5,5,5,5,5,68,65,68,68,68,62,62,62,63,31,39,47,27,38,46,29,40,82,67,27,38,44,46,50,53,90,65,88,55,64,34,34,0,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,68,68,61,80,30,41,75,68,68,69,63,77,68,89,89,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,61,61,63,63,32,81,99,53,80,52,2,86,0,52,52,68,68,52,0,76,71,71,71,71,71,71,71,76,28,66,68,76,76,77,55,65,88,34,34,34,34,2,3,5,6,7,8,9,17,18,19,20,21,22,23,24,25,26,31,32,34,35,36,37,42,44,45,48,50,51,99,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,62,68,68,55,0,77,0,6,56,77,19,99,63,86,2,3,4,5,6,7,8,9,17,18,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,42,43,44,45,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,79,80,0,44,83,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,2,2,86,63,63,82,86,86,0,2,17,18,20,21,22,23,24,25,26,35,36,37,42,45,51,59,60,70,71,73,74,78,32,28,39,47,86,86,67,68,68,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,63,63,63,80,80,48,48,19,54,63,29,31,40,75,81,77,79,67,87,68,83,63,56,63,63,64,63,87,77,0,63,68,79,80,2,79,0,68,68,34,68,68,69,65,68,80,75,0,79,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,68,69,64,68,68,66,66,99,2,77,69,77,0,63,80,63,29,40,50,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,77,80,34,0,90,89,82,79,68,68,52,54,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,77,2,2,79,79,0,80,30,41,79,34,0,50,0,8,8,8,8,0,0,8,0,8,8,0,0,8,8,0,0,0,8,8,8,8,8,8,8,0,8,0,0,8,0,68,0,77,55,90,80,68,80,68,69,69,68,77,0,68,77,0,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,7,7,9,9,34,53,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,99,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,53,0,67,50,68,0,86,77,99,77,77,77,77,77,77,10,11,12,13,14,15,16,10,11,12,13,14,15,16,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[2,[1]]]],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[94]],2],95],0,0,0,0,0,0,0,0,0,0,[[],[[2,[96]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[97]],2],98],[[3,3],98],[[5,5],98],[[6,6],98],[[7,7],98],[[8,8],98],[[9,9],98],[[17,17],98],[[18,18],98],[[19,19],98],[[20,20],98],[[21,21],98],[[22,22],98],[[23,23],98],[[24,24],98],[[25,25],98],[[26,26],98],[[31,31],98],[[32,32],98],[[34,34],98],[[35,35],98],[[36,36],98],[[37,37],98],[[42,42],98],[[44,44],98],[[45,45],98],[[48,48],98],[[50,50],98],[[51,51],98],[[99,99],98],[[52,52],98],[[53,53],98],[[54,54],98],[[55,55],98],[[56,56],98],[[59,59],98],[[60,60],98],[[61,61],98],[[62,62],98],[[63,63],98],[[64,64],98],[[65,65],98],[[66,66],98],[[67,67],98],[[68,68],98],[[69,69],98],[[70,70],98],[[71,71],98],[[73,73],98],[[74,74],98],[[75,75],98],[[76,76],98],[[77,77],98],[[78,78],98],[[79,79],98],[[80,80],98],[[81,81],98],[[82,82],98],[[83,83],98],[[85,85],98],[[86,86],98],[[87,87],98],[[88,88],98],[[89,89],98],[[90,90],98],[[93,93],98],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[100]],101],102],[[3,101],102],[[4,101],102],[[5,101],102],[[6,101],102],[[7,101],102],[[8,101],102],[[9,101],102],[[17,101],102],[[18,101],102],[[19,101],102],[[20,101],102],[[21,101],102],[[22,101],102],[[23,101],102],[[24,101],102],[[25,101],102],[[26,101],102],[[31,101],102],[[32,101],102],[[33,101],102],[[34,101],102],[[35,101],102],[[36,101],102],[[37,101],102],[[42,101],102],[[43,101],102],[[44,101],102],[[45,101],102],[[48,101],102],[[49,101],102],[[50,101],102],[[51,101],102],[[99,101],102],[[52,101],102],[[53,101],102],[[54,101],102],[[55,101],102],[[56,101],102],[[57,101],102],[[58,101],102],[[59,101],102],[[60,101],102],[[61,101],102],[[62,101],102],[[63,101],102],[[64,101],102],[[65,101],102],[[66,101],102],[[67,101],102],[[68,101],102],[[69,101],102],[[70,101],102],[[71,101],102],[[72,101],102],[[73,101],102],[[74,101],102],[[75,101],102],[[76,101],102],[[77,101],102],[[78,101],102],[[79,101],102],[[80,101],102],[[81,101],102],[[82,101],102],[[83,101],102],[[84,101],102],[[85,101],102],[[86,101],102],[[87,101],102],[[88,101],102],[[89,101],102],[[90,101],102],[[91,101],102],[[92,101],102],[[93,101],102],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,103,104],105],[[2,103],98],0,0,0,0,0,0,0,[[[2,[106]]]],[17],[18],[20],[21],[22],[23],[24],[25],[26],[35],[36],[37],[42],[45],[51],[59],[60],[70],[71],[73],[74],[78],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[79,108],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[79,108],0,[[],2],[[108,108],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[109]],2],[[110,[95]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,103,104,105]],[[2,103,98]],[[79,108]],[[79,108]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],[[],111],0,0,0,0,0,0,[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[113,[107]]],98],0,0,[[[113,[107]]],98],0,[[[113,[107]]],98],[[[113,[107]]],98],0,0,0,0,[[[113,[107]]],98],[[[113,[107]]],98],0,[[[113,[107]]],98],[107,22],[107,98],[107,98],[107,98],[107,98],[[[113,[107]]],22]],"p":[[8,"Clone"],[3,"__BindgenBitfieldUnit"],[3,"__sbuf"],[3,"__sFILEX"],[3,"__sFILE"],[3,"fd_set"],[3,"timespec"],[3,"stat"],[3,"timeval"],[19,"_bindgen_ty_2"],[19,"_bindgen_ty_3"],[19,"_bindgen_ty_4"],[19,"_bindgen_ty_5"],[19,"_bindgen_ty_6"],[19,"_bindgen_ty_7"],[19,"_bindgen_ty_8"],[4,"ruby_special_consts"],[4,"ruby_rvalue_flags"],[3,"RBasic"],[4,"rb_warning_category_t"],[4,"rb_io_wait_readwrite"],[4,"ruby_value_type"],[4,"ruby_fl_ushift"],[4,"ruby_fl_type"],[4,"_bindgen_ty_9"],[4,"ruby_rstring_flags"],[3,"RString"],[19,"RString__bindgen_ty_1"],[3,"RString__bindgen_ty_1__bindgen_ty_1"],[19,"RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[3,"RString__bindgen_ty_1__bindgen_ty_2"],[3,"st_hash_type"],[3,"st_table_entry"],[3,"st_table"],[4,"st_retval"],[4,"ruby_rarray_flags"],[4,"ruby_rarray_consts"],[3,"RArray"],[19,"RArray__bindgen_ty_1"],[3,"RArray__bindgen_ty_1__bindgen_ty_1"],[19,"RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[4,"ruby_rmodule_flags"],[3,"RClass"],[3,"RFile"],[4,"ruby_robject_flags"],[3,"RObject"],[19,"RObject__bindgen_ty_1"],[3,"RObject__bindgen_ty_1__bindgen_ty_1"],[3,"re_patter_buffer"],[3,"RRegexp"],[4,"rbimpl_typeddata_flags"],[3,"rb_data_type_struct__bindgen_ty_1"],[3,"RTypedData"],[3,"rbimpl_size_mul_overflow_tag"],[3,"rb_arithmetic_sequence_components_t"],[3,"rb_fdset_t"],[3,"rb_debug_inspector_struct"],[3,"rb_trace_arg_struct"],[4,"rb_event_hook_flag_t"],[4,"ruby_coderange_type"],[3,"OnigCaseFoldCodeItem"],[3,"OnigMetaCharTableType"],[3,"OnigEncodingTypeST"],[3,"OnigSyntaxType"],[3,"re_registers"],[3,"OnigErrorInfo"],[3,"OnigRepeatRange"],[3,"re_pattern_buffer"],[3,"OnigCompileInfo"],[4,"ruby_encoding_consts"],[4,"rb_econv_result_t"],[3,"rb_econv_t"],[4,"ruby_econv_flag_type"],[4,"rb_io_event_t"],[3,"rb_io_buffer_t"],[3,"rb_io_enc_t"],[3,"rb_io_t"],[4,"ruby_memory_view_flags"],[3,"rb_memory_view_item_component_t"],[3,"rb_memory_view_t"],[3,"rb_memory_view_t__bindgen_ty_1"],[3,"rb_memory_view_entry"],[3,"rb_ractor_local_storage_type"],[3,"rb_ractor_local_key_struct"],[3,"rb_random_struct"],[3,"rb_random_interface_t"],[3,"rb_random_interface_t__bindgen_ty_1"],[3,"rmatch_offset"],[3,"rmatch"],[3,"RMatch"],[3,"rb_internal_thread_event_hook"],[3,"rb_vm_struct"],[3,"rb_id_table"],[8,"Ord"],[4,"Ordering"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"rb_data_type_struct"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"usize"],[15,"u8"],[15,"u64"],[8,"Hash"],[6,"VALUE"],[6,"c_uint"],[8,"PartialOrd"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"Into"]]},\
"serde":{"doc":"Serde","t":[8,24,8,16,16,16,8,24,16,16,16,16,16,16,16,8,11,11,11,0,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,14,11,11,0,14,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,13,13,13,8,8,8,8,16,13,8,8,16,16,16,16,16,8,13,3,8,13,8,13,13,13,13,13,8,13,2,13,13,13,4,13,13,13,16,16,16,8,8,11,11,11,11,11,11,11,11,10,11,10,10,11,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,10,11,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,16,16,16,16,16,16,3,16,16,16,16,16,16,16,16,8,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,2,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,10,10,10,10,10,10,11,11,11,11,11,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11],"n":["Deserialize","Deserialize","Deserializer","Error","Error","Ok","Serialize","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","provide","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":["serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::deserde::de::valueserde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <strong>data structure</strong> that can be deserialized from any data …","Derive macro available if serde is built with …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Derive macro available if serde is built with …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,0,63,64,64,0,0,64,64,64,64,64,64,64,0,64,64,64,0,65,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,63,64,0,0,66,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,20,20,20,0,0,0,0,67,20,0,0,63,68,69,70,71,0,20,0,0,20,0,20,20,20,20,20,0,20,0,20,20,20,0,20,20,20,72,73,70,0,0,19,20,19,20,19,20,19,20,74,19,65,72,19,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,74,20,73,19,23,23,19,19,20,20,19,20,19,20,67,74,74,74,63,74,71,71,68,68,69,69,69,69,69,69,68,69,71,19,20,20,19,20,19,20,71,19,20,71,74,74,0,70,70,73,19,73,73,73,73,19,73,73,19,73,73,19,73,19,73,73,73,19,73,73,19,73,19,73,19,73,19,73,19,73,19,73,73,19,73,73,73,19,73,73,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,37,37,37,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,36,54,37,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,36,54,36,36,36,37,36,36,54,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,37,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,29,30,31,32,33,56,0,64,75,76,77,78,79,80,81,0,64,75,76,77,78,79,80,81,0,0,64,0,64,0,64,0,64,0,64,0,64,0,64,0,0,62,62,64,64,64,82,75,76,77,78,79,80,81,62,62,62,62,62,62,62,62,62,64,66,64,64,64,75,76,62,62,79,64,64,77,78,80,81,62,62,62,62,64,64,64,64,64,79,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,79,62,80,81,62,62,62],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[2,1],[3,1],[[2,3],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],0,[[],4],[[],4],0,0,[[],1],[4,1],[[],1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[11,1],[12,1],[[[13,[3]]],1],[2,1],[[2,14,2],1],[[],1],[[[13,[3]]],1],[[],1],[2,1],[[2,3],1],[[2,14,2,3],1],[3,1],[[2,3],1],[[2,14,2,3],1],[15,1],[16,1],[14,1],[17,1],[18,1],[[],1],[2,1],[[2,14,2],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[19,19],[20,20],[[]],[[]],[[]],[[],19],[[],1],[[],1],[[],[[1,[19]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[2,1],[3,1],[[2,3],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[2],[[20,20],4],[21,22],[[19,21],22],[21,22],[[23,21],22],[[19,21],22],[21,[[1,[24]]]],[[20,21],22],[[20,21],22],[[]],[[]],[[]],[[]],[[]],[[3,23]],[[20,23]],[[20,23]],[[],4],[2],[[],1],[[],1],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],1],[[],1],[[],[[13,[3]]]],[[],[[13,[3]]]],[[],1],[[]],[[]],[[],25],[[],1],[[],1],[[],1],[[],1],[3,1],[[],26],[[],26],[[],1],[2],[2],0,[[],1],[[],1],[4,1],[[19,4],1],[[],1],[2,1],[[[27,[18]]],1],[[],1],[19,1],[5,1],[[],1],[19,1],[6,1],[7,1],[[19,7],1],[8,1],[[19,8],1],[9,1],[10,1],[11,1],[[19,11],1],[12,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[2,1],[[19,2],1],[25,1],[15,1],[[19,15],1],[16,1],[14,1],[17,1],[[19,17],1],[18,1],[[],1],[19,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[[[54,[53,53]]],[[54,[53,53]]]],[[[55,[53]]],[[55,[53]]]],[[[56,[53]]],[[56,[53]]]],[[[57,[53]]],[[57,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[37,2],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[[57,2],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[[57,2],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[[57,2],1],[[28,3],1],[[29,3],1],[[30,3],1],[[31,3],1],[[32,3],1],[[33,3],1],[[34,3],1],[[35,3],1],[[36,3],1],[[38,3],1],[[39,3],1],[[40,3],1],[[41,3],1],[[42,3],1],[[43,3],1],[[44,3],1],[[45,3],1],[[46,3],1],[[47,3],1],[[48,3],1],[[49,3],1],[[50,3],1],[[51,3],1],[[52,3],1],[[54,3],1],[[55,3],1],[[56,3],1],[[57,3],1],[[28,2,3],1],[[29,2,3],1],[[30,2,3],1],[[31,2,3],1],[[32,2,3],1],[[33,2,3],1],[[34,2,3],1],[[35,2,3],1],[[36,2,3],1],[[38,2,3],1],[[39,2,3],1],[[40,2,3],1],[[41,2,3],1],[[42,2,3],1],[[43,2,3],1],[[44,2,3],1],[[45,2,3],1],[[46,2,3],1],[[47,2,3],1],[[48,2,3],1],[[49,2,3],1],[[50,2,3],1],[[51,2,3],1],[[52,2,3],1],[[54,2,3],1],[[55,2,3],1],[[56,2,3],1],[[57,2,3],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[57,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[[57,2],1],[36,1],[54,1],[[37,37],4],[[28,21],22],[[29,21],22],[[30,21],22],[[31,21],22],[[32,21],22],[[33,21],22],[[34,21],22],[[35,21],22],[[36,21],22],[[37,21],22],[[37,21],22],[[38,21],22],[[39,21],22],[[40,21],22],[[41,21],22],[[42,21],22],[[43,21],22],[[44,21],22],[[45,21],22],[[46,21],22],[[47,21],22],[[48,21],22],[[49,21],22],[[50,21],22],[[51,21],22],[[52,21],22],[[54,21],22],[[[55,[58]],21],22],[[[56,[58]],21],22],[[[57,[58]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[14,29],[2,30],[2,31],[25,32],[[[59,[2]]],33],[[],34],[[],35],[[],36],[4,38],[12,39],[9,40],[10,41],[11,42],[60,43],[18,44],[16,45],[17,46],[3,47],[6,48],[7,49],[5,50],[8,51],[15,52],[[],54],[[],55],[[],56],[[],57],[36,[[1,[13]]]],[54,[[1,[13]]]],[36,[[1,[13]]]],[36,[[1,[13]]]],[36,1],[61],[36,[[13,[3]]]],[36,[[13,[3]]]],[54,[[13,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[29,1],[30,1],[31,1],[32,1],[33,1],[56,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],[[],1],[[],1],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[62,1],[[]],[[]],[[],4],[[],1],[4,1],[[],1],[5,1],[[],1],[[],1],[62,1],[62,1],[[],1],[6,1],[7,1],[[],1],[[],1],[2,1],[2,1],[[62,2],1],[[62,2],1],[62,1],[62,1],[8,1],[9,1],[10,1],[11,1],[12,1],[[],1],[62,1],[[[13,[3]]],1],[2,1],[[2,14,2],1],[[],1],[[[13,[3]]],1],[[],1],[2,1],[[2,3],1],[[2,14,2,3],1],[3,1],[[2,3],1],[[2,14,2,3],1],[15,1],[16,1],[14,1],[17,1],[18,1],[[],1],[2,1],[[2,14,2],1],[[],1],[62,1],[2,1],[2,1],[[],1],[[],1],[[],26]],"p":[[4,"Result"],[15,"str"],[15,"usize"],[15,"bool"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[3,"String"],[3,"TypeId"],[3,"Vec"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[8,"Clone"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[3,"Demand"],[3,"Impossible"],[8,"Deserializer"],[8,"Serializer"],[8,"Deserialize"],[8,"Serialize"],[8,"IntoDeserializer"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"DeserializeSeed"],[8,"Visitor"],[8,"Error"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[8,"Error"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Deserialize","Serialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[0,0],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","tn":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","fold","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_token","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Fold","fold_abi","fold_abi","fold_abi","fold_angle_bracketed_generic_arguments","fold_angle_bracketed_generic_arguments","fold_angle_bracketed_generic_arguments","fold_arm","fold_arm","fold_arm","fold_attr_style","fold_attr_style","fold_attr_style","fold_attribute","fold_attribute","fold_attribute","fold_bare_fn_arg","fold_bare_fn_arg","fold_bare_fn_arg","fold_bin_op","fold_bin_op","fold_bin_op","fold_binding","fold_binding","fold_binding","fold_block","fold_block","fold_block","fold_bound_lifetimes","fold_bound_lifetimes","fold_bound_lifetimes","fold_const_param","fold_const_param","fold_const_param","fold_constraint","fold_constraint","fold_constraint","fold_data","fold_data","fold_data","fold_data_enum","fold_data_enum","fold_data_enum","fold_data_struct","fold_data_struct","fold_data_struct","fold_data_union","fold_data_union","fold_data_union","fold_derive_input","fold_derive_input","fold_derive_input","fold_expr","fold_expr","fold_expr","fold_expr_array","fold_expr_array","fold_expr_array","fold_expr_assign","fold_expr_assign","fold_expr_assign","fold_expr_assign_op","fold_expr_assign_op","fold_expr_assign_op","fold_expr_async","fold_expr_async","fold_expr_async","fold_expr_await","fold_expr_await","fold_expr_await","fold_expr_binary","fold_expr_binary","fold_expr_binary","fold_expr_block","fold_expr_block","fold_expr_block","fold_expr_box","fold_expr_box","fold_expr_box","fold_expr_break","fold_expr_break","fold_expr_break","fold_expr_call","fold_expr_call","fold_expr_call","fold_expr_cast","fold_expr_cast","fold_expr_cast","fold_expr_closure","fold_expr_closure","fold_expr_closure","fold_expr_continue","fold_expr_continue","fold_expr_continue","fold_expr_field","fold_expr_field","fold_expr_field","fold_expr_for_loop","fold_expr_for_loop","fold_expr_for_loop","fold_expr_group","fold_expr_group","fold_expr_group","fold_expr_if","fold_expr_if","fold_expr_if","fold_expr_index","fold_expr_index","fold_expr_index","fold_expr_let","fold_expr_let","fold_expr_let","fold_expr_lit","fold_expr_lit","fold_expr_lit","fold_expr_loop","fold_expr_loop","fold_expr_loop","fold_expr_macro","fold_expr_macro","fold_expr_macro","fold_expr_match","fold_expr_match","fold_expr_match","fold_expr_method_call","fold_expr_method_call","fold_expr_method_call","fold_expr_paren","fold_expr_paren","fold_expr_paren","fold_expr_path","fold_expr_path","fold_expr_path","fold_expr_range","fold_expr_range","fold_expr_range","fold_expr_reference","fold_expr_reference","fold_expr_reference","fold_expr_repeat","fold_expr_repeat","fold_expr_repeat","fold_expr_return","fold_expr_return","fold_expr_return","fold_expr_struct","fold_expr_struct","fold_expr_struct","fold_expr_try","fold_expr_try","fold_expr_try","fold_expr_try_block","fold_expr_try_block","fold_expr_try_block","fold_expr_tuple","fold_expr_tuple","fold_expr_tuple","fold_expr_type","fold_expr_type","fold_expr_type","fold_expr_unary","fold_expr_unary","fold_expr_unary","fold_expr_unsafe","fold_expr_unsafe","fold_expr_unsafe","fold_expr_while","fold_expr_while","fold_expr_while","fold_expr_yield","fold_expr_yield","fold_expr_yield","fold_field","fold_field","fold_field","fold_field_pat","fold_field_pat","fold_field_pat","fold_field_value","fold_field_value","fold_field_value","fold_fields","fold_fields","fold_fields","fold_fields_named","fold_fields_named","fold_fields_named","fold_fields_unnamed","fold_fields_unnamed","fold_fields_unnamed","fold_file","fold_file","fold_file","fold_fn_arg","fold_fn_arg","fold_fn_arg","fold_foreign_item","fold_foreign_item","fold_foreign_item","fold_foreign_item_fn","fold_foreign_item_fn","fold_foreign_item_fn","fold_foreign_item_macro","fold_foreign_item_macro","fold_foreign_item_macro","fold_foreign_item_static","fold_foreign_item_static","fold_foreign_item_static","fold_foreign_item_type","fold_foreign_item_type","fold_foreign_item_type","fold_generic_argument","fold_generic_argument","fold_generic_argument","fold_generic_method_argument","fold_generic_method_argument","fold_generic_method_argument","fold_generic_param","fold_generic_param","fold_generic_param","fold_generics","fold_generics","fold_generics","fold_ident","fold_ident","fold_ident","fold_impl_item","fold_impl_item","fold_impl_item","fold_impl_item_const","fold_impl_item_const","fold_impl_item_const","fold_impl_item_macro","fold_impl_item_macro","fold_impl_item_macro","fold_impl_item_method","fold_impl_item_method","fold_impl_item_method","fold_impl_item_type","fold_impl_item_type","fold_impl_item_type","fold_index","fold_index","fold_index","fold_item","fold_item","fold_item","fold_item_const","fold_item_const","fold_item_const","fold_item_enum","fold_item_enum","fold_item_enum","fold_item_extern_crate","fold_item_extern_crate","fold_item_extern_crate","fold_item_fn","fold_item_fn","fold_item_fn","fold_item_foreign_mod","fold_item_foreign_mod","fold_item_foreign_mod","fold_item_impl","fold_item_impl","fold_item_impl","fold_item_macro","fold_item_macro","fold_item_macro","fold_item_macro2","fold_item_macro2","fold_item_macro2","fold_item_mod","fold_item_mod","fold_item_mod","fold_item_static","fold_item_static","fold_item_static","fold_item_struct","fold_item_struct","fold_item_struct","fold_item_trait","fold_item_trait","fold_item_trait","fold_item_trait_alias","fold_item_trait_alias","fold_item_trait_alias","fold_item_type","fold_item_type","fold_item_type","fold_item_union","fold_item_union","fold_item_union","fold_item_use","fold_item_use","fold_item_use","fold_label","fold_label","fold_label","fold_lifetime","fold_lifetime","fold_lifetime","fold_lifetime_def","fold_lifetime_def","fold_lifetime_def","fold_lit","fold_lit","fold_lit","fold_lit_bool","fold_lit_bool","fold_lit_bool","fold_lit_byte","fold_lit_byte","fold_lit_byte","fold_lit_byte_str","fold_lit_byte_str","fold_lit_byte_str","fold_lit_char","fold_lit_char","fold_lit_char","fold_lit_float","fold_lit_float","fold_lit_float","fold_lit_int","fold_lit_int","fold_lit_int","fold_lit_str","fold_lit_str","fold_lit_str","fold_local","fold_local","fold_local","fold_macro","fold_macro","fold_macro","fold_macro_delimiter","fold_macro_delimiter","fold_macro_delimiter","fold_member","fold_member","fold_member","fold_meta","fold_meta","fold_meta","fold_meta_list","fold_meta_list","fold_meta_list","fold_meta_name_value","fold_meta_name_value","fold_meta_name_value","fold_method_turbofish","fold_method_turbofish","fold_method_turbofish","fold_nested_meta","fold_nested_meta","fold_nested_meta","fold_parenthesized_generic_arguments","fold_parenthesized_generic_arguments","fold_parenthesized_generic_arguments","fold_pat","fold_pat","fold_pat","fold_pat_box","fold_pat_box","fold_pat_box","fold_pat_ident","fold_pat_ident","fold_pat_ident","fold_pat_lit","fold_pat_lit","fold_pat_lit","fold_pat_macro","fold_pat_macro","fold_pat_macro","fold_pat_or","fold_pat_or","fold_pat_or","fold_pat_path","fold_pat_path","fold_pat_path","fold_pat_range","fold_pat_range","fold_pat_range","fold_pat_reference","fold_pat_reference","fold_pat_reference","fold_pat_rest","fold_pat_rest","fold_pat_rest","fold_pat_slice","fold_pat_slice","fold_pat_slice","fold_pat_struct","fold_pat_struct","fold_pat_struct","fold_pat_tuple","fold_pat_tuple","fold_pat_tuple","fold_pat_tuple_struct","fold_pat_tuple_struct","fold_pat_tuple_struct","fold_pat_type","fold_pat_type","fold_pat_type","fold_pat_wild","fold_pat_wild","fold_pat_wild","fold_path","fold_path","fold_path","fold_path_arguments","fold_path_arguments","fold_path_arguments","fold_path_segment","fold_path_segment","fold_path_segment","fold_predicate_eq","fold_predicate_eq","fold_predicate_eq","fold_predicate_lifetime","fold_predicate_lifetime","fold_predicate_lifetime","fold_predicate_type","fold_predicate_type","fold_predicate_type","fold_qself","fold_qself","fold_qself","fold_range_limits","fold_range_limits","fold_range_limits","fold_receiver","fold_receiver","fold_receiver","fold_return_type","fold_return_type","fold_return_type","fold_signature","fold_signature","fold_signature","fold_span","fold_span","fold_span","fold_stmt","fold_stmt","fold_stmt","fold_trait_bound","fold_trait_bound","fold_trait_bound","fold_trait_bound_modifier","fold_trait_bound_modifier","fold_trait_bound_modifier","fold_trait_item","fold_trait_item","fold_trait_item","fold_trait_item_const","fold_trait_item_const","fold_trait_item_const","fold_trait_item_macro","fold_trait_item_macro","fold_trait_item_macro","fold_trait_item_method","fold_trait_item_method","fold_trait_item_method","fold_trait_item_type","fold_trait_item_type","fold_trait_item_type","fold_type","fold_type","fold_type","fold_type_array","fold_type_array","fold_type_array","fold_type_bare_fn","fold_type_bare_fn","fold_type_bare_fn","fold_type_group","fold_type_group","fold_type_group","fold_type_impl_trait","fold_type_impl_trait","fold_type_impl_trait","fold_type_infer","fold_type_infer","fold_type_infer","fold_type_macro","fold_type_macro","fold_type_macro","fold_type_never","fold_type_never","fold_type_never","fold_type_param","fold_type_param","fold_type_param","fold_type_param_bound","fold_type_param_bound","fold_type_param_bound","fold_type_paren","fold_type_paren","fold_type_paren","fold_type_path","fold_type_path","fold_type_path","fold_type_ptr","fold_type_ptr","fold_type_ptr","fold_type_reference","fold_type_reference","fold_type_reference","fold_type_slice","fold_type_slice","fold_type_slice","fold_type_trait_object","fold_type_trait_object","fold_type_trait_object","fold_type_tuple","fold_type_tuple","fold_type_tuple","fold_un_op","fold_un_op","fold_un_op","fold_use_glob","fold_use_glob","fold_use_glob","fold_use_group","fold_use_group","fold_use_group","fold_use_name","fold_use_name","fold_use_name","fold_use_path","fold_use_path","fold_use_path","fold_use_rename","fold_use_rename","fold_use_rename","fold_use_tree","fold_use_tree","fold_use_tree","fold_variadic","fold_variadic","fold_variadic","fold_variant","fold_variant","fold_variant","fold_vis_crate","fold_vis_crate","fold_vis_crate","fold_vis_public","fold_vis_public","fold_vis_public","fold_vis_restricted","fold_vis_restricted","fold_vis_restricted","fold_visibility","fold_visibility","fold_visibility","fold_where_clause","fold_where_clause","fold_where_clause","fold_where_predicate","fold_where_predicate","fold_where_predicate","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","eq","error","error","error","extend","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","hash","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","eq","extend","extend","first","first_mut","fmt","from","from","from","from","from","from","from","from","from_iter","from_iter","hash","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["synsyn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::foldsyn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::spanned","","syn::tokend":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> …","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken …","The <code>self</code> argument of an associated method, whether taken …","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</codealue of the field.","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variantyntax tree traversal to transform the nodes of an owned …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Generics required to complete the definition.","If this path consists of a single ident, returns the identame of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the identifier that begins this structured meta …","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of the fieldeturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Syntax tree traversal to transform the nodes of an owned …rror returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,142,142,142,185,0,0,25,147,25,25,25,0,0,0,25,147,0,0,25,0,186,142,142,142,142,142,142,0,25,129,0,25,166,136,136,25,129,129,25,25,129,72,25,68,74,87,115,120,186,0,0,186,25,338,21,0,0,0,0,165,143,0,142,142,87,138,83,142,0,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,25,0,0,0,0,0,0,129,87,110,0,25,0,0,0,0,0,87,142,0,0,0,0,104,25,104,147,142,72,0,0,166,25,87,0,0,0,0,0,0,147,0,25,147,21,11,129,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,25,0,74,79,83,186,0,12,0,15,25,166,0,0,0,0,0,0,0,0,145,25,142,0,25,87,110,115,120,147,166,87,0,25,81,0,0,15,0,0,115,120,25,0,87,142,142,104,12,17,65,142,143,0,147,81,185,143,142,166,11,25,136,147,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,25,104,147,166,0,0,0,0,0,147,21,0,25,166,0,338,0,126,25,147,166,142,142,104,25,166,21,0,25,0,145,142,142,142,142,0,147,166,87,110,0,129,0,25,87,138,166,142,142,0,79,87,87,0,0,0,0,0,0,0,147,25,25,25,147,166,166,0,0,25,68,74,83,87,110,115,120,165,166,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,0,25,87,138,17,17,65,25,87,0,0,0,0,0,0,0,0,25,87,110,115,120,129,147,166,0,0,0,0,0,0,25,166,25,92,125,149,53,158,174,9,35,49,67,187,184,48,36,107,191,1,29,37,125,16,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,71,75,76,77,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,113,114,116,117,118,119,121,122,123,124,127,128,137,146,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,99,30,135,154,30,39,3,5,3,5,29,32,58,62,91,122,37,40,46,63,71,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,84,75,76,84,85,100,118,151,160,189,33,167,18,48,56,89,92,93,99,109,140,144,177,0,10,26,43,54,148,159,176,0,34,0,168,29,37,171,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,8,9,67,105,187,20,60,69,70,75,76,77,84,85,88,97,99,112,116,118,121,180,182,189,71,42,63,73,73,77,88,116,121,157,125,96,38,23,90,0,0,137,73,78,185,75,77,116,117,118,93,121,122,123,135,16,56,175,177,30,39,49,164,160,148,150,155,157,158,159,26,59,161,176,178,42,89,140,7,1,2,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,14,27,44,75,77,86,88,97,100,101,121,123,188,33,34,36,40,41,43,44,48,50,53,54,55,57,60,61,64,69,88,97,121,169,0,90,162,71,16,56,98,102,139,141,177,7,1,2,8,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,3,5,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,125,149,0,40,78,7,1,2,8,8,8,8,8,8,8,9,10,11,12,12,12,12,13,14,15,15,15,16,17,17,17,18,19,20,21,21,21,21,22,23,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,65,65,66,66,67,68,69,70,71,72,73,74,74,74,74,75,75,76,77,78,79,79,79,80,81,82,83,83,83,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,104,104,104,104,104,105,106,107,108,109,110,110,110,110,110,111,112,113,114,115,115,115,115,115,116,117,118,119,120,120,120,120,120,121,122,123,124,125,126,126,126,127,128,129,129,129,129,129,129,129,129,130,131,132,133,3,3,5,5,134,338,135,136,137,137,137,137,138,138,138,138,139,140,141,142,143,144,145,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,183,184,184,185,186,187,188,189,190,191,52,35,89,93,98,99,100,101,102,118,123,125,137,183,41,150,67,73,78,187,191,71,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,173,9,16,20,75,77,88,89,90,94,95,96,97,98,99,100,101,102,105,106,107,112,113,116,118,121,123,125,137,168,184,188,189,42,93,151,24,40,43,66,146,37,125,149,190,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,17,17,17,17,185,183,185,92,93,99,109,128,17,17,32,34,38,40,46,63,103,183,171,27,28,31,17,54,148,44,146,86,127,76,85,158,73,78,80,84,149,73,52,173,14,45,173,46,67,73,78,187,191,47,94,114,119,124,153,170,95,73,48,39,69,182,49,96,80,37,53,97,112,127,157,158,168,174,70,162,163,18,13,8,9,76,129,130,131,132,133,3,5,134,8,28,31,61,37,37,37,125,149,190,73,13,19,24,35,49,50,59,80,125,149,155,161,178,190,0,0,0,8,9,12,13,14,15,16,18,19,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,130,131,132,133,3,5,134,135,137,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,183,184,186,187,188,189,190,0,8,10,10,135,135,0,10,0,10,183,20,10,0,0,0,20,130,144,25,8,9,40,44,71,146,167,174,179,180,182,12,10,13,14,24,51,56,80,135,156,172,177,179,191,10,82,22,24,0,51,156,172,57,53,125,49,127,90,107,56,55,86,27,28,31,95,183,127,93,96,54,88,90,94,97,98,100,101,103,111,112,113,114,116,117,118,119,121,123,124,139,146,148,8,9,129,130,131,132,133,3,5,134,128,91,111,117,122,7,1,2,8,8,8,9,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,129,130,130,131,131,132,132,133,133,3,3,5,5,134,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,66,134,0,73,108,157,97,112,144,98,139,10,168,129,130,131,132,133,3,5,99,42,52,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,8,9,3,5,7,1,2,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,0,130,131,132,133,3,5,134,10,135,93,99,100,103,105,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,58,49,20,36,60,77,88,97,101,112,116,121,123,163,180,188,191,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,338,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,73,73,101,113,118,123,152,181,102,141,19,8,62,93,99,125,149,103,130,131,132,133,134,134,125,149,89,140,20,88,89,90,91,95,96,97,98,99,100,101,102,103,111,112,113,121,122,123,137,73,82,63,147,151,160,165,64,0,0,220,220,221,220,221,221,221,221,221,221,220,221,221,221,220,221,221,221,220,220,221,221,221,221,221,221,220,221,220,221,220,221,0,339,339,339,0,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,340,340,0,0,0,216,0,0,0,0,0,0,0,223,227,223,224,226,225,227,223,224,226,225,223,224,225,224,225,225,223,224,0,223,226,227,223,224,225,223,223,226,225,225,223,227,223,224,226,225,225,226,227,223,224,226,225,225,225,225,223,223,225,225,213,223,216,226,216,216,223,227,223,223,223,225,223,225,223,225,224,225,223,225,227,223,224,226,225,227,223,224,226,225,227,223,224,226,225,0,341,238,0,0,0,0,0,0,0,0,238,232,235,240,236,237,207,208,238,232,235,240,236,237,207,208,238,232,232,235,236,237,207,238,232,235,236,237,207,238,232,232,232,232,232,232,232,232,232,235,240,236,237,207,208,238,232,232,232,232,232,232,232,235,240,236,237,207,208,238,232,232,232,235,240,236,237,207,208,232,238,238,232,232,232,232,232,232,235,240,236,237,207,208,232,238,235,240,236,237,207,208,235,240,236,237,207,208,232,232,232,232,232,232,232,238,238,232,232,232,235,240,236,237,207,208,232,238,232,235,236,237,207,238,232,238,232,232,235,240,236,237,207,208,238,232,235,240,236,237,207,208,238,232,235,240,236,237,207,208,238,238,238,0,342,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,288,290,293,294,295,297,299,300,302,303,307,310,312,315,318,319,322,325,330,331,333,203,288,290,293,294,295,297,299,300,302,303,307,310,312,315,318,319,322,325,330,331,333,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,334,335,336,337,203,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,203,241,242,243,244,245,246,247,248,249,250,200,251,252,253,254,255,199,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,198,202,274,275,201,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"fp":[[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitInt"],[15,"str"],[3,"LitFloat"],[6,"Result"],[3,"ImplGenerics"],[3,"Ident"],[3,"Lifetime"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[4,"Visibility"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[4,"Member"],[3,"Index"],[3,"MethodTurbofish"],[4,"GenericMethodArgument"],[3,"FieldValue"],[3,"Label"],[3,"Arm"],[4,"RangeLimits"],[3,"Generics"],[4,"GenericParam"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[4,"UseTree"],[3,"UsePath"],[3,"UseName"],[3,"UseRename"],[3,"UseGlob"],[3,"UseGroup"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Signature"],[4,"FnArg"],[3,"Receiver"],[3,"File"],[4,"Lit"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"Macro"],[4,"MacroDelimiter"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[4,"Stmt"],[3,"Local"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"Variadic"],[4,"ReturnType"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"SelfType"],[3,"Extern"],[3,"Crate"],[3,"Super"],[3,"SelfValue"],[3,"Underscore"],[15,"usize"],[3,"Literal"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Nothing"],[3,"Lookahead1"],[8,"Display"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Punctuated"],[8,"Peek"],[3,"Demand"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Debug"],[3,"PairsMut"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[4,"StrStyle"],[8,"IdentExt"],[8,"Fold"],[8,"Speculative"],[8,"Spanned"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"p":[[15,"char"],[15,"bool"]]},\
"vault":{"doc":"<code>vault</code> is a Company of Heroes 3 replay parser written with …","t":[13,13,13,4,13,3,3,6,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AfrikaKorps","Americans","British","Faction","First","Map","Message","ParseError","Player","Replay","Second","Team","Wehrmacht","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","faction","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","into","into","into","into","into","into","length","localized_description_id","localized_name_id","map","map_filename","map_localized_description_id","map_localized_name_id","matchhistory_id","message","messages","name","players","profile_id","steam_id","team","tick","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","version"],"q":["vault","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Company of Heroes 3 factions.","","Representation of all map-related information that can be …","Representation of a user-sent chat message in a Company of …","Represents a failure in parsing at some point in the …","Game-specific player representation. Includes generally …","A complete representation of all information able to be …","","Representation of a player’s team membership.","","","","","","","","","","","","","","","","","","","","","","","","The faction selected by the player in this match.","This is a “filename” in the sense that its structure …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes a byte slice, parses it as a CoH3 replay, and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A simple count of the number of ticks that were executed …","Entity ID that corresponds to a localization string that …","Entity ID that corresponds to a localization string that …","Map information for this match.","Filename of the map this match was played on. See …","Localization ID of the map’s description. See …","Localization ID of the map’s name. See …","The ID used by Relic to track this match on their internal …","UTF-16 encoded representation of the message sent by the …","A list of all messages sent by the player in the match. …","Name of the player at the time the replay was recorded. …","A list of all players who participated in this match.","The Relic profile ID of the player. This ID can be used to …","The Steam ID of the player. This ID can be used to …","The team the player was assigned to. Currently only …","This value is the tick at which the message was found …","A UTF-16 representation of the recording user’s local …","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer representation of the assigned team.","The Company of Heroes 3 game version this replay was …"],"i":[4,4,4,0,5,0,0,0,0,0,5,0,4,1,2,3,4,5,9,1,2,3,4,5,9,1,2,3,4,5,1,2,3,4,5,3,1,1,2,3,4,4,5,9,1,2,3,4,5,9,9,1,2,3,4,5,9,9,1,1,9,9,9,9,9,2,3,3,9,3,3,3,2,9,1,2,3,4,5,4,1,2,3,4,4,5,5,9,1,2,3,4,5,9,1,2,3,4,5,9,5,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[3,4],[1,6],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[4,7],8],[[5,7],8],[[9,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[9,12],[1,6],[1,6],[9,1],[9,6],[9,6],[9,6],[9,13],[2,6],[3,[[14,[2]]]],[3,6],[9,[[14,[3]]]],[3,13],[3,13],[3,5],[2,15],[9,6],[[]],[[]],[[]],[[]],[[]],[[],16],[[],11],[[],11],[[],11],[6,[[11,[4]]]],[[],11],[15,[[11,[5]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[5,12],[9,18]],"p":[[3,"Map"],[3,"Message"],[3,"Player"],[4,"Faction"],[4,"Team"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"Replay"],[6,"ParseError"],[4,"Result"],[15,"usize"],[15,"u64"],[3,"Vec"],[15,"u32"],[3,"String"],[3,"TypeId"],[15,"u16"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
