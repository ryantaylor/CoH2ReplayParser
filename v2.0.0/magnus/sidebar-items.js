window.SIDEBAR_ITEMS = {"attr":[["init","Mark a function as the ‘init’ function to be run for a library when it is `require`d by Ruby code."],["wrap","Allow a Rust type to be passed to Ruby, automatically wrapped as a Ruby object."]],"derive":[["DataTypeFunctions","Derives `DataTypeFunctions` with default implementations, for simple uses of [`TypedData`]."],["TypedData","Derives `TypedData`, allowing the type to be passed to Ruby automatically wrapped as a Ruby object."]],"fn":[["backref_get","Returns the result of the most recent regexp match."],["call_super","Call the super method of the current method context."],["current_receiver","Return the Ruby `self` of the current method context."],["define_class","Define a class in the root scope."],["define_error","Define an exception class in the root scope."],["define_global_const","Define a global constant."],["define_global_function","Define a method in the root scope."],["define_module","Define a module in the root scope."],["define_variable","Define a global variable."],["eval","Evaluate a string of Ruby code, converting the result to a `T`."],["require","Finds and loads the given feature if not already loaded."]],"macro":[["eval","Evaluate a literal string of Ruby code with the given local variables."],["function","Wrap a Rust function item with Ruby type conversion and error handling, ignoring Ruby’s `self` argument."],["memoize","Utility to simplify initialising a static with [`std::sync::Once`]."],["method","Wrap a Rust function item with Ruby type conversion and error handling."],["r_string","Create a [`RString`] from a Rust str literal."]],"mod":[["block","Types and functions for working with Ruby blocks and Procs."],["class","Types and functions for working with Ruby classes."],["encoding","Types and functions for working with encodings."],["error","Rust types for working with Ruby Exceptions and other interrupts."],["exception","Types and functions for working with Ruby exceptions."],["gc","Functions for working with Ruby’s Garbage Collector."],["method","Types and Traits for exposing Rust functions as Ruby methods."],["module","Types and functions for working with Ruby modules."],["numeric","Types and Traits for working with Ruby’s Numeric class."],["prelude","Traits that commonly should be in scope."],["r_hash","Types and functions for working with Ruby’s Hash class."],["r_regexp","Types for working with Ruby’s Regexp class."],["r_string","Types for working with Ruby’s String class."],["r_struct","Types and functions for working with Ruby’s Struct class."],["scan_args","Types and functions for complex method arguments."],["typed_data","Types and Traits for wrapping Rust types as Ruby objects."],["value","Types for working with Ruby’s VALUE type, representing all objects, and ‘immediate’ values such as Fixnum."]],"struct":[["Binding","A Value known to be an instance of Binding."],["Enumerator","Wrapper type for a Value known to be an instance of Ruby’s Enumerator class."],["Float","A type wrapping either a `Flonum` value or a Value known to be an instance of Float."],["Flonum","A Value known to be a flonum, Ruby’s internal representation of lower precision floating point numbers."],["Integer","A type wrapping either a [`Fixnum`] or a [`RBignum`]."],["RArray","A Value pointer to a RArray struct, Ruby’s internal representation of an Array."],["RBignum","A Value pointer to a RBignum struct, Ruby’s internal representation of large integers."],["RComplex","A Value pointer to a RComplex struct, Ruby’s internal representation of complex numbers."],["RFile","A Value pointer to a RFile struct, Ruby’s internal representation of files."],["RFloat","A Value pointer to a RFloat struct, Ruby’s internal representation of high precision floating point numbers."],["RMatch","A Value pointer to a RMatch struct, Ruby’s internal representation of the MatchData returned from a regex match."],["RObject","A Value pointer to a RObject struct, Ruby’s internal representation of generic objects, not covered by the other R* types."],["RRational","A Value pointer to a RRational struct, Ruby’s internal representation of rational numbers."],["RTypedData","A Value pointer to a RTypedData struct, Ruby’s internal representation of objects that wrap foreign types."],["Range","Wrapper type for a Value known to be an instance of Ruby’s Range class."],["Symbol","A type wrapping either a [`StaticSymbol`] or a Value pointer to a RSymbol struct."]],"trait":[["ArgList","Trait for types that can be used as an arguments list when calling Ruby methods."],["IntoValue","Conversions from Rust types into [`Value`]."],["IntoValueFromNative","Conversions from Rust types that do not contain [`Value`] into [`Value`]."],["Object","Functions available all non-immediate values."],["TryConvert","Conversions from [`Value`] to Rust types."]]};